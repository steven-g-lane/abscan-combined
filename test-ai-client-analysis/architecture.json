{
  "projectRoot": "/Users/slane/Documents/Code/electron/ai-client",
  "scannedAt": "2025-10-31T01:39:22.628Z",
  "files": [
    {
      "path": "debug-specific-positions.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "debugSpecificPositions",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/debug-specific-positions.ts",
              "line": 6,
              "column": 1,
              "endLine": 48
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "main.ts",
      "kind": "main",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "createWindow",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/main.ts",
              "line": 20,
              "column": 7,
              "endLine": 59
            },
            "parameters": [],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "test-citation-fix-verification.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "testCitationFixVerification",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/test-citation-fix-verification.ts",
              "line": 7,
              "column": 1,
              "endLine": 79
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "test-citation-positioning.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "createTestGroundingMetadata",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/test-citation-positioning.ts",
              "line": 8,
              "column": 1,
              "endLine": 91
            },
            "parameters": [],
            "returnType": "GroundingMetadata",
            "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\".GroundingMetadata",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testCitationPositioning",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/test-citation-positioning.ts",
              "line": 93,
              "column": 1,
              "endLine": 147
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "test-gemini-citations.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "testGeminiCitations",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/test-gemini-citations.ts",
              "line": 12,
              "column": 1,
              "endLine": 50
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "test-real-gemini-citations.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "testRealGeminiCitations",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/test-real-gemini-citations.ts",
              "line": 8,
              "column": 1,
              "endLine": 71
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "scripts/anthropic-files-poc.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "listAndAnalyzeFiles",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/anthropic-files-poc.ts",
              "line": 12,
              "column": 1,
              "endLine": 48
            },
            "parameters": [
              {
                "name": "fileManager",
                "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager\".AnthropicFileManager",
                "displayType": "AnthropicFileManager",
                "optional": false,
                "isRest": false
              },
              {
                "name": "listDescription",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "uploadAndAnalyzeFile",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/anthropic-files-poc.ts",
              "line": 50,
              "column": 1,
              "endLine": 77
            },
            "parameters": [
              {
                "name": "fileManager",
                "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager\".AnthropicFileManager",
                "displayType": "AnthropicFileManager",
                "optional": false,
                "isRest": false
              },
              {
                "name": "filePath",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              },
              {
                "name": "fileDescription",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "runAnthropicFilesPOC",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/anthropic-files-poc.ts",
              "line": 79,
              "column": 1,
              "endLine": 333
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "scripts/backup-db.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "formatBytes",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
              "line": 20,
              "column": 1,
              "endLine": 22
            },
            "parameters": [
              {
                "name": "bytes",
                "type": "number",
                "displayType": "number",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "formatDate",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
              "line": 24,
              "column": 1,
              "endLine": 26
            },
            "parameters": [
              {
                "name": "date",
                "type": "Date",
                "displayType": "Date",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "createBackup",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
              "line": 28,
              "column": 1,
              "endLine": 41
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "listBackups",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
              "line": 43,
              "column": 1,
              "endLine": 64
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "restoreBackup",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
              "line": 66,
              "column": 1,
              "endLine": 107
            },
            "parameters": [
              {
                "name": "filename",
                "type": "string",
                "displayType": "string",
                "optional": true,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "cleanupBackups",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
              "line": 109,
              "column": 1,
              "endLine": 144
            },
            "parameters": [
              {
                "name": "keepCountStr",
                "type": "string",
                "displayType": "string",
                "optional": true,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "askConfirmation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
              "line": 146,
              "column": 1,
              "endLine": 158
            },
            "parameters": [
              {
                "name": "question",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Promise<boolean>",
            "resolvedReturnType": "Promise<boolean>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "main",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
              "line": 161,
              "column": 1,
              "endLine": 197
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "scripts/migrate-files.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "askConfirmation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/migrate-files.ts",
              "line": 21,
              "column": 1,
              "endLine": 33
            },
            "parameters": [
              {
                "name": "question",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Promise<boolean>",
            "resolvedReturnType": "Promise<boolean>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "runMigration",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/migrate-files.ts",
              "line": 35,
              "column": 1,
              "endLine": 123
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "scripts/test-file-downloads.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "testFileDownload",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/test-file-downloads.ts",
              "line": 7,
              "column": 1,
              "endLine": 37
            },
            "parameters": [
              {
                "name": "url",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              },
              {
                "name": "description",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testAllUrls",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/test-file-downloads.ts",
              "line": 39,
              "column": 1,
              "endLine": 83
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "content-type",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/test-file-downloads.ts",
            "line": 15,
            "column": 37
          },
          "method": "get"
        },
        {
          "query": "content-length",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/test-file-downloads.ts",
            "line": 16,
            "column": 39
          },
          "method": "get"
        },
        {
          "query": "content-length",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/test-file-downloads.ts",
            "line": 19,
            "column": 29
          },
          "method": "get"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "scripts/test-real-import.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "testRealImport",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/test-real-import.ts",
              "line": 10,
              "column": 1,
              "endLine": 76
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/AnthropicProject.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "AnthropicProject",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
              "line": 7,
              "column": 1,
              "endLine": 102
            },
            "methods": [
              {
                "name": "addDocument",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 21,
                  "column": 5,
                  "endLine": 23
                },
                "parameters": [
                  {
                    "name": "document",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").DocumentBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ImageBlockParam",
                    "displayType": "ImageBlockParam",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addDocuments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 25,
                  "column": 5,
                  "endLine": 27
                },
                "parameters": [
                  {
                    "name": "documents",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").DocumentBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ImageBlockParam[]",
                    "displayType": "Array<ImageBlockParam>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "removeDocument",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 29,
                  "column": 5,
                  "endLine": 33
                },
                "parameters": [
                  {
                    "name": "index",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "clearDocuments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 35,
                  "column": 5,
                  "endLine": 37
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getDocuments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 39,
                  "column": 5,
                  "endLine": 41
                },
                "parameters": [],
                "returnType": "Array<Anthropic.Messages.DocumentBlockParam | Anthropic.Messages.ImageBlockParam>",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").DocumentBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ImageBlockParam[]",
                "displayReturnType": "Array<ImageBlockParam>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getDocumentCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 43,
                  "column": 5,
                  "endLine": 45
                },
                "parameters": [],
                "returnType": "number",
                "resolvedReturnType": "number",
                "displayReturnType": "number",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addTextDocument",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 69,
                  "column": 5,
                  "endLine": 73
                },
                "parameters": [
                  {
                    "name": "content",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addTextDocumentFromFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 75,
                  "column": 5,
                  "endLine": 79
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addPDFDocument",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 81,
                  "column": 5,
                  "endLine": 85
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addPDFDocumentFromFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 87,
                  "column": 5,
                  "endLine": 91
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageDocument",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 93,
                  "column": 5,
                  "endLine": 96
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageDocumentFromFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 98,
                  "column": 5,
                  "endLine": 101
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "mediaType",
                    "type": "\"image/jpeg\" | \"image/png\" | \"image/gif\" | \"image/webp\"",
                    "displayType": "'image/jpeg' | 'image/png' | 'image/gif' | 'image/webp'",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "_systemPrompt",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 8,
                  "column": 5,
                  "endLine": 8
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "_documents",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 9,
                  "column": 5,
                  "endLine": 9
                },
                "type": "Array<Anthropic.Messages.DocumentBlockParam | Anthropic.Messages.ImageBlockParam>",
                "displayType": "Array<ImageBlockParam>",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "_projectName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 10,
                  "column": 5,
                  "endLine": 10
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "_createdAt",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 11,
                  "column": 5,
                  "endLine": 11
                },
                "type": "Date",
                "displayType": "Date",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.ts",
                  "line": 13,
                  "column": 5,
                  "endLine": 18
                },
                "parameters": [
                  {
                    "name": "systemPrompt",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "projectName",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 75,
            "sourceFilename": "AnthropicProject.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/Models.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "Model",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
              "line": 9,
              "column": 1,
              "endLine": 90
            },
            "methods": [
              {
                "name": "getVendorByName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 57,
                  "column": 5,
                  "endLine": 59
                },
                "parameters": [
                  {
                    "name": "name",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Vendor | undefined",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/Models\".Vendor",
                "displayReturnType": "Vendor | undefined",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAllVendorNames",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 61,
                  "column": 5,
                  "endLine": 63
                },
                "parameters": [],
                "returnType": "string[]",
                "resolvedReturnType": "string[]",
                "displayReturnType": "string[]",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getModelById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 65,
                  "column": 5,
                  "endLine": 71
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Model | undefined",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/Models\".Model",
                "displayReturnType": "Model | undefined",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getModelsByVendor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 73,
                  "column": 5,
                  "endLine": 76
                },
                "parameters": [
                  {
                    "name": "vendorName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Model[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/Models\").Model[]",
                "displayReturnType": "Model[]",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAllModels",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 78,
                  "column": 5,
                  "endLine": 80
                },
                "parameters": [],
                "returnType": "Model[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/Models\").Model[]",
                "displayReturnType": "Model[]",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorForModel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 82,
                  "column": 5,
                  "endLine": 89
                },
                "parameters": [
                  {
                    "name": "modelId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 10,
                  "column": 5,
                  "endLine": 10
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "public"
              },
              {
                "name": "friendlyName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 11,
                  "column": 5,
                  "endLine": 11
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "public"
              },
              {
                "name": "description",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 12,
                  "column": 5,
                  "endLine": 12
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "public"
              },
              {
                "name": "tier",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 13,
                  "column": 5,
                  "endLine": 13
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "public"
              },
              {
                "name": "SUPPORTED_VENDORS",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 22,
                  "column": 5,
                  "endLine": 55
                },
                "type": "Vendor[]",
                "displayType": "Vendor[]",
                "isStatic": true,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 15,
                  "column": 5,
                  "endLine": 20
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "friendlyName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "description",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "tier",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 74,
            "sourceFilename": "Models.ts"
          }
        ],
        "interfaces": [
          {
            "name": "Vendor",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
              "line": 4,
              "column": 1
            },
            "properties": [
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 5,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "models",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
                  "line": 6,
                  "column": 5
                },
                "type": "Model[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/SettingsService.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "SettingsService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
              "line": 11,
              "column": 1,
              "endLine": 148
            },
            "methods": [
              {
                "name": "loadSettings",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 18,
                  "column": 5,
                  "endLine": 39
                },
                "parameters": [],
                "returnType": "Promise<SettingsConfig>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\").SettingsConfig>",
                "displayReturnType": "Promise<SettingsConfig>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "saveSettings",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 41,
                  "column": 5,
                  "endLine": 48
                },
                "parameters": [
                  {
                    "name": "config",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\".SettingsConfig",
                    "displayType": "SettingsConfig",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addApiKey",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 50,
                  "column": 5,
                  "endLine": 64
                },
                "parameters": [
                  {
                    "name": "apiKey",
                    "type": "__type",
                    "displayType": "Omit<ApiKey, 'id' | 'keyPreview' | 'createdAt'>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<ApiKey>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\").ApiKey>",
                "displayReturnType": "Promise<ApiKey>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "removeApiKey",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 66,
                  "column": 5,
                  "endLine": 77
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getApiKeys",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 79,
                  "column": 5,
                  "endLine": 82
                },
                "parameters": [],
                "returnType": "Promise<ApiKey[]>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\").ApiKey[]>",
                "displayReturnType": "Promise<ApiKey[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getApiKeyById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 85,
                  "column": 5,
                  "endLine": 88
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<ApiKey | undefined>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\").ApiKey>",
                "displayReturnType": "Promise<ApiKey | undefined>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getShowTurnCounter",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 90,
                  "column": 5,
                  "endLine": 93
                },
                "parameters": [],
                "returnType": "Promise<boolean>",
                "resolvedReturnType": "Promise<boolean>",
                "displayReturnType": "Promise<boolean>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setShowTurnCounter",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 95,
                  "column": 5,
                  "endLine": 99
                },
                "parameters": [
                  {
                    "name": "show",
                    "type": "false | true",
                    "displayType": "boolean",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLoggingConfig",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 101,
                  "column": 5,
                  "endLine": 104
                },
                "parameters": [],
                "returnType": "Promise<LoggingConfig>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\").LoggingConfig>",
                "displayReturnType": "Promise<LoggingConfig>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setLoggingConfig",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 106,
                  "column": 5,
                  "endLine": 110
                },
                "parameters": [
                  {
                    "name": "loggingConfig",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\".LoggingConfig",
                    "displayType": "LoggingConfig",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getApiLoggingEnabled",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 112,
                  "column": 5,
                  "endLine": 115
                },
                "parameters": [],
                "returnType": "Promise<boolean>",
                "resolvedReturnType": "Promise<boolean>",
                "displayReturnType": "Promise<boolean>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setApiLoggingEnabled",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 117,
                  "column": 5,
                  "endLine": 121
                },
                "parameters": [
                  {
                    "name": "enabled",
                    "type": "false | true",
                    "displayType": "boolean",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createDefaultSettings",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 123,
                  "column": 5,
                  "endLine": 129
                },
                "parameters": [],
                "returnType": "SettingsConfig",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\".SettingsConfig",
                "displayReturnType": "SettingsConfig",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getDefaultLoggingConfig",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 131,
                  "column": 5,
                  "endLine": 137
                },
                "parameters": [],
                "returnType": "LoggingConfig",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/settings\".LoggingConfig",
                "displayReturnType": "LoggingConfig",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "generateKeyPreview",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 139,
                  "column": 5,
                  "endLine": 147
                },
                "parameters": [
                  {
                    "name": "key",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "settingsPath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 12,
                  "column": 5,
                  "endLine": 12
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
                  "line": 14,
                  "column": 5,
                  "endLine": 16
                },
                "parameters": [
                  {
                    "name": "settingsFileName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "'settings.json'",
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 108,
            "sourceFilename": "SettingsService.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/constants.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "getVendorByName",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/constants.ts",
              "line": 44,
              "column": 14,
              "endLine": 46
            },
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Vendor | undefined",
            "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/constants\".Vendor",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "getAllVendorNames",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/constants.ts",
              "line": 48,
              "column": 14,
              "endLine": 50
            },
            "parameters": [],
            "returnType": "string[]",
            "resolvedReturnType": "string[]",
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "Vendor",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/constants.ts",
              "line": 4,
              "column": 1
            },
            "properties": [
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/constants.ts",
                  "line": 5,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "models",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/constants.ts",
                  "line": 6,
                  "column": 5
                },
                "type": "string[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/logger.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "createConversationLogger",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/logger.ts",
              "line": 42,
              "column": 1,
              "endLine": 44
            },
            "parameters": [
              {
                "name": "conversationId",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/ui-utils.ts",
      "kind": "renderer",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "populateSelect",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ui-utils.ts",
              "line": 10,
              "column": 1,
              "endLine": 23
            },
            "parameters": [
              {
                "name": "selectElement",
                "type": "HTMLSelectElement",
                "displayType": "HTMLSelectElement",
                "optional": false,
                "isRest": false,
                "description": "- The select element to populate"
              },
              {
                "name": "options",
                "type": "string[]",
                "displayType": "string[]",
                "optional": false,
                "isRest": false,
                "description": "- Array of option values/text"
              },
              {
                "name": "placeholderText",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false,
                "description": "- Text for the default placeholder option"
              }
            ],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": true,
            "jsdocDescription": "Populates a select element with options from a string array",
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/utils.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "validateUrl",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils.ts",
              "line": 13,
              "column": 1,
              "endLine": 21
            },
            "parameters": [
              {
                "name": "url",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false,
                "description": "- The URL string to validate"
              }
            ],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": true,
            "jsdocDescription": "Validates whether a given string is a properly formatted HTTP/HTTPS URL",
            "isReactComponent": false
          },
          {
            "name": "getProjectRoot",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils.ts",
              "line": 29,
              "column": 1,
              "endLine": 47
            },
            "parameters": [],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": true,
            "jsdocDescription": "Gets the project root directory path by searching upward for package.json\nStarting from process.cwd() works in both ES module and bundled CommonJS contexts",
            "isReactComponent": false
          },
          {
            "name": "resolveFromProjectRoot",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils.ts",
              "line": 54,
              "column": 1,
              "endLine": 57
            },
            "parameters": [
              {
                "name": "relativePath",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false,
                "description": "- Path relative to project root (e.g., 'logs/ai-client.log')"
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": true,
            "jsdocDescription": "Resolves a path relative to the project root",
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "tests/conversation-flow-test.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "assert",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 30,
              "column": 1,
              "endLine": 34
            },
            "parameters": [
              {
                "name": "condition",
                "type": "false | true",
                "displayType": "boolean",
                "optional": false,
                "isRest": false
              },
              {
                "name": "message",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "assertEqual",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 36,
              "column": 1,
              "endLine": 40
            },
            "parameters": [
              {
                "name": "actual",
                "type": "any",
                "displayType": "any",
                "optional": false,
                "isRest": false
              },
              {
                "name": "expected",
                "type": "any",
                "displayType": "any",
                "optional": false,
                "isRest": false
              },
              {
                "name": "message",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "assertDefined",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 42,
              "column": 1,
              "endLine": 46
            },
            "parameters": [
              {
                "name": "value",
                "type": "any",
                "displayType": "any",
                "optional": false,
                "isRest": false
              },
              {
                "name": "message",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "assertGreaterThan",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 48,
              "column": 1,
              "endLine": 52
            },
            "parameters": [
              {
                "name": "actual",
                "type": "number",
                "displayType": "number",
                "optional": false,
                "isRest": false
              },
              {
                "name": "expected",
                "type": "number",
                "displayType": "number",
                "optional": false,
                "isRest": false
              },
              {
                "name": "message",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "extractMessageContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 55,
              "column": 1,
              "endLine": 72
            },
            "parameters": [
              {
                "name": "message",
                "type": "any",
                "displayType": "any",
                "optional": false,
                "isRest": false
              },
              {
                "name": "vendor",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "runTest",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 75,
              "column": 1,
              "endLine": 88
            },
            "parameters": [
              {
                "name": "name",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              },
              {
                "name": "testFn",
                "type": "__type",
                "displayType": "() => Promise<void>",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "setup",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 91,
              "column": 1,
              "endLine": 109
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testConversationCreation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 112,
              "column": 1,
              "endLine": 125
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testEmptyHistory",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 128,
              "column": 1,
              "endLine": 137
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testCompleteFlow",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 140,
              "column": 1,
              "endLine": 219
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testOpenAIFlow",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 222,
              "column": 1,
              "endLine": 266
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testOpenAIMultiTurnFlow",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 269,
              "column": 1,
              "endLine": 308
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testGeminiFlow",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 311,
              "column": 1,
              "endLine": 416
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testFollowUpFlow",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 419,
              "column": 1,
              "endLine": 465
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "testErrorHandling",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 468,
              "column": 1,
              "endLine": 486
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "main",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 489,
              "column": 1,
              "endLine": 539
            },
            "parameters": [],
            "returnType": "Promise<void>",
            "resolvedReturnType": "Promise<void>",
            "isExported": false,
            "isReactComponent": false
          }
        ],
        "types": [
          {
            "name": "HistoryResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 26,
              "column": 1
            },
            "type": "{ success: boolean; history?: any[]; error?: string }"
          },
          {
            "name": "SendMessageResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
              "line": 27,
              "column": 1
            },
            "type": "{ success: boolean; response?: string; error?: string }"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/constants/roles.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "types": [
          {
            "name": "AnthropicRole",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.ts",
              "line": 21,
              "column": 1
            },
            "type": "typeof ANTHROPIC_ROLES.USER | typeof ANTHROPIC_ROLES.ASSISTANT"
          },
          {
            "name": "OpenAIRole",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.ts",
              "line": 22,
              "column": 1
            },
            "type": "typeof OPENAI_ROLES.USER | typeof OPENAI_ROLES.ASSISTANT | typeof OPENAI_ROLES.SYSTEM"
          },
          {
            "name": "GeminiRole",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.ts",
              "line": 23,
              "column": 1
            },
            "type": "typeof GEMINI_ROLES.USER | typeof GEMINI_ROLES.ASSISTANT"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/constants/tokens.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "src/config/constants.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "src/data/mockLogs.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "getLogsByType",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
              "line": 422,
              "column": 14,
              "endLine": 424
            },
            "parameters": [
              {
                "name": "type",
                "type": "\"request\" | \"response\" | \"error\"",
                "displayType": "ApiLogEntry['type']",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "ApiLogEntry[]",
            "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs\").ApiLogEntry[]",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "getLogsByVendor",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
              "line": 426,
              "column": 14,
              "endLine": 428
            },
            "parameters": [
              {
                "name": "vendor",
                "type": "\"Anthropic\" | \"OpenAI\" | \"Gemini\"",
                "displayType": "ApiLogEntry['vendor']",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "ApiLogEntry[]",
            "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs\").ApiLogEntry[]",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "getLogsByTimeRange",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
              "line": 430,
              "column": 14,
              "endLine": 437
            },
            "parameters": [
              {
                "name": "startTime",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              },
              {
                "name": "endTime",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "ApiLogEntry[]",
            "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs\").ApiLogEntry[]",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "getErrorLogs",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
              "line": 439,
              "column": 14,
              "endLine": 441
            },
            "parameters": [],
            "returnType": "ApiLogEntry[]",
            "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs\").ApiLogEntry[]",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "getRequestLogs",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
              "line": 443,
              "column": 14,
              "endLine": 445
            },
            "parameters": [],
            "returnType": "ApiLogEntry[]",
            "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs\").ApiLogEntry[]",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "getResponseLogs",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
              "line": 447,
              "column": 14,
              "endLine": 449
            },
            "parameters": [],
            "returnType": "ApiLogEntry[]",
            "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs\").ApiLogEntry[]",
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "ApiLogEntry",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
              "line": 4,
              "column": 1
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 5,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 6,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 7,
                  "column": 3
                },
                "type": "'request' | 'response' | 'error'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 8,
                  "column": 3
                },
                "type": "'Anthropic' | 'OpenAI' | 'Gemini'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "model",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 9,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "method",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "headers",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "Record<string, string>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "body",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 13,
                  "column": 3
                },
                "type": "any",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "response",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 14,
                  "column": 3
                },
                "type": "{\n    status: number;\n    statusText: string;\n    headers: Record<string, string>;\n    data: any;\n  }",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "{\n    message: string;\n    code?: string;\n    stack?: string;\n  }",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "duration",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 25,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "tokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
                  "line": 26,
                  "column": 3
                },
                "type": "{\n    input?: number;\n    output?: number;\n    total?: number;\n  }",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/database/DatabaseService.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "DatabaseService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
              "line": 14,
              "column": 1,
              "endLine": 487
            },
            "methods": [
              {
                "name": "getInstance",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 28,
                  "column": 3,
                  "endLine": 42
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "'menagerie'",
                    "isRest": false
                  }
                ],
                "returnType": "DatabaseService",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                "displayReturnType": "DatabaseService",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "initialize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 44,
                  "column": 3,
                  "endLine": 102
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "closeInstance",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 105,
                  "column": 3,
                  "endLine": 113
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "'menagerie'",
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "closeAllInstances",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 116,
                  "column": 3,
                  "endLine": 121
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "initializeDatabase",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 123,
                  "column": 3,
                  "endLine": 240
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addMissingColumns",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 242,
                  "column": 3,
                  "endLine": 295
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "seedReferenceData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 297,
                  "column": 3,
                  "endLine": 466
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getDb",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 468,
                  "column": 3,
                  "endLine": 473
                },
                "parameters": [],
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getSqlite",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 475,
                  "column": 3,
                  "endLine": 480
                },
                "parameters": [],
                "returnType": "Database.Database",
                "resolvedReturnType": "Database.Database",
                "displayReturnType": "Database",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "close",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 482,
                  "column": 3,
                  "endLine": 486
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "instances",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 15,
                  "column": 3,
                  "endLine": 15
                },
                "type": "Map<string, DatabaseService>",
                "displayType": "Map<string, DatabaseService>",
                "isStatic": true,
                "visibility": "private"
              },
              {
                "name": "db",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 16,
                  "column": 3,
                  "endLine": 16
                },
                "type": "ReturnType<typeof drizzle>",
                "displayType": "ReturnType<typeof drizzle>",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "sqlite",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 17,
                  "column": 3,
                  "endLine": 17
                },
                "type": "Database.Database",
                "displayType": "Database",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "initialized",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 18,
                  "column": 3,
                  "endLine": 18
                },
                "type": "boolean",
                "displayType": "boolean",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 19,
                  "column": 3,
                  "endLine": 19
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 20,
                  "column": 3,
                  "endLine": 20
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
                  "line": 22,
                  "column": 3,
                  "endLine": 26
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 401,
            "sourceFilename": "DatabaseService.ts"
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "key",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 41,
            "column": 12
          },
          "method": "get"
        },
        {
          "query": "key",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 107,
            "column": 22
          },
          "method": "get"
        },
        {
          "query": "foreign_keys = ON",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 129,
            "column": 5
          },
          "method": "pragma"
        },
        {
          "query": "`\n      CREATE TABLE IF NOT EXISTS vendors (\n        id TEXT PRIMARY KEY,\n        name TEXT NOT NULL UNIQUE,\n        created_at TEXT DEFAULT (datetime('now')) NOT NULL,\n        updated_at TEXT DEFAULT (datetime('now')) NOT NULL\n      );\n\n      CREATE TABLE IF NOT EXISTS models (\n        id TEXT PRIMARY KEY,\n        vendor_id TEXT NOT NULL REFERENCES vendors(id),\n        name TEXT NOT NULL,\n        display_name TEXT NOT NULL,\n        vendor_data TEXT,\n        created_at TEXT DEFAULT (datetime('now')) NOT NULL,\n        updated_at TEXT DEFAULT (datetime('now')) NOT NULL\n      );\n\n      CREATE TABLE IF NOT EXISTS conversations (\n        id TEXT PRIMARY KEY,\n        vendor_id TEXT NOT NULL REFERENCES vendors(id),\n        vendor_conversation_id TEXT,\n        vendor_project_id TEXT,\n        model_id TEXT NOT NULL REFERENCES models(id),\n        name TEXT NOT NULL,\n        vendor_data TEXT,\n        model_max_tokens INTEGER,\n        is_starred INTEGER DEFAULT 0 NOT NULL,\n        is_temporary INTEGER DEFAULT 1 NOT NULL,\n        created_at TEXT DEFAULT (datetime('now')) NOT NULL,\n        updated_at TEXT DEFAULT (datetime('now')) NOT NULL\n      );\n\n      CREATE TABLE IF NOT EXISTS messages (\n        id TEXT PRIMARY KEY,\n        conversation_id TEXT NOT NULL REFERENCES conversations(id),\n        vendor_message_id TEXT,\n        vendor_parent_uuid TEXT,\n        role TEXT NOT NULL,\n        content TEXT NOT NULL,\n        sequence INTEGER NOT NULL,\n        vendor_data TEXT,\n        input_tokens INTEGER,\n        output_tokens INTEGER,\n        total_tokens INTEGER,\n        created_at TEXT DEFAULT (datetime('now')) NOT NULL,\n        updated_at TEXT DEFAULT (datetime('now')) NOT NULL\n      );\n\n      CREATE TABLE IF NOT EXISTS file_attachments (\n        id TEXT PRIMARY KEY,\n        message_id TEXT NOT NULL REFERENCES messages(id),\n        file_name TEXT NOT NULL,\n        file_path TEXT NOT NULL,\n        file_size INTEGER,\n        line_count INTEGER,\n        page_count INTEGER,\n        file_extension TEXT,\n        created_at TEXT DEFAULT (datetime('now')) NOT NULL,\n        updated_at TEXT DEFAULT (datetime('now')) NOT NULL\n      );\n\n\n      -- Triggers for automatic updated_at timestamp updates\n      CREATE TRIGGER IF NOT EXISTS update_vendors_updated_at\n        AFTER UPDATE ON vendors\n        FOR EACH ROW\n        BEGIN\n          UPDATE vendors SET updated_at = datetime('now') WHERE id = NEW.id;\n        END;\n\n      CREATE TRIGGER IF NOT EXISTS update_models_updated_at\n        AFTER UPDATE ON models\n        FOR EACH ROW\n        BEGIN\n          UPDATE models SET updated_at = datetime('now') WHERE id = NEW.id;\n        END;\n\n      CREATE TRIGGER IF NOT EXISTS update_conversations_updated_at\n        AFTER UPDATE ON conversations\n        FOR EACH ROW\n        BEGIN\n          UPDATE conversations SET updated_at = datetime('now') WHERE id = NEW.id;\n        END;\n\n      CREATE TRIGGER IF NOT EXISTS update_messages_updated_at\n        AFTER UPDATE ON messages\n        FOR EACH ROW\n        BEGIN\n          UPDATE messages SET updated_at = datetime('now') WHERE id = NEW.id;\n        END;\n\n      CREATE TRIGGER IF NOT EXISTS update_file_attachments_updated_at\n        AFTER UPDATE ON file_attachments\n        FOR EACH ROW\n        BEGIN\n          UPDATE file_attachments SET updated_at = datetime('now') WHERE id = NEW.id;\n        END;\n    `",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 132,
            "column": 5
          },
          "method": "exec"
        },
        {
          "query": "table_info(conversations)",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 248,
            "column": 36
          },
          "method": "pragma"
        },
        {
          "query": "ALTER TABLE conversations ADD COLUMN is_starred INTEGER DEFAULT 0 NOT NULL",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 253,
            "column": 9
          },
          "method": "exec"
        },
        {
          "query": "ALTER TABLE conversations ADD COLUMN is_temporary INTEGER DEFAULT 1 NOT NULL",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 256,
            "column": 9
          },
          "method": "exec"
        },
        {
          "query": "ALTER TABLE conversations ADD COLUMN vendor_conversation_id TEXT",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 259,
            "column": 9
          },
          "method": "exec"
        },
        {
          "query": "ALTER TABLE conversations ADD COLUMN vendor_project_id TEXT",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 262,
            "column": 9
          },
          "method": "exec"
        },
        {
          "query": "table_info(messages)",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 269,
            "column": 31
          },
          "method": "pragma"
        },
        {
          "query": "ALTER TABLE messages ADD COLUMN vendor_message_id TEXT",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 274,
            "column": 9
          },
          "method": "exec"
        },
        {
          "query": "ALTER TABLE messages ADD COLUMN vendor_parent_uuid TEXT",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 277,
            "column": 9
          },
          "method": "exec"
        },
        {
          "query": "table_info(file_attachments)",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 284,
            "column": 38
          },
          "method": "pragma"
        },
        {
          "query": "ALTER TABLE file_attachments ADD COLUMN page_count INTEGER",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
            "line": 289,
            "column": 9
          },
          "method": "exec"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/database/schema.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "types": [
          {
            "name": "VendorRecord",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 73,
              "column": 1
            },
            "type": "typeof vendors.$inferSelect"
          },
          {
            "name": "ModelRecord",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 74,
              "column": 1
            },
            "type": "typeof models.$inferSelect"
          },
          {
            "name": "ConversationRecord",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 75,
              "column": 1
            },
            "type": "typeof conversations.$inferSelect"
          },
          {
            "name": "MessageRecord",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 76,
              "column": 1
            },
            "type": "typeof messages.$inferSelect"
          },
          {
            "name": "FileAttachmentRecord",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 77,
              "column": 1
            },
            "type": "typeof fileAttachments.$inferSelect"
          },
          {
            "name": "NewVendor",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 79,
              "column": 1
            },
            "type": "typeof vendors.$inferInsert"
          },
          {
            "name": "NewModel",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 80,
              "column": 1
            },
            "type": "typeof models.$inferInsert"
          },
          {
            "name": "NewConversation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 81,
              "column": 1
            },
            "type": "typeof conversations.$inferInsert"
          },
          {
            "name": "NewMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 82,
              "column": 1
            },
            "type": "typeof messages.$inferInsert"
          },
          {
            "name": "NewFileAttachment",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
              "line": 83,
              "column": 1
            },
            "type": "typeof fileAttachments.$inferInsert"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/lib/time-utils.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "formatRelativeTime",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/lib/time-utils.ts",
              "line": 9,
              "column": 1,
              "endLine": 40
            },
            "parameters": [
              {
                "name": "date",
                "type": "string | Date",
                "displayType": "string | Date",
                "optional": false,
                "isRest": false,
                "description": "- The date to convert (string or Date object)"
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": true,
            "jsdocDescription": "Converts a date to a human-readable relative time format",
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/lib/utils.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "cn",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/lib/utils.ts",
              "line": 5,
              "column": 1,
              "endLine": 7
            },
            "parameters": [
              {
                "name": "inputs",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/clsx/clsx\").ClassValue[]",
                "displayType": "ClassValue[]",
                "optional": false,
                "isRest": true
              }
            ],
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "useDebounce",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/lib/utils.ts",
              "line": 15,
              "column": 1,
              "endLine": 29
            },
            "parameters": [
              {
                "name": "value",
                "type": "T",
                "displayType": "T",
                "optional": false,
                "isRest": false,
                "description": "- The value to debounce"
              },
              {
                "name": "delay",
                "type": "number",
                "displayType": "number",
                "optional": false,
                "isRest": false,
                "description": "- The delay in milliseconds"
              }
            ],
            "returnType": "T",
            "resolvedReturnType": "T",
            "isExported": true,
            "genericParameters": [
              {
                "name": "T"
              }
            ],
            "jsdocDescription": "Hook that debounces a value with a specified delay",
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/hooks/useRecentChats.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "useRecentChats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
              "line": 25,
              "column": 14,
              "endLine": 62
            },
            "parameters": [],
            "returnType": "UseRecentChatsResult",
            "resolvedReturnType": "UseRecentChatsResult",
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "RecentChat",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 8,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 9,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendor_id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "model_id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "created_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "updated_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 13,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "last_message_time",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 14,
                  "column": 3
                },
                "type": "string | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isStarred",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 15,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "UseRecentChatsResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
              "line": 18,
              "column": 1
            },
            "properties": [
              {
                "name": "recentChats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 19,
                  "column": 3
                },
                "type": "RecentChat[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isLoading",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 21,
                  "column": 3
                },
                "type": "string | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "refetch",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
                  "line": 22,
                  "column": 3
                },
                "type": "() => Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/hooks/useStarredChats.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "useStarredChats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
              "line": 24,
              "column": 14,
              "endLine": 61
            },
            "parameters": [],
            "returnType": "UseStarredChatsResult",
            "resolvedReturnType": "UseStarredChatsResult",
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "StarredChat",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 8,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 9,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendor_id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "model_id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "created_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "updated_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 13,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "last_message_time",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 14,
                  "column": 3
                },
                "type": "string | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "UseStarredChatsResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
              "line": 17,
              "column": 1
            },
            "properties": [
              {
                "name": "starredChats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 18,
                  "column": 3
                },
                "type": "StarredChat[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isLoading",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 19,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "string | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "refetch",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
                  "line": 21,
                  "column": 3
                },
                "type": "() => Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/managers/AnthropicConversationManager.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "AnthropicConversationManager",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
              "line": 21,
              "column": 1,
              "endLine": 620
            },
            "methods": [
              {
                "name": "sendMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 86,
                  "column": 5,
                  "endLine": 272
                },
                "parameters": [
                  {
                    "name": "message",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                    "displayType": "AnthropicMessage",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversationHistory",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 274,
                  "column": 5,
                  "endLine": 276
                },
                "parameters": [],
                "returnType": "Anthropic.Messages.MessageParam[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").MessageParam[]",
                "displayReturnType": "MessageParam[]",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMessages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 279,
                  "column": 5,
                  "endLine": 294
                },
                "parameters": [],
                "returnType": "Message[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Message[]",
                "displayReturnType": "Message[]",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "clearConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 296,
                  "column": 5,
                  "endLine": 304
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getTokenUsage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 306,
                  "column": 5,
                  "endLine": 308
                },
                "parameters": [],
                "returnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLastMessageTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 310,
                  "column": 5,
                  "endLine": 312
                },
                "parameters": [],
                "returnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMaxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 314,
                  "column": 5,
                  "endLine": 316
                },
                "parameters": [],
                "returnType": "number",
                "resolvedReturnType": "number",
                "displayReturnType": "number",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setMaxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 318,
                  "column": 5,
                  "endLine": 323
                },
                "parameters": [
                  {
                    "name": "maxTokens",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 325,
                  "column": 5,
                  "endLine": 333
                },
                "parameters": [],
                "returnType": "Record<string, any>",
                "resolvedReturnType": "__type",
                "displayReturnType": "Record<string, any>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 335,
                  "column": 5,
                  "endLine": 352
                },
                "parameters": [
                  {
                    "name": "data",
                    "type": "__type",
                    "displayType": "Record<string, any>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "restoreMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 359,
                  "column": 5,
                  "endLine": 361
                },
                "parameters": [
                  {
                    "name": "message",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                    "displayType": "AnthropicMessage",
                    "optional": false,
                    "isRest": false,
                    "description": "- AnthropicMessage to restore"
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Restore a message to the conversation history\nUsed when loading conversations from database",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "restoreFromDatabase",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 367,
                  "column": 5,
                  "endLine": 422
                },
                "parameters": [
                  {
                    "name": "messagesWithAttachments",
                    "type": "{ id: string; conversation_id: string; created_at: string; updated_at: string; vendor_data: Record<string, any>; vendor_message_id: string; vendor_parent_uuid: string; role: string; content: string; sequence: number; input_tokens: number; output_tokens: number; total_tokens: number; } & { fileAttachments: { id: string; created_at: string; updated_at: string; message_id: string; file_name: string; file_path: string; file_size: number; line_count: number; page_count: number; file_extension: string; }[]; }[]",
                    "displayType": "Array<MessageRecord & { fileAttachments: FileAttachmentRecord[] }>",
                    "optional": false,
                    "isRest": false,
                    "description": "- Messages with file attachments from database"
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Restore full conversation history from database",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createTextBlock",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 426,
                  "column": 5,
                  "endLine": 431
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.TextBlockParam",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".TextBlockParam",
                "displayReturnType": "TextBlockParam",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createImageBlockFromUrl",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 433,
                  "column": 5,
                  "endLine": 443
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.ImageBlockParam",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".ImageBlockParam",
                "displayReturnType": "ImageBlockParam",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createImageBlockFromFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 445,
                  "column": 5,
                  "endLine": 466
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "mediaType",
                    "type": "\"image/jpeg\" | \"image/png\" | \"image/gif\" | \"image/webp\"",
                    "displayType": "'image/jpeg' | 'image/png' | 'image/gif' | 'image/webp'",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.ImageBlockParam",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".ImageBlockParam",
                "displayReturnType": "ImageBlockParam",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createPlainTextSource",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 469,
                  "column": 5,
                  "endLine": 475
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.PlainTextSource",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".PlainTextSource",
                "displayReturnType": "PlainTextSource",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createPlainTextSourceFromFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 477,
                  "column": 5,
                  "endLine": 486
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.PlainTextSource",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".PlainTextSource",
                "displayReturnType": "PlainTextSource",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createURLPDFSource",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 489,
                  "column": 5,
                  "endLine": 496
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.URLPDFSource",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".URLPDFSource",
                "displayReturnType": "URLPDFSource",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createBase64PDFSourceFromFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 499,
                  "column": 5,
                  "endLine": 514
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.Base64PDFSource",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".Base64PDFSource",
                "displayReturnType": "Base64PDFSource",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createDocumentBlock",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 519,
                  "column": 5,
                  "endLine": 529
                },
                "parameters": [
                  {
                    "name": "source",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").PlainTextSource | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").URLPDFSource | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").Base64PDFSource | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ContentBlockSource",
                    "displayType": "URLPDFSource",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.DocumentBlockParam",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".DocumentBlockParam",
                "displayReturnType": "DocumentBlockParam",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createUserMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 532,
                  "column": 5,
                  "endLine": 537
                },
                "parameters": [
                  {
                    "name": "content",
                    "type": "string | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ContentBlockParam[]",
                    "displayType": "Anthropic.Messages.MessageParam['content']",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Anthropic.Messages.MessageParam",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".MessageParam",
                "displayReturnType": "MessageParam",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "renderMessageForConsole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 540,
                  "column": 5,
                  "endLine": 545
                },
                "parameters": [
                  {
                    "name": "message",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".MessageParam",
                    "displayType": "MessageParam",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getUserConstant",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 551,
                  "column": 5,
                  "endLine": 553
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the vendor-specific user role constant",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getUserRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 559,
                  "column": 5,
                  "endLine": 561
                },
                "parameters": [],
                "returnType": "typeof AnthropicConversationManager.ROLES.USER",
                "resolvedReturnType": "typeof AnthropicConversationManager.ROLES.USER",
                "displayReturnType": "USER",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the user role for this vendor",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAssistantRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 567,
                  "column": 5,
                  "endLine": 569
                },
                "parameters": [],
                "returnType": "typeof AnthropicConversationManager.ROLES.ASSISTANT",
                "resolvedReturnType": "typeof AnthropicConversationManager.ROLES.ASSISTANT",
                "displayReturnType": "ASSISTANT",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the assistant role for this vendor",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "sendMessageWithAttachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 578,
                  "column": 5,
                  "endLine": 619
                },
                "parameters": [
                  {
                    "name": "messageText",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "The text content of the message"
                  },
                  {
                    "name": "attachments",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").StoredFileWithMetadata[]",
                    "displayType": "StoredFileWithMetadata[]",
                    "optional": false,
                    "isRest": false,
                    "description": "Array of stored file metadata"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Send a message with file attachments using vendor-agnostic inputs",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "MODELS",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 23,
                  "column": 5,
                  "endLine": 33
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "DEFAULT_MODEL",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 35,
                  "column": 5,
                  "endLine": 35
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "ROLES",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 37,
                  "column": 5,
                  "endLine": 37
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "WEB_SEARCH_TOOL_VERSION",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 40,
                  "column": 5,
                  "endLine": 40
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "WEB_SEARCH_MAX_USES",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 41,
                  "column": 5,
                  "endLine": 41
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "client",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 43,
                  "column": 5,
                  "endLine": 43
                },
                "type": "Anthropic",
                "displayType": "Anthropic",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "messages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 44,
                  "column": 5,
                  "endLine": 44
                },
                "type": "Anthropic.Messages.MessageParam[]",
                "displayType": "MessageParam[]",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "model",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 45,
                  "column": 5,
                  "endLine": 45
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "maxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 46,
                  "column": 5,
                  "endLine": 46
                },
                "type": "number",
                "displayType": "number",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "project",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 47,
                  "column": 5,
                  "endLine": 47
                },
                "type": "AnthropicProject",
                "displayType": "AnthropicProject",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "logger",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 48,
                  "column": 5,
                  "endLine": 48
                },
                "type": "ReturnType<typeof createConversationLogger>",
                "displayType": "ReturnType<typeof createConversationLogger>",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "tokenUsage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 49,
                  "column": 5,
                  "endLine": 53
                },
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "lastMessageTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 54,
                  "column": 5,
                  "endLine": 58
                },
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
                  "line": 60,
                  "column": 5,
                  "endLine": 84
                },
                "parameters": [
                  {
                    "name": "model",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "AnthropicConversationManager.DEFAULT_MODEL",
                    "isRest": false
                  },
                  {
                    "name": "project",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject\".AnthropicProject",
                    "displayType": "AnthropicProject",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "apiKey",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "maxTokens",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [
              "ConversationManager"
            ],
            "isAbstract": false,
            "sourceLOC": 438,
            "sourceFilename": "AnthropicConversationManager.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/managers/AnthropicFileManager.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "AnthropicFileManager",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager.ts",
              "line": 7,
              "column": 1,
              "endLine": 109
            },
            "methods": [
              {
                "name": "upload",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager.ts",
                  "line": 25,
                  "column": 5,
                  "endLine": 44
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to the file to upload"
                  }
                ],
                "returnType": "Promise<any>",
                "resolvedReturnType": "Promise<any>",
                "displayReturnType": "Promise<any>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Upload a file to Anthropic Files API",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "listFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager.ts",
                  "line": 50,
                  "column": 5,
                  "endLine": 63
                },
                "parameters": [],
                "returnType": "Promise<any>",
                "resolvedReturnType": "Promise<any>",
                "displayReturnType": "Promise<any>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "List all files uploaded to Anthropic Files API",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getFileMetadata",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager.ts",
                  "line": 70,
                  "column": 5,
                  "endLine": 84
                },
                "parameters": [
                  {
                    "name": "fileId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- ID of the file to retrieve metadata for"
                  }
                ],
                "returnType": "Promise<any>",
                "resolvedReturnType": "Promise<any>",
                "displayReturnType": "Promise<any>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get metadata for a specific file from Anthropic Files API",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "downloadFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager.ts",
                  "line": 94,
                  "column": 5,
                  "endLine": 108
                },
                "parameters": [
                  {
                    "name": "fileId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- ID of the file to download"
                  }
                ],
                "returnType": "Promise<any>",
                "resolvedReturnType": "Promise<any>",
                "displayReturnType": "Promise<any>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Download a file from Anthropic Files API\nNOTE: This method is designed for downloading AI-GENERATED files (charts, reports, etc.)\nUser-uploaded files have downloadable: false and will return 400 \"File is not downloadable\"",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "client",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager.ts",
                  "line": 8,
                  "column": 5,
                  "endLine": 8
                },
                "type": "Anthropic",
                "displayType": "Anthropic",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager.ts",
                  "line": 10,
                  "column": 5,
                  "endLine": 18
                },
                "parameters": [
                  {
                    "name": "apiKey",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 62,
            "sourceFilename": "AnthropicFileManager.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/managers/AnthropicWebImportManager.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "AnthropicWebImportManager",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
              "line": 29,
              "column": 1,
              "endLine": 1270
            },
            "methods": [
              {
                "name": "validateFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 38,
                  "column": 3,
                  "endLine": 91
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<WebImportValidationResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\").WebImportValidationResult>",
                "displayReturnType": "Promise<WebImportValidationResult>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversationData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 93,
                  "column": 3,
                  "endLine": 149
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<WebImportConversationData>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\").WebImportConversationData>",
                "displayReturnType": "Promise<WebImportConversationData>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMessages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 151,
                  "column": 3,
                  "endLine": 198
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<WebImportMessage[]>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\").WebImportMessage[]>",
                "displayReturnType": "Promise<WebImportMessage[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 207,
                  "column": 3,
                  "endLine": 270
                },
                "parameters": [
                  {
                    "name": "files",
                    "type": "Anth.AnthropicWebFile[]",
                    "displayType": "ReadonlyArray<AnthropicWebFile>",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array from messageJson.files"
                  },
                  {
                    "name": "filesV2",
                    "type": "Anth.AnthropicWebFileV2[]",
                    "displayType": "ReadonlyArray<AnthropicWebFileV2>",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array from messageJson.files_v2"
                  }
                ],
                "returnType": "Anth.ProcessedFileReference[]",
                "resolvedReturnType": "Anth.ProcessedFileReference[]",
                "displayReturnType": "ProcessedFileReference[]",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Process and deduplicate files from both files and files_v2 arrays\nPrefers files_v2 data over files data when the same file exists in both",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 272,
                  "column": 3,
                  "endLine": 359
                },
                "parameters": [
                  {
                    "name": "messageJson",
                    "type": "Anth.AnthropicWebChatMessage",
                    "displayType": "AnthropicWebChatMessage",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "WebImportMessage",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\".WebImportMessage",
                "displayReturnType": "WebImportMessage",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "constructClaudeAIUrl",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 366,
                  "column": 3,
                  "endLine": 374
                },
                "parameters": [
                  {
                    "name": "fileUrl",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Relative or absolute URL to the file"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Construct full Claude.ai URL from relative or absolute URL",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "downloadFileFromClaudeAI",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 382,
                  "column": 3,
                  "endLine": 423
                },
                "parameters": [
                  {
                    "name": "fileUrl",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Relative or absolute URL to the file"
                  },
                  {
                    "name": "fileName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Original filename for logging"
                  }
                ],
                "returnType": "Promise<string | null>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string | null>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Download file content from Anthropic Claude.ai URL",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processAttachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 430,
                  "column": 3,
                  "endLine": 517
                },
                "parameters": [
                  {
                    "name": "attachments",
                    "type": "Anth.AnthropicWebAttachment[]",
                    "displayType": "ReadonlyArray<AnthropicWebAttachment>",
                    "optional": false,
                    "isRest": false,
                    "description": "- Raw attachments array from Anthropic message JSON"
                  }
                ],
                "returnType": "Anth.ProcessedAttachment[]",
                "resolvedReturnType": "Anth.ProcessedAttachment[]",
                "displayReturnType": "ProcessedAttachment[]",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Process Anthropic attachments array and extract metadata for file storage",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "storeMessageFileReferences",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 527,
                  "column": 3,
                  "endLine": 691
                },
                "parameters": [
                  {
                    "name": "messageId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Database message ID for linking file attachments"
                  },
                  {
                    "name": "files",
                    "type": "Anth.ProcessedFileReference[]",
                    "displayType": "ProcessedFileReference[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Processed file reference data array from files/files_v2 deduplication"
                  },
                  {
                    "name": "messageCreatedAt",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Message timestamp for storage path calculation"
                  },
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": false,
                    "isRest": false,
                    "description": "- Database service instance"
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Store message file references to managed file storage and create database records\nDownloads files from Claude.ai URLs or stores metadata-only references when downloads fail",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "storeMessageAttachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 700,
                  "column": 3,
                  "endLine": 814
                },
                "parameters": [
                  {
                    "name": "messageId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Database message ID for linking attachments"
                  },
                  {
                    "name": "attachments",
                    "type": "Anth.ProcessedAttachment[]",
                    "displayType": "ProcessedAttachment[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Processed attachment data array"
                  },
                  {
                    "name": "messageCreatedAt",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Message timestamp for storage path calculation"
                  },
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": false,
                    "isRest": false,
                    "description": "- Database service instance"
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Store message attachments to managed file storage and create database records",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "writeContentToTempFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 822,
                  "column": 3,
                  "endLine": 885
                },
                "parameters": [
                  {
                    "name": "content",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- File content as string"
                  },
                  {
                    "name": "fileName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Original filename for extension detection"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Write attachment content to a temporary file for processing",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processImport",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 887,
                  "column": 3,
                  "endLine": 1257
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<WebImportProcessResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\").WebImportProcessResult>",
                "displayReturnType": "Promise<WebImportProcessResult>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 1259,
                  "column": 3,
                  "endLine": 1261
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getDefaultModelName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 1267,
                  "column": 3,
                  "endLine": 1269
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the default model name for imported Anthropic conversations",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "DEFAULT_MODEL_NAME",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 33,
                  "column": 3,
                  "endLine": 33
                },
                "isStatic": true,
                "visibility": "private"
              },
              {
                "name": "CLAUDE_AI_BASE_URL",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
                  "line": 36,
                  "column": 3,
                  "endLine": 36
                },
                "isStatic": true,
                "visibility": "private"
              }
            ],
            "constructors": [],
            "implements": [
              "WebImportManager"
            ],
            "isAbstract": false,
            "sourceLOC": 946,
            "sourceFilename": "AnthropicWebImportManager.ts"
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "content-type",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
            "line": 410,
            "column": 22
          },
          "method": "get"
        },
        {
          "query": "() => {\n          logger.info('INSIDE TRANSACTION: Transaction started successfully');\n\n          // Create conversation record\n        const newConversation: NewConversation = {\n          vendor_id: vendorRecord.id,\n          vendor_conversation_id: json.uuid, // Store original Anthropic UUID\n          vendor_project_id: conversationData.vendorProjectId, // Store original Anthropic project_uuid\n          model_id: modelRecord.id,\n          name: conversationData.name,\n          vendor_data: conversationData.vendorData,\n          is_temporary: false, // Imported chats are not temporary\n          created_at: json.created_at, // Use original timestamp\n          updated_at: json.updated_at // Use original timestamp\n        };\n\n        logger.info('TRANSACTION: About to call conversationRepo.create()', {\n          newConversationObject: {\n            vendor_id: newConversation.vendor_id,\n            model_id: newConversation.model_id,\n            name: newConversation.name,\n            is_temporary: newConversation.is_temporary\n          }\n        });\n\n        const createdConversation = conversationRepo.create(newConversation);\n\n        logger.info('TRANSACTION: conversationRepo.create() result', {\n          createdConversation: createdConversation,\n          conversationId: createdConversation?.localId,\n          conversationIdType: typeof createdConversation?.localId,\n          conversationIdLength: createdConversation?.localId?.length,\n          isConversationNull: createdConversation === null,\n          isConversationUndefined: createdConversation === undefined,\n          isConversationPromise: createdConversation instanceof Promise,\n          conversationKeys: createdConversation ? Object.keys(createdConversation) : 'N/A',\n          vendorConversationId: json.uuid\n        });\n\n        // Validate conversation ID before proceeding with messages\n        if (!createdConversation || !createdConversation.localId || typeof createdConversation.localId !== 'string') {\n          logger.error('TRANSACTION: Invalid conversation created - STOPPING', {\n            createdConversation: createdConversation,\n            conversationId: createdConversation?.localId,\n            conversationIdType: typeof createdConversation?.localId\n          });\n          throw new Error(`Invalid conversation created: ID is ${createdConversation?.localId} (type: ${typeof createdConversation?.localId})`);\n        }\n\n        // Create message records with detailed logging\n        logger.info('TRANSACTION: Starting message creation loop', {\n          totalMessagesToCreate: messages.length,\n          conversationIdForMessages: createdConversation.localId,\n          conversationIdIsValid: typeof createdConversation.localId === 'string' && createdConversation.localId.length > 0\n        });\n\n        const createdMessages = [];\n        for (let i = 0; i < messages.length; i++) {\n          const msg = messages[i];\n\n          logger.debug({\n            messageIndex: i,\n            messageRole: msg.role,\n            messageContentLength: msg.content?.length || 0,\n            messageTimestamp: msg.timestamp,\n            vendorMessageId: msg.vendorData?.uuid,\n            vendorIndex: msg.vendorData?.index\n          }, `Processing message ${i + 1}/${messages.length}`);\n\n          const newMessage: NewMessage = {\n            conversation_id: createdConversation.localId,\n            vendor_message_id: msg.vendorData?.uuid || null,\n            vendor_parent_uuid: msg.vendorData?.parent_message_uuid || null,\n            role: msg.role,\n            content: msg.content,\n            sequence: msg.vendorData?.index || i, // Use original index, fallback to array position\n            vendor_data: msg.vendorData,\n            created_at: msg.timestamp || new Date().toISOString(),\n            updated_at: msg.vendorData?.updated_at || msg.timestamp || new Date().toISOString()\n          };\n\n          logger.debug({\n            messageIndex: i,\n            newMessageObject: {\n              conversation_id: newMessage.conversation_id,\n              vendor_message_id: newMessage.vendor_message_id,\n              role: newMessage.role,\n              content: newMessage.content.substring(0, 100) + (newMessage.content.length > 100 ? '...' : ''),\n              sequence: newMessage.sequence,\n              created_at: newMessage.created_at\n            }\n          }, `Constructed NewMessage object for message ${i + 1}`);\n\n          logger.info(`TRANSACTION: About to call messageRepo.create() for message ${i + 1}`, {\n            messageIndex: i,\n            conversationIdBeingUsed: newMessage.conversation_id,\n            messageRole: newMessage.role,\n            messageSequence: newMessage.sequence,\n            vendorMessageId: newMessage.vendor_message_id\n          });\n\n          try {\n            const createdMessage = messageRepo.create(newMessage);\n\n            logger.info(`TRANSACTION: messageRepo.create() result for message ${i + 1}`, {\n              messageIndex: i,\n              createdMessage: createdMessage,\n              createdMessageId: createdMessage?.id,\n              createdMessageType: typeof createdMessage,\n              isMessageNull: createdMessage === null,\n              isMessageUndefined: createdMessage === undefined,\n              isMessagePromise: createdMessage instanceof Promise,\n              messageKeys: createdMessage ? Object.keys(createdMessage) : 'N/A',\n              expectedConversationId: newMessage.conversation_id,\n              actualConversationId: createdMessage?.conversation_id\n            });\n\n            if (createdMessage && createdMessage.id) {\n              createdMessages.push(createdMessage);\n              logger.info(`TRANSACTION: Successfully added message ${i + 1} to createdMessages array`);\n            } else {\n              logger.error(`TRANSACTION: Message creation failed for message ${i + 1}`, {\n                messageIndex: i,\n                newMessage: newMessage,\n                createdMessage: createdMessage\n              });\n              throw new Error(`Message creation failed for message ${i + 1}: returned ${createdMessage}`);\n            }\n          } catch (error) {\n            logger.error(`TRANSACTION: Exception during message creation for message ${i + 1}`, {\n              messageIndex: i,\n              error: error instanceof Error ? error.message : String(error),\n              stack: error instanceof Error ? error.stack : undefined,\n              newMessage: newMessage\n            });\n            throw error; // Re-throw to fail the entire transaction\n          }\n        }\n\n        logger.info({\n          conversationId: createdConversation.localId,\n          expectedMessageCount: messages.length,\n          actualCreatedMessageCount: createdMessages.length,\n          messageCreationSuccess: createdMessages.length === messages.length\n        }, 'Message creation loop completed');\n\n\n          logger.info('INSIDE TRANSACTION: About to return transaction result', {\n            conversationId: createdConversation.localId,\n            messageCount: createdMessages.length\n          });\n\n          return {\n            conversation: createdConversation,\n            messages: createdMessages\n          };\n        }",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
            "line": 959,
            "column": 18
          },
          "method": "transaction"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/managers/ConversationManager.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "interfaces": [
          {
            "name": "ConversationManager",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
              "line": 6,
              "column": 1
            },
            "properties": [],
            "methods": [
              {
                "name": "sendMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 12,
                  "column": 3
                },
                "parameters": [
                  {
                    "name": "message",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false,
                    "description": "The message content to send (vendor-specific format)"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Send a message and get the AI response",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversationHistory",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 18,
                  "column": 3
                },
                "parameters": [],
                "returnType": "any[]",
                "resolvedReturnType": "any[]",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the current conversation history",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "clearConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 23,
                  "column": 3
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Clear the conversation history",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 31,
                  "column": 3
                },
                "parameters": [],
                "returnType": "Record<string, any>",
                "resolvedReturnType": "__type",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get vendor-specific data for persistence\nThis method allows vendor-specific managers to marshal their\ninternal state into a JSON-serializable format",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 39,
                  "column": 3
                },
                "parameters": [
                  {
                    "name": "data",
                    "type": "__type",
                    "displayType": "Record<string, any>",
                    "optional": false,
                    "isRest": false,
                    "description": "Record containing vendor-specific data from storage"
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Set vendor-specific data from persistence\nThis method allows vendor-specific managers to unmarshal\ntheir internal state from stored JSON data",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getTokenUsage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 45,
                  "column": 3
                },
                "parameters": [],
                "returnType": "{\n    inputTokens: number;\n    outputTokens: number;\n    totalTokens: number;\n  }",
                "resolvedReturnType": "__type",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get current token usage for this conversation",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLastMessageTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 55,
                  "column": 3
                },
                "parameters": [],
                "returnType": "{\n    inputTokens: number;\n    outputTokens: number;\n    totalTokens: number;\n  }",
                "resolvedReturnType": "__type",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get token usage for the last message exchange",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getUserConstant",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 65,
                  "column": 3
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the vendor-specific user role constant",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "sendMessageWithAttachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
                  "line": 73,
                  "column": 3
                },
                "parameters": [
                  {
                    "name": "messageText",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "The text content of the message"
                  },
                  {
                    "name": "attachments",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").StoredFileWithMetadata[]",
                    "displayType": "StoredFileWithMetadata[]",
                    "optional": false,
                    "isRest": false,
                    "description": "Array of stored file metadata"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Send a message with file attachments using vendor-agnostic inputs",
                "isAbstract": false,
                "isConstructor": false
              }
            ]
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/managers/GeminiConversationManager.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "GeminiConversationManager",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
              "line": 16,
              "column": 1,
              "endLine": 356
            },
            "methods": [
              {
                "name": "sendMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 77,
                  "column": 5,
                  "endLine": 193
                },
                "parameters": [
                  {
                    "name": "message",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage\".GeminiMessage",
                    "displayType": "GeminiMessage",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversationHistory",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 195,
                  "column": 5,
                  "endLine": 198
                },
                "parameters": [],
                "returnType": "Content[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\").Content[]",
                "displayReturnType": "Content[]",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMessages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 200,
                  "column": 5,
                  "endLine": 206
                },
                "parameters": [],
                "returnType": "Message[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Message[]",
                "displayReturnType": "Message[]",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 208,
                  "column": 5,
                  "endLine": 214
                },
                "parameters": [],
                "returnType": "Record<string, any>",
                "resolvedReturnType": "__type",
                "displayReturnType": "Record<string, any>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 216,
                  "column": 5,
                  "endLine": 239
                },
                "parameters": [
                  {
                    "name": "data",
                    "type": "__type",
                    "displayType": "Record<string, any>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "clearConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 241,
                  "column": 5,
                  "endLine": 264
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getTokenUsage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 266,
                  "column": 5,
                  "endLine": 268
                },
                "parameters": [],
                "returnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLastMessageTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 270,
                  "column": 5,
                  "endLine": 272
                },
                "parameters": [],
                "returnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getModel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 274,
                  "column": 5,
                  "endLine": 276
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMaxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 278,
                  "column": 5,
                  "endLine": 280
                },
                "parameters": [],
                "returnType": "number",
                "resolvedReturnType": "number",
                "displayReturnType": "number",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setMaxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 282,
                  "column": 5,
                  "endLine": 284
                },
                "parameters": [
                  {
                    "name": "maxTokens",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getUserConstant",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 290,
                  "column": 5,
                  "endLine": 292
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the vendor-specific user role constant",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getUserRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 298,
                  "column": 5,
                  "endLine": 300
                },
                "parameters": [],
                "returnType": "typeof GeminiConversationManager.ROLES.USER",
                "resolvedReturnType": "typeof GeminiConversationManager.ROLES.USER",
                "displayReturnType": "USER",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the user role for this vendor",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAssistantRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 306,
                  "column": 5,
                  "endLine": 308
                },
                "parameters": [],
                "returnType": "typeof GeminiConversationManager.ROLES.ASSISTANT",
                "resolvedReturnType": "typeof GeminiConversationManager.ROLES.ASSISTANT",
                "displayReturnType": "ASSISTANT",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the assistant role for this vendor (Gemini uses 'model')",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "sendMessageWithAttachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 316,
                  "column": 5,
                  "endLine": 355
                },
                "parameters": [
                  {
                    "name": "messageText",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "The text content of the message"
                  },
                  {
                    "name": "attachments",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").StoredFileWithMetadata[]",
                    "displayType": "StoredFileWithMetadata[]",
                    "optional": false,
                    "isRest": false,
                    "description": "Array of stored file metadata"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Send a message with file attachments using vendor-agnostic inputs",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "MODELS",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 18,
                  "column": 5,
                  "endLine": 22
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "DEFAULT_MODEL",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 24,
                  "column": 5,
                  "endLine": 24
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "ROLES",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 26,
                  "column": 5,
                  "endLine": 26
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "client",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 28,
                  "column": 5,
                  "endLine": 28
                },
                "type": "GoogleGenAI",
                "displayType": "GoogleGenAI",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "chat",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 29,
                  "column": 5,
                  "endLine": 29
                },
                "type": "Chat",
                "displayType": "Chat",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "modelId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 30,
                  "column": 5,
                  "endLine": 30
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "maxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 31,
                  "column": 5,
                  "endLine": 31
                },
                "type": "number",
                "displayType": "number",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "history",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 32,
                  "column": 5,
                  "endLine": 32
                },
                "type": "Content[]",
                "displayType": "Content[]",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "logger",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 33,
                  "column": 5,
                  "endLine": 33
                },
                "type": "ReturnType<typeof createConversationLogger>",
                "displayType": "ReturnType<typeof createConversationLogger>",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "tokenUsage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 34,
                  "column": 5,
                  "endLine": 38
                },
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "lastMessageTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 39,
                  "column": 5,
                  "endLine": 43
                },
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
                  "line": 45,
                  "column": 5,
                  "endLine": 75
                },
                "parameters": [
                  {
                    "name": "modelId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "GeminiConversationManager.DEFAULT_MODEL",
                    "isRest": false
                  },
                  {
                    "name": "project",
                    "type": "any",
                    "displayType": "any",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "apiKey",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "maxTokens",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [
              "ConversationManager"
            ],
            "isAbstract": false,
            "sourceLOC": 254,
            "sourceFilename": "GeminiConversationManager.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/managers/OpenAIConversationManager.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "OpenAIConversationManager",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
              "line": 16,
              "column": 1,
              "endLine": 379
            },
            "methods": [
              {
                "name": "sendMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 70,
                  "column": 5,
                  "endLine": 203
                },
                "parameters": [
                  {
                    "name": "message",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage\".OpenAIMessage",
                    "displayType": "OpenAIMessage",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversationHistory",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 205,
                  "column": 5,
                  "endLine": 207
                },
                "parameters": [],
                "returnType": "OpenAI.Responses.ResponseInputItem[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseInputItem[]",
                "displayReturnType": "ResponseInputItem[]",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMessages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 209,
                  "column": 5,
                  "endLine": 235
                },
                "parameters": [],
                "returnType": "Message[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Message[]",
                "displayReturnType": "Message[]",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 237,
                  "column": 5,
                  "endLine": 243
                },
                "parameters": [],
                "returnType": "Record<string, any>",
                "resolvedReturnType": "__type",
                "displayReturnType": "Record<string, any>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 245,
                  "column": 5,
                  "endLine": 261
                },
                "parameters": [
                  {
                    "name": "data",
                    "type": "__type",
                    "displayType": "Record<string, any>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "clearConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 263,
                  "column": 5,
                  "endLine": 277
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getTokenUsage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 279,
                  "column": 5,
                  "endLine": 281
                },
                "parameters": [],
                "returnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLastMessageTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 283,
                  "column": 5,
                  "endLine": 285
                },
                "parameters": [],
                "returnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ inputTokens: number; outputTokens: number; totalTokens: number }",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "setMaxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 288,
                  "column": 5,
                  "endLine": 290
                },
                "parameters": [
                  {
                    "name": "maxTokens",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMaxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 292,
                  "column": 5,
                  "endLine": 294
                },
                "parameters": [],
                "returnType": "number",
                "resolvedReturnType": "number",
                "displayReturnType": "number",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getModel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 296,
                  "column": 5,
                  "endLine": 298
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getUserConstant",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 304,
                  "column": 5,
                  "endLine": 306
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the vendor-specific user role constant",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getUserRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 312,
                  "column": 5,
                  "endLine": 314
                },
                "parameters": [],
                "returnType": "typeof OpenAIConversationManager.ROLES.USER",
                "resolvedReturnType": "typeof OpenAIConversationManager.ROLES.USER",
                "displayReturnType": "USER",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the user role for this vendor",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAssistantRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 320,
                  "column": 5,
                  "endLine": 322
                },
                "parameters": [],
                "returnType": "typeof OpenAIConversationManager.ROLES.ASSISTANT",
                "resolvedReturnType": "typeof OpenAIConversationManager.ROLES.ASSISTANT",
                "displayReturnType": "ASSISTANT",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the assistant role for this vendor",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getSystemRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 328,
                  "column": 5,
                  "endLine": 330
                },
                "parameters": [],
                "returnType": "typeof OpenAIConversationManager.ROLES.SYSTEM",
                "resolvedReturnType": "typeof OpenAIConversationManager.ROLES.SYSTEM",
                "displayReturnType": "SYSTEM",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the system role for this vendor",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "sendMessageWithAttachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 339,
                  "column": 5,
                  "endLine": 378
                },
                "parameters": [
                  {
                    "name": "messageText",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "The text content of the message"
                  },
                  {
                    "name": "attachments",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").StoredFileWithMetadata[]",
                    "displayType": "StoredFileWithMetadata[]",
                    "optional": false,
                    "isRest": false,
                    "description": "Array of stored file metadata"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Send a message with file attachments using vendor-agnostic inputs",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "MODELS",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 18,
                  "column": 5,
                  "endLine": 24
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "DEFAULT_MODEL",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 26,
                  "column": 5,
                  "endLine": 26
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "ROLES",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 28,
                  "column": 5,
                  "endLine": 28
                },
                "isStatic": true,
                "visibility": "public"
              },
              {
                "name": "client",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 30,
                  "column": 5,
                  "endLine": 30
                },
                "type": "OpenAI",
                "displayType": "OpenAI",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "messages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 31,
                  "column": 5,
                  "endLine": 31
                },
                "type": "OpenAI.Responses.ResponseInputItem[]",
                "displayType": "ResponseInputItem[]",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "model",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 32,
                  "column": 5,
                  "endLine": 32
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "maxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 33,
                  "column": 5,
                  "endLine": 33
                },
                "type": "number",
                "displayType": "number",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "logger",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 34,
                  "column": 5,
                  "endLine": 34
                },
                "type": "ReturnType<typeof createConversationLogger>",
                "displayType": "ReturnType<typeof createConversationLogger>",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "tokenUsage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 35,
                  "column": 5,
                  "endLine": 39
                },
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "lastMessageTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 40,
                  "column": 5,
                  "endLine": 44
                },
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
                  "line": 46,
                  "column": 5,
                  "endLine": 68
                },
                "parameters": [
                  {
                    "name": "model",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "OpenAIConversationManager.DEFAULT_MODEL",
                    "isRest": false
                  },
                  {
                    "name": "project",
                    "type": "any",
                    "displayType": "any",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "apiKey",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "maxTokens",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [
              "ConversationManager"
            ],
            "isAbstract": false,
            "sourceLOC": 261,
            "sourceFilename": "OpenAIConversationManager.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/managers/WebImportManager.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "interfaces": [
          {
            "name": "WebImportValidationResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
              "line": 4,
              "column": 1
            },
            "properties": [
              {
                "name": "isValid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 5,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 6,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "WebImportConversationData",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
              "line": 9,
              "column": 1
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "modelId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 13,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorProjectId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 14,
                  "column": 3
                },
                "type": "string | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 15,
                  "column": 3
                },
                "type": "Record<string, any>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "WebImportMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
              "line": 18,
              "column": 1
            },
            "properties": [
              {
                "name": "role",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 19,
                  "column": 3
                },
                "type": "'user' | 'assistant'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "content",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 21,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 22,
                  "column": 3
                },
                "type": "Record<string, any>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "WebImportProcessResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
              "line": 25,
              "column": 1
            },
            "properties": [
              {
                "name": "success",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 26,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "conversationData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 27,
                  "column": 3
                },
                "type": "WebImportConversationData",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "messages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 28,
                  "column": 3
                },
                "type": "WebImportMessage[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 29,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "WebImportManager",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
              "line": 32,
              "column": 1
            },
            "properties": [],
            "methods": [
              {
                "name": "validateFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 38,
                  "column": 3
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to the JSON file to validate"
                  }
                ],
                "returnType": "Promise<WebImportValidationResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\").WebImportValidationResult>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Validate that the file is a valid format for this vendor",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversationData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 45,
                  "column": 3
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to the validated JSON file"
                  }
                ],
                "returnType": "Promise<WebImportConversationData>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\").WebImportConversationData>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Extract conversation metadata from the JSON",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMessages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 52,
                  "column": 3
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to the validated JSON file"
                  }
                ],
                "returnType": "Promise<WebImportMessage[]>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\").WebImportMessage[]>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Extract all messages from the JSON",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 59,
                  "column": 3
                },
                "parameters": [
                  {
                    "name": "messageJson",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false,
                    "description": "- Raw message object from vendor JSON"
                  }
                ],
                "returnType": "WebImportMessage",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\".WebImportMessage",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Process individual message JSON into standardized format",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processImport",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 66,
                  "column": 3
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to the JSON file to import"
                  }
                ],
                "returnType": "Promise<WebImportProcessResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager\").WebImportProcessResult>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Full import process - validate, extract, and return all data",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
                  "line": 72,
                  "column": 3
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the vendor name this manager handles",
                "isAbstract": false,
                "isConstructor": false
              }
            ]
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/messages/AnthropicMessage.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "AnthropicMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
              "line": 11,
              "column": 1,
              "endLine": 311
            },
            "methods": [
              {
                "name": "fromMessageParam",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 23,
                  "column": 5,
                  "endLine": 27
                },
                "parameters": [
                  {
                    "name": "messageParam",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".MessageParam",
                    "displayType": "MessageParam",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "AnthropicMessage",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "AnthropicMessage",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "ensureContentArray",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 29,
                  "column": 5,
                  "endLine": 35
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addContentBlock",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 37,
                  "column": 5,
                  "endLine": 41
                },
                "parameters": [
                  {
                    "name": "block",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").TextBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ImageBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").DocumentBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ThinkingBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").RedactedThinkingBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ToolUseBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ToolResultBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ServerToolUseBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").WebSearchToolResultBlockParam",
                    "displayType": "ContentBlockParam",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addTextContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 43,
                  "column": 5,
                  "endLine": 49
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromURL",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 51,
                  "column": 5,
                  "endLine": 60
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromBase64",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 62,
                  "column": 5,
                  "endLine": 78
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "mediaType",
                    "type": "\"image/jpeg\" | \"image/png\" | \"image/gif\" | \"image/webp\"",
                    "displayType": "'image/jpeg' | 'image/png' | 'image/gif' | 'image/webp'",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 81,
                  "column": 5,
                  "endLine": 114
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addPDFFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 117,
                  "column": 5,
                  "endLine": 134
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addDocumentFromText",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 137,
                  "column": 5,
                  "endLine": 151
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "options",
                    "type": "__type",
                    "displayType": "{ title?: string; context?: string; cache_control?: Anthropic.Messages.CacheControlEphemeral }",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addDocumentFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 154,
                  "column": 5,
                  "endLine": 178
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "options",
                    "type": "__type",
                    "displayType": "{ title?: string; context?: string; cache_control?: Anthropic.Messages.CacheControlEphemeral }",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addDocumentFromPDFURL",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 181,
                  "column": 5,
                  "endLine": 194
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "options",
                    "type": "__type",
                    "displayType": "{ title?: string; context?: string; cache_control?: Anthropic.Messages.CacheControlEphemeral }",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addDocumentFromPDFFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 197,
                  "column": 5,
                  "endLine": 214
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "options",
                    "type": "__type",
                    "displayType": "{ title?: string; context?: string; cache_control?: Anthropic.Messages.CacheControlEphemeral }",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addDocumentFromContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 217,
                  "column": 5,
                  "endLine": 230
                },
                "parameters": [
                  {
                    "name": "content",
                    "type": "string | (import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").TextBlockParam | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\").ImageBlockParam)[]",
                    "displayType": "string | Array<ImageBlockParam>",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "options",
                    "type": "__type",
                    "displayType": "{ title?: string; context?: string; cache_control?: Anthropic.Messages.CacheControlEphemeral }",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage\".AnthropicMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addFileAttachmentFromPath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 238,
                  "column": 5,
                  "endLine": 266
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to file to attach"
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Add file attachment using automatic type detection\nConsolidates file type decision logic used in ConversationService",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 268,
                  "column": 5,
                  "endLine": 270
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 272,
                  "column": 5,
                  "endLine": 274
                },
                "parameters": [],
                "returnType": "Anthropic.Messages.MessageParam",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".MessageParam",
                "displayReturnType": "MessageParam",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAsHTML",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 276,
                  "column": 5,
                  "endLine": 305
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "serialize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 308,
                  "column": 5,
                  "endLine": 310
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "messageParam",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 12,
                  "column": 5,
                  "endLine": 12
                },
                "type": "Anthropic.Messages.MessageParam",
                "displayType": "MessageParam",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
                  "line": 14,
                  "column": 5,
                  "endLine": 20
                },
                "parameters": [
                  {
                    "name": "role",
                    "type": "\"user\" | \"assistant\"",
                    "displayType": "AnthropicRole",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "content",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "extends": "Message<Anthropic.Messages.MessageParam>",
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 244,
            "sourceFilename": "AnthropicMessage.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/messages/GeminiMessage.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "GeminiMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
              "line": 11,
              "column": 1,
              "endLine": 178
            },
            "methods": [
              {
                "name": "fromContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 23,
                  "column": 5,
                  "endLine": 27
                },
                "parameters": [
                  {
                    "name": "content",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\".Content",
                    "displayType": "Content",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "GeminiMessage",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage\".GeminiMessage",
                "displayReturnType": "GeminiMessage",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addPart",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 29,
                  "column": 5,
                  "endLine": 35
                },
                "parameters": [
                  {
                    "name": "part",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\".Part",
                    "displayType": "Part",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage\".GeminiMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addTextContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 37,
                  "column": 5,
                  "endLine": 42
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage\".GeminiMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromBase64",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 44,
                  "column": 5,
                  "endLine": 58
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "mediaType",
                    "type": "\"image/jpeg\" | \"image/png\" | \"image/gif\" | \"image/webp\"",
                    "displayType": "'image/jpeg' | 'image/png' | 'image/gif' | 'image/webp'",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage\".GeminiMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromBase64Data",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 60,
                  "column": 5,
                  "endLine": 68
                },
                "parameters": [
                  {
                    "name": "base64Data",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "mediaType",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage\".GeminiMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 71,
                  "column": 5,
                  "endLine": 101
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addPDFFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 104,
                  "column": 5,
                  "endLine": 123
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addDocumentFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 126,
                  "column": 5,
                  "endLine": 140
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 142,
                  "column": 5,
                  "endLine": 144
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 146,
                  "column": 5,
                  "endLine": 148
                },
                "parameters": [],
                "returnType": "Content",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\".Content",
                "displayReturnType": "Content",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAsHTML",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 150,
                  "column": 5,
                  "endLine": 161
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createTextMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 164,
                  "column": 5,
                  "endLine": 166
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "GeminiMessage",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage\".GeminiMessage",
                "displayReturnType": "GeminiMessage",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createImageMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 168,
                  "column": 5,
                  "endLine": 172
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "imageData",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "mimeType",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "GeminiMessage",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage\".GeminiMessage",
                "displayReturnType": "GeminiMessage",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "serialize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 175,
                  "column": 5,
                  "endLine": 177
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "content",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 12,
                  "column": 5,
                  "endLine": 12
                },
                "type": "Content",
                "displayType": "Content",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
                  "line": 14,
                  "column": 5,
                  "endLine": 20
                },
                "parameters": [
                  {
                    "name": "role",
                    "type": "\"user\" | \"model\"",
                    "displayType": "GeminiRole",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "textContent",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "extends": "Message<Content>",
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 131,
            "sourceFilename": "GeminiMessage.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/messages/Message.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "Message",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
              "line": 4,
              "column": 1,
              "endLine": 25
            },
            "methods": [
              {
                "name": "getId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 9,
                  "column": 5,
                  "endLine": 11
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getTimestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 13,
                  "column": 5,
                  "endLine": 15
                },
                "parameters": [],
                "returnType": "Date",
                "resolvedReturnType": "Date",
                "displayReturnType": "Date",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addTextContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 18,
                  "column": 5,
                  "endLine": 18
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/Message\".Message",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              },
              {
                "name": "getRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 21,
                  "column": 5,
                  "endLine": 21
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 22,
                  "column": 5,
                  "endLine": 22
                },
                "parameters": [],
                "returnType": "T",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/Message\".Message.T",
                "displayReturnType": "T",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              },
              {
                "name": "getAsHTML",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 23,
                  "column": 5,
                  "endLine": 23
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              },
              {
                "name": "serialize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 24,
                  "column": 5,
                  "endLine": 24
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 5,
                  "column": 5,
                  "endLine": 5
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "protected"
              },
              {
                "name": "timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/Message.ts",
                  "line": 6,
                  "column": 5,
                  "endLine": 6
                },
                "type": "Date",
                "displayType": "Date",
                "isStatic": false,
                "visibility": "protected"
              }
            ],
            "constructors": [],
            "implements": [],
            "genericParameters": [
              {
                "name": "T",
                "defaultType": "any"
              }
            ],
            "isAbstract": true,
            "sourceLOC": 15,
            "sourceFilename": "Message.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/messages/OpenAIMessage.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "OpenAIMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
              "line": 11,
              "column": 1,
              "endLine": 177
            },
            "methods": [
              {
                "name": "fromMessageParam",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 23,
                  "column": 5,
                  "endLine": 27
                },
                "parameters": [
                  {
                    "name": "messageParam",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\".EasyInputMessage",
                    "displayType": "EasyInputMessage",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "OpenAIMessage",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage\".OpenAIMessage",
                "displayReturnType": "OpenAIMessage",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "ensureContentArray",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 29,
                  "column": 5,
                  "endLine": 35
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addContentPart",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 37,
                  "column": 5,
                  "endLine": 41
                },
                "parameters": [
                  {
                    "name": "part",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseInputText | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseInputImage | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseInputFile | import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseInputAudio",
                    "displayType": "ResponseInputContent",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage\".OpenAIMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addTextContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 43,
                  "column": 5,
                  "endLine": 49
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage\".OpenAIMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromURL",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 51,
                  "column": 5,
                  "endLine": 58
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage\".OpenAIMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromBase64",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 60,
                  "column": 5,
                  "endLine": 73
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "mediaType",
                    "type": "\"image/jpeg\" | \"image/png\" | \"image/gif\" | \"image/webp\"",
                    "displayType": "'image/jpeg' | 'image/png' | 'image/gif' | 'image/webp'",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage\".OpenAIMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addImageFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 76,
                  "column": 5,
                  "endLine": 106
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addPDFFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 109,
                  "column": 5,
                  "endLine": 128
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addPDFFromURL",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 131,
                  "column": 5,
                  "endLine": 139
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage\".OpenAIMessage",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addDocumentFromFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 142,
                  "column": 5,
                  "endLine": 162
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<this>",
                "resolvedReturnType": "Promise<this>",
                "displayReturnType": "Promise<this>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 164,
                  "column": 5,
                  "endLine": 166
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 168,
                  "column": 5,
                  "endLine": 170
                },
                "parameters": [],
                "returnType": "OpenAI.Responses.EasyInputMessage",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\".EasyInputMessage",
                "displayReturnType": "EasyInputMessage",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "serialize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 174,
                  "column": 5,
                  "endLine": 176
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "messageParam",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 12,
                  "column": 5,
                  "endLine": 12
                },
                "type": "OpenAI.Responses.EasyInputMessage",
                "displayType": "EasyInputMessage",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
                  "line": 14,
                  "column": 5,
                  "endLine": 20
                },
                "parameters": [
                  {
                    "name": "role",
                    "type": "\"user\" | \"assistant\" | \"system\"",
                    "displayType": "OpenAIRole",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "content",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "extends": "Message<OpenAI.Responses.EasyInputMessage>",
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 125,
            "sourceFilename": "OpenAIMessage.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/ipc/conversation-handlers.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "setupConversationHandlers",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 8,
              "column": 1,
              "endLine": 65
            },
            "parameters": [],
            "isExported": true,
            "isReactComponent": false
          }
        ]
      },
      "ipc": {
        "handlers": [
          {
            "channel": "conversation:create",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 14,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:sendMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 18,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:getHistory",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 22,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:clear",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 26,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:delete",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 30,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:deleteMultiple",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 34,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:updateName",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 38,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:getAll",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 42,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:getById",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 46,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:getTokens",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 50,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:toggleStar",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 54,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:getStarred",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 58,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "conversation:getRecent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
              "line": 62,
              "column": 3
            },
            "type": "handle"
          }
        ],
        "invocations": []
      },
      "isExecutable": true
    },
    {
      "path": "src/ipc/dialog-handlers.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "setupDialogHandlers",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/dialog-handlers.ts",
              "line": 10,
              "column": 1,
              "endLine": 110
            },
            "parameters": [],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": true,
            "isReactComponent": false
          }
        ]
      },
      "ipc": {
        "handlers": [
          {
            "channel": "dialog:showOpenDialog",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/dialog-handlers.ts",
              "line": 12,
              "column": 3
            },
            "type": "handle"
          },
          {
            "channel": "dialog:getFileStats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/dialog-handlers.ts",
              "line": 41,
              "column": 3
            },
            "type": "handle"
          }
        ],
        "invocations": []
      },
      "isExecutable": true
    },
    {
      "path": "src/ipc/import-handlers.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "registerImportHandlers",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/import-handlers.ts",
              "line": 13,
              "column": 1,
              "endLine": 150
            },
            "parameters": [],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": true,
            "isReactComponent": false
          }
        ]
      },
      "ipc": {
        "handlers": [
          {
            "channel": "import:webChat",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/import-handlers.ts",
              "line": 15,
              "column": 3
            },
            "type": "handle"
          }
        ],
        "invocations": []
      },
      "isExecutable": true
    },
    {
      "path": "src/ipc/logging-handlers.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "registerLoggingHandlers",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.ts",
              "line": 9,
              "column": 1,
              "endLine": 48
            },
            "parameters": [],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": true,
            "isReactComponent": false
          }
        ]
      },
      "ipc": {
        "handlers": [
          {
            "channel": "logging:getLogContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.ts",
              "line": 11,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "logging:getLogStats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.ts",
              "line": 25,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "logging:getAvailableLogKeys",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.ts",
              "line": 39,
              "column": 5
            },
            "type": "handle"
          }
        ],
        "invocations": []
      },
      "isExecutable": true
    },
    {
      "path": "src/ipc/pdfUtils.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "PDFUtils",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
              "line": 15,
              "column": 1,
              "endLine": 96
            },
            "methods": [
              {
                "name": "extractMetadata",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 21,
                  "column": 3,
                  "endLine": 40
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Absolute path to the PDF file"
                  }
                ],
                "returnType": "Promise<PDFMetadata>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils\").PDFMetadata>",
                "displayReturnType": "Promise<PDFMetadata>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Extract basic metadata from a PDF file",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "isPDFFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 47,
                  "column": 3,
                  "endLine": 65
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Absolute path to the file"
                  }
                ],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Check if a file is a PDF by extension and basic header validation",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "formatFileSize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 72,
                  "column": 3,
                  "endLine": 83
                },
                "parameters": [
                  {
                    "name": "bytes",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false,
                    "description": "- File size in bytes"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Format file size for human-readable display",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "generateThumbnail",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 91,
                  "column": 3,
                  "endLine": 95
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to PDF file"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Generate a placeholder thumbnail for PDF files\nTODO: Implement actual PDF thumbnail generation with pdf-lib or canvas",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [],
            "constructors": [],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 47,
            "sourceFilename": "pdfUtils.ts"
          }
        ],
        "interfaces": [
          {
            "name": "PDFMetadata",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "pageCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 8,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileSize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 9,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "hasThumbnail",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "thumbnailPath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/ipc/settings-handlers.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "registerSettingsHandlers",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 14,
              "column": 1,
              "endLine": 147
            },
            "parameters": [],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": true,
            "isReactComponent": false
          }
        ]
      },
      "ipc": {
        "handlers": [
          {
            "channel": "settings:getSupportedVendors",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 16,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:addApiKey",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 21,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:getApiKeys",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 35,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:removeApiKey",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 46,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:getApiKeyById",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 60,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:getShowTurnCounter",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 74,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:setShowTurnCounter",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 85,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:getLoggingConfig",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 99,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:setLoggingConfig",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 110,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:getApiLoggingEnabled",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 124,
              "column": 5
            },
            "type": "handle"
          },
          {
            "channel": "settings:setApiLoggingEnabled",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
              "line": 135,
              "column": 5
            },
            "type": "handle"
          }
        ],
        "invocations": []
      },
      "isExecutable": true
    },
    {
      "path": "src/preload/preload.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {},
      "ipc": {
        "handlers": [],
        "invocations": [
          {
            "channel": "settings:getSupportedVendors",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 12,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:addApiKey",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 15,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:getApiKeys",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 18,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:removeApiKey",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 21,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:getApiKeyById",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 24,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:getShowTurnCounter",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 27,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:setShowTurnCounter",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 30,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:getLoggingConfig",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 33,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:setLoggingConfig",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 36,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:getApiLoggingEnabled",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 39,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "settings:setApiLoggingEnabled",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 42,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "logging:getLogContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 46,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "logging:getLogStats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 49,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "logging:getAvailableLogKeys",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 52,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:create",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 57,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:sendMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 60,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:getHistory",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 63,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:clear",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 66,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:delete",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 69,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:deleteMultiple",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 72,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:updateName",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 75,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:getAll",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 78,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:getById",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 81,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:getTokens",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 84,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:toggleStar",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 87,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:getStarred",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 90,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "conversation:getRecent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 93,
              "column": 13
            },
            "type": "invoke"
          },
          {
            "channel": "dialog:showOpenDialog",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 98,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "dialog:getFileStats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 101,
              "column": 9
            },
            "type": "invoke"
          },
          {
            "channel": "import:webChat",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
              "line": 109,
              "column": 13
            },
            "type": "invoke"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/schemas/AnthropicV1Schema.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "validateAnthropicV1",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
              "line": 94,
              "column": 1,
              "endLine": 108
            },
            "parameters": [
              {
                "name": "data",
                "type": "any",
                "displayType": "any",
                "optional": false,
                "isRest": false,
                "description": "- JSON data to validate"
              }
            ],
            "returnType": "{ success: boolean; error?: string; data?: AnthropicV1Export }",
            "resolvedReturnType": "__type",
            "isExported": true,
            "jsdocDescription": "Validate JSON data against Anthropic v1 schema",
            "isReactComponent": false
          }
        ],
        "types": [
          {
            "name": "AnthropicContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
              "line": 84,
              "column": 1
            },
            "type": "z.infer<typeof AnthropicContentSchema>"
          },
          {
            "name": "AnthropicMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
              "line": 85,
              "column": 1
            },
            "type": "z.infer<typeof AnthropicMessageSchema>"
          },
          {
            "name": "AnthropicSettings",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
              "line": 86,
              "column": 1
            },
            "type": "z.infer<typeof AnthropicSettingsSchema>"
          },
          {
            "name": "AnthropicV1Export",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
              "line": 87,
              "column": 1
            },
            "type": "z.infer<typeof AnthropicV1Schema>"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/services/ConversationService.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "ConversationService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
              "line": 33,
              "column": 1,
              "endLine": 906
            },
            "methods": [
              {
                "name": "createManager",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 54,
                  "column": 3,
                  "endLine": 93
                },
                "parameters": [
                  {
                    "name": "vendor",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "modelId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<ConversationManager>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager\").ConversationManager>",
                "displayReturnType": "Promise<ConversationManager>",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorAndModelIds",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 95,
                  "column": 3,
                  "endLine": 129
                },
                "parameters": [
                  {
                    "name": "modelName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ vendorId: string; modelId: string }>",
                "resolvedReturnType": "Promise<{ vendorId: string; modelId: string; }>",
                "displayReturnType": "Promise<{ vendorId: string; modelId: string }>",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 131,
                  "column": 3,
                  "endLine": 186
                },
                "parameters": [
                  {
                    "name": "modelName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "conversationName",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation>",
                "displayReturnType": "Promise<Conversation>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "sendMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 188,
                  "column": 3,
                  "endLine": 340
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "messageText",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "filePaths",
                    "type": "string[]",
                    "displayType": "string[]",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{\n    success: boolean;\n    response?: string;\n    error?: string;\n    fileResults?: {\n      validFiles: string[];\n      invalidFiles: Array<{ path: string; name: string; error: string }>;\n    };\n  }>",
                "resolvedReturnType": "Promise<{ success: boolean; response?: string; error?: string; fileResults?: { validFiles: string[]; invalidFiles: { path: string; name: string; error: string; }[]; }; }>",
                "displayReturnType": "Promise<{\n    success: boolean;\n    response?: string;\n    error?: string;\n    fileResults?: {\n      validFiles: string[];\n      invalidFiles: Array<{ path: string; name: string; error: string }>;\n    };\n  }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "validateAndStoreFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 350,
                  "column": 3,
                  "endLine": 437
                },
                "parameters": [
                  {
                    "name": "filePaths",
                    "type": "string[]",
                    "displayType": "string[] | undefined",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of file paths to validate and store"
                  },
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Conversation ID for logging"
                  },
                  {
                    "name": "vendorName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Vendor name for validation"
                  }
                ],
                "returnType": "Promise<{\n    validFiles: string[];\n    invalidFiles: Array<{ path: string; name: string; error: string }>;\n    storedFiles: StoredFileWithMetadata[];\n  }>",
                "resolvedReturnType": "Promise<{ validFiles: string[]; invalidFiles: { path: string; name: string; error: string; }[]; storedFiles: import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").StoredFileWithMetadata[]; }>",
                "displayReturnType": "Promise<{\n    validFiles: string[];\n    invalidFiles: Array<{ path: string; name: string; error: string }>;\n    storedFiles: StoredFileWithMetadata[];\n  }>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Validate and store files for message attachment",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getOrLoadConversationData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 444,
                  "column": 3,
                  "endLine": 461
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- The conversation ID to retrieve"
                  }
                ],
                "returnType": "Promise<{\n    success: boolean;\n    conversationData?: ConversationData;\n    error?: string\n  }>",
                "resolvedReturnType": "Promise<{ success: boolean; conversationData?: ConversationData; error?: string; }>",
                "displayReturnType": "Promise<{\n    success: boolean;\n    conversationData?: ConversationData;\n    error?: string\n  }>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Get conversation data from memory or load from database if not present",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "loadConversationFromDatabase",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 463,
                  "column": 3,
                  "endLine": 522
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getHistory",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 524,
                  "column": 3,
                  "endLine": 540
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; history?: any[]; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; history?: any[]; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; history?: any[]; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "clearConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 542,
                  "column": 3,
                  "endLine": 567
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 569,
                  "column": 3,
                  "endLine": 618
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteMultipleConversations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 620,
                  "column": 3,
                  "endLine": 659
                },
                "parameters": [
                  {
                    "name": "conversationIds",
                    "type": "string[]",
                    "displayType": "string[]",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; error?: string; deletedCount?: number }>",
                "resolvedReturnType": "Promise<{ success: boolean; error?: string; deletedCount?: number; }>",
                "displayReturnType": "Promise<{ success: boolean; error?: string; deletedCount?: number }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "updateConversationName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 661,
                  "column": 3,
                  "endLine": 679
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 681,
                  "column": 3,
                  "endLine": 747
                },
                "parameters": [
                  {
                    "name": "limit",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "offset",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; conversations?: any[]; total?: number; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; conversations?: any[]; total?: number; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; conversations?: any[]; total?: number; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "toggleStarConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 749,
                  "column": 3,
                  "endLine": 786
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; isStarred?: boolean; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; isStarred?: boolean; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; isStarred?: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversationTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 788,
                  "column": 3,
                  "endLine": 809
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; tokens?: { inputTokens: number; outputTokens: number; totalTokens: number }; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; tokens?: { inputTokens: number; outputTokens: number; totalTokens: number; }; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; tokens?: { inputTokens: number; outputTokens: number; totalTokens: number }; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getConversationById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 811,
                  "column": 3,
                  "endLine": 836
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation>",
                "displayReturnType": "Promise<Conversation>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getStarredConversations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 838,
                  "column": 3,
                  "endLine": 870
                },
                "parameters": [
                  {
                    "name": "limit",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; conversations?: any[]; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; conversations?: any[]; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; conversations?: any[]; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getRecentConversations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 872,
                  "column": 3,
                  "endLine": 904
                },
                "parameters": [
                  {
                    "name": "limit",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ success: boolean; conversations?: any[]; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; conversations?: any[]; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; conversations?: any[]; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "conversations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 34,
                  "column": 3,
                  "endLine": 34
                },
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "db",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 35,
                  "column": 3,
                  "endLine": 35
                },
                "type": "ReturnType<typeof drizzle>",
                "displayType": "ReturnType<typeof drizzle>",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "conversationRepository",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 36,
                  "column": 3,
                  "endLine": 36
                },
                "type": "ConversationRepository",
                "displayType": "ConversationRepository",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "messageRepository",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 37,
                  "column": 3,
                  "endLine": 37
                },
                "type": "MessageRepository",
                "displayType": "MessageRepository",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "fileAttachmentRepository",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 38,
                  "column": 3,
                  "endLine": 38
                },
                "type": "FileAttachmentRepository",
                "displayType": "FileAttachmentRepository",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "modelRepository",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 39,
                  "column": 3,
                  "endLine": 39
                },
                "type": "ModelRepository",
                "displayType": "ModelRepository",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "fileStorageService",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 40,
                  "column": 3,
                  "endLine": 40
                },
                "type": "FileStorageService",
                "displayType": "FileStorageService",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "settingsService",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 41,
                  "column": 3,
                  "endLine": 41
                },
                "type": "SettingsService",
                "displayType": "SettingsService",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 43,
                  "column": 3,
                  "endLine": 52
                },
                "parameters": [
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 686,
            "sourceFilename": "ConversationService.ts"
          }
        ],
        "interfaces": [
          {
            "name": "ConversationData",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
              "line": 25,
              "column": 1
            },
            "properties": [
              {
                "name": "manager",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 26,
                  "column": 3
                },
                "type": "ConversationManager",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 27,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "modelId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 28,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "localId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 29,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "createdAt",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
                  "line": 30,
                  "column": 3
                },
                "type": "Date",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "conversationId",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
            "line": 449,
            "column": 28
          },
          "method": "get"
        },
        {
          "query": "conversationId",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
            "line": 457,
            "column": 26
          },
          "method": "get"
        },
        {
          "query": "conversationId",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
            "line": 544,
            "column": 32
          },
          "method": "get"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/services/DatabaseBackupService.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "DatabaseBackupService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
              "line": 17,
              "column": 1,
              "endLine": 284
            },
            "methods": [
              {
                "name": "createBackup",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 36,
                  "column": 3,
                  "endLine": 88
                },
                "parameters": [
                  {
                    "name": "dbType",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "'prod'",
                    "isRest": false,
                    "description": "- Database type (e.g., 'prod', 'test')"
                  },
                  {
                    "name": "dbName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "'menagerie'",
                    "isRest": false,
                    "description": "- Database name (e.g., 'menagerie')"
                  }
                ],
                "returnType": "Promise<BackupInfo>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService\").BackupInfo>",
                "displayReturnType": "Promise<BackupInfo>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Create a backup of the database",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "listBackups",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 96,
                  "column": 3,
                  "endLine": 161
                },
                "parameters": [
                  {
                    "name": "dbType",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false,
                    "description": "- Optional filter by database type"
                  },
                  {
                    "name": "dbName",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false,
                    "description": "- Optional filter by database name"
                  }
                ],
                "returnType": "BackupInfo[]",
                "resolvedReturnType": "import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService\").BackupInfo[]",
                "displayReturnType": "BackupInfo[]",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "List all available backups",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "restoreBackup",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 170,
                  "column": 3,
                  "endLine": 220
                },
                "parameters": [
                  {
                    "name": "backupFilename",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Filename of the backup to restore"
                  },
                  {
                    "name": "dbType",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "'prod'",
                    "isRest": false,
                    "description": "- Database type (must match backup filename)"
                  },
                  {
                    "name": "dbName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "defaultValue": "'menagerie'",
                    "isRest": false,
                    "description": "- Database name (must match backup filename)"
                  }
                ],
                "returnType": "Promise<boolean>",
                "resolvedReturnType": "Promise<boolean>",
                "displayReturnType": "Promise<boolean>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Restore database from a backup file",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteOldBackups",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 229,
                  "column": 3,
                  "endLine": 275
                },
                "parameters": [
                  {
                    "name": "keepCount",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false,
                    "description": "- Number of most recent backups to keep"
                  },
                  {
                    "name": "dbType",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false,
                    "description": "- Optional filter by database type"
                  },
                  {
                    "name": "dbName",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false,
                    "description": "- Optional filter by database name"
                  }
                ],
                "returnType": "Promise<number>",
                "resolvedReturnType": "Promise<number>",
                "displayReturnType": "Promise<number>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Delete old backups, keeping only the most recent N backups",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getBackupsDirectory",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 281,
                  "column": 3,
                  "endLine": 283
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the path to the backups directory",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "backupsDir",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 18,
                  "column": 3,
                  "endLine": 18
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 20,
                  "column": 3,
                  "endLine": 28
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 175,
            "sourceFilename": "DatabaseBackupService.ts"
          }
        ],
        "interfaces": [
          {
            "name": "BackupInfo",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
              "line": 10,
              "column": 1
            },
            "properties": [
              {
                "name": "filename",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fullPath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 13,
                  "column": 3
                },
                "type": "Date",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "sizeBytes",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
                  "line": 14,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/services/FileMigrationService.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "FileMigrationService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
              "line": 23,
              "column": 1,
              "endLine": 246
            },
            "methods": [
              {
                "name": "scanUnmigratedFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 50,
                  "column": 3,
                  "endLine": 79
                },
                "parameters": [],
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Scan for unmigrated file attachments (those not in managed storage)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "migrateFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 86,
                  "column": 3,
                  "endLine": 170
                },
                "parameters": [
                  {
                    "name": "attachmentRecord",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false,
                    "description": "- File attachment record to migrate"
                  }
                ],
                "returnType": "Promise<boolean>",
                "resolvedReturnType": "Promise<boolean>",
                "displayReturnType": "Promise<boolean>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Migrate a single file attachment to managed storage",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "runMigration",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 176,
                  "column": 3,
                  "endLine": 224
                },
                "parameters": [],
                "returnType": "Promise<MigrationStats>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService\").MigrationStats>",
                "displayReturnType": "Promise<MigrationStats>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Run the complete migration process",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMigrationStats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 230,
                  "column": 3,
                  "endLine": 232
                },
                "parameters": [],
                "returnType": "MigrationStats",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService\".MigrationStats",
                "displayReturnType": "MigrationStats",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get current migration statistics",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "resetStats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 237,
                  "column": 3,
                  "endLine": 245
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Reset migration statistics (useful for testing or re-running)",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "fileStorageService",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 24,
                  "column": 3,
                  "endLine": 24
                },
                "type": "FileStorageService",
                "displayType": "FileStorageService",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "fileAttachmentRepository",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 25,
                  "column": 3,
                  "endLine": 25
                },
                "type": "FileAttachmentRepository",
                "displayType": "FileAttachmentRepository",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "messageRepository",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 26,
                  "column": 3,
                  "endLine": 26
                },
                "type": "MessageRepository",
                "displayType": "MessageRepository",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "db",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 27,
                  "column": 3,
                  "endLine": 27
                },
                "type": "ReturnType<typeof drizzle>",
                "displayType": "ReturnType<typeof drizzle>",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "stats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 28,
                  "column": 3,
                  "endLine": 28
                },
                "type": "MigrationStats",
                "displayType": "MigrationStats",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 30,
                  "column": 3,
                  "endLine": 44
                },
                "parameters": [
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 162,
            "sourceFilename": "FileMigrationService.ts"
          }
        ],
        "interfaces": [
          {
            "name": "MigrationStats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
              "line": 15,
              "column": 1
            },
            "properties": [
              {
                "name": "totalFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 16,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "migrated",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 17,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "skipped",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 18,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "failed",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 19,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "errors",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "Array<{ file: string; error: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/services/FileStorageService.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "FileStorageService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
              "line": 28,
              "column": 1,
              "endLine": 422
            },
            "methods": [
              {
                "name": "getDestinationPath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 46,
                  "column": 3,
                  "endLine": 71
                },
                "parameters": [
                  {
                    "name": "messageId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Message ID for directory organization"
                  },
                  {
                    "name": "messageCreatedAt",
                    "type": "string | Date",
                    "displayType": "Date | string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Message creation timestamp for date-based organization"
                  },
                  {
                    "name": "fileName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Original filename"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Calculate the destination path for a file without actually storing it\nUseful for previewing migration or showing where files will be stored",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "storeFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 80,
                  "column": 3,
                  "endLine": 176
                },
                "parameters": [
                  {
                    "name": "sourceFilePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Original file path to copy from"
                  },
                  {
                    "name": "messageId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Message ID for directory organization"
                  },
                  {
                    "name": "messageCreatedAt",
                    "type": "string | Date",
                    "displayType": "Date | string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Message creation timestamp for date-based organization"
                  }
                ],
                "returnType": "Promise<StoredFileResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").StoredFileResult>",
                "displayReturnType": "Promise<StoredFileResult>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Store a file in managed storage with automatic duplicate handling",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findUniqueFileName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 184,
                  "column": 3,
                  "endLine": 198
                },
                "parameters": [
                  {
                    "name": "targetDir",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Directory to check for existing files"
                  },
                  {
                    "name": "fileName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Desired filename"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Find a unique filename in the target directory by appending -1, -2, etc.",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 205,
                  "column": 3,
                  "endLine": 226
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to file in managed storage"
                  }
                ],
                "returnType": "Promise<boolean>",
                "resolvedReturnType": "Promise<boolean>",
                "displayReturnType": "Promise<boolean>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Delete a single file from managed storage",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteMessageFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 233,
                  "column": 3,
                  "endLine": 271
                },
                "parameters": [
                  {
                    "name": "messageId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Message ID to delete files for"
                  }
                ],
                "returnType": "Promise<FileStorageStats>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").FileStorageStats>",
                "displayReturnType": "Promise<FileStorageStats>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Delete all files associated with a message",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteConversationFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 278,
                  "column": 3,
                  "endLine": 316
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Conversation ID to delete files for"
                  }
                ],
                "returnType": "Promise<FileStorageStats>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").FileStorageStats>",
                "displayReturnType": "Promise<FileStorageStats>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Delete all files associated with a conversation (across all messages)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "isManagedPath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 323,
                  "column": 3,
                  "endLine": 327
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to check"
                  }
                ],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Check if a file path points to managed storage",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "cleanupOrphanedFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 333,
                  "column": 3,
                  "endLine": 383
                },
                "parameters": [],
                "returnType": "Promise<FileStorageStats>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService\").FileStorageStats>",
                "displayReturnType": "Promise<FileStorageStats>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Scan managed storage for orphaned files (files without database records)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "scanForOrphanedFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 391,
                  "column": 3,
                  "endLine": 421
                },
                "parameters": [
                  {
                    "name": "dirPath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Directory to scan"
                  },
                  {
                    "name": "dbFilePaths",
                    "type": "Set<string>",
                    "displayType": "Set<string>",
                    "optional": false,
                    "isRest": false,
                    "description": "- Set of file paths from database"
                  }
                ],
                "returnType": "string[]",
                "resolvedReturnType": "string[]",
                "displayReturnType": "string[]",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Recursively scan directory for files not in the database",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "fileAttachmentRepository",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 29,
                  "column": 3,
                  "endLine": 29
                },
                "type": "FileAttachmentRepository",
                "displayType": "FileAttachmentRepository",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "attachmentsRoot",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 30,
                  "column": 3,
                  "endLine": 30
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 32,
                  "column": 3,
                  "endLine": 36
                },
                "parameters": [
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 258,
            "sourceFilename": "FileStorageService.ts"
          }
        ],
        "interfaces": [
          {
            "name": "StoredFileResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
              "line": 11,
              "column": 1
            },
            "properties": [
              {
                "name": "storedPath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 13,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "StoredFileWithMetadata",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
              "line": 16,
              "column": 1
            },
            "properties": [
              {
                "name": "originalPath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 17,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileSize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 18,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "lineCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 19,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileExtension",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "extends": [
              "StoredFileResult"
            ]
          },
          {
            "name": "FileStorageStats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
              "line": 23,
              "column": 1
            },
            "properties": [
              {
                "name": "filesDeleted",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 24,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "errors",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
                  "line": 25,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/services/LoggingService.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "LoggingService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
              "line": 23,
              "column": 1,
              "endLine": 184
            },
            "methods": [
              {
                "name": "logApiRequest",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 34,
                  "column": 3,
                  "endLine": 44
                },
                "parameters": [
                  {
                    "name": "vendor",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "model",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "request",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Log an API request with sanitized data",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "logApiResponse",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 49,
                  "column": 3,
                  "endLine": 68
                },
                "parameters": [
                  {
                    "name": "vendor",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "model",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "response",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "tokens",
                    "type": "__type",
                    "displayType": "{ input?: number; output?: number; total?: number }",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "duration",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Log an API response with sanitized data and performance metrics",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLogFilePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 73,
                  "column": 3,
                  "endLine": 79
                },
                "parameters": [
                  {
                    "name": "logKey",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Get the file path for a specific log type",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLogContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 84,
                  "column": 3,
                  "endLine": 94
                },
                "parameters": [
                  {
                    "name": "logKey",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Read the contents of a log file",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLogStats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 99,
                  "column": 3,
                  "endLine": 118
                },
                "parameters": [
                  {
                    "name": "logKey",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<{ entryCount: number; fileSize: number }>",
                "resolvedReturnType": "Promise<{ entryCount: number; fileSize: number; }>",
                "displayReturnType": "Promise<{ entryCount: number; fileSize: number }>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Get statistics about a log file",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "isBase64",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 123,
                  "column": 3,
                  "endLine": 145
                },
                "parameters": [
                  {
                    "name": "str",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Check if a string appears to be Base64 encoded data",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "abbreviateBase64Fields",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 150,
                  "column": 3,
                  "endLine": 176
                },
                "parameters": [
                  {
                    "name": "obj",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "any",
                "resolvedReturnType": "any",
                "displayReturnType": "any",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Recursively abbreviate Base64-like content in any object",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAvailableLogKeys",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 181,
                  "column": 3,
                  "endLine": 183
                },
                "parameters": [],
                "returnType": "string[]",
                "resolvedReturnType": "string[]",
                "displayReturnType": "string[]",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Get all available log keys",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "LOG_FILE_MAP",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
                  "line": 25,
                  "column": 3,
                  "endLine": 29
                },
                "type": "Record<string, string>",
                "displayType": "Record<string, string>",
                "isStatic": true,
                "visibility": "private"
              }
            ],
            "constructors": [],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 106,
            "sourceFilename": "LoggingService.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/services/UrlEnrichmentService.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "UrlEnrichmentService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
              "line": 20,
              "column": 1,
              "endLine": 245
            },
            "methods": [
              {
                "name": "enrichUrl",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 30,
                  "column": 3,
                  "endLine": 111
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- The URL to enrich"
                  },
                  {
                    "name": "options",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService\".UrlEnrichmentOptions",
                    "displayType": "UrlEnrichmentOptions",
                    "optional": false,
                    "defaultValue": "{}",
                    "isRest": false,
                    "description": "- Optional configuration for the enrichment process"
                  }
                ],
                "returnType": "Promise<WebSearchResult>",
                "resolvedReturnType": "Promise<WebSearchResult>",
                "displayReturnType": "Promise<WebSearchResult>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Enriches a single URL by fetching its page title and favicon",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "enrichUrls",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 119,
                  "column": 3,
                  "endLine": 135
                },
                "parameters": [
                  {
                    "name": "urls",
                    "type": "string[]",
                    "displayType": "string[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of URLs to enrich"
                  },
                  {
                    "name": "options",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService\".UrlEnrichmentOptions",
                    "displayType": "UrlEnrichmentOptions",
                    "optional": false,
                    "defaultValue": "{}",
                    "isRest": false,
                    "description": "- Optional configuration for the enrichment process"
                  }
                ],
                "returnType": "Promise<WebSearchResult[]>",
                "resolvedReturnType": "Promise<WebSearchResult[]>",
                "displayReturnType": "Promise<WebSearchResult[]>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Enriches multiple URLs concurrently",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "extractTitle",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 143,
                  "column": 3,
                  "endLine": 164
                },
                "parameters": [
                  {
                    "name": "$",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/cheerio/dist/commonjs/load\".CheerioAPI",
                    "displayType": "CheerioAPI",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "domain",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Domain name for fallback"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Extracts page title with fallback priority",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "extractFaviconUrl",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 172,
                  "column": 3,
                  "endLine": 203
                },
                "parameters": [
                  {
                    "name": "$",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/cheerio/dist/commonjs/load\".CheerioAPI",
                    "displayType": "CheerioAPI",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "urlObj",
                    "type": "URL",
                    "displayType": "URL",
                    "optional": false,
                    "isRest": false,
                    "description": "- Parsed URL object for making favicon URLs absolute"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Extracts favicon URL with fallback priority",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "createFallbackResult",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 211,
                  "column": 3,
                  "endLine": 231
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Original URL"
                  },
                  {
                    "name": "domain",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Domain name"
                  }
                ],
                "returnType": "WebSearchResult",
                "resolvedReturnType": "WebSearchResult",
                "displayReturnType": "WebSearchResult",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Creates fallback WebSearchResult for failed enrichment",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "extractDomainSafely",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 238,
                  "column": 3,
                  "endLine": 244
                },
                "parameters": [
                  {
                    "name": "url",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- URL string"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Safely extracts domain from URL with fallback",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "DEFAULT_TIMEOUT",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 21,
                  "column": 3,
                  "endLine": 21
                },
                "isStatic": true,
                "visibility": "private"
              },
              {
                "name": "DEFAULT_USER_AGENT",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 22,
                  "column": 3,
                  "endLine": 22
                },
                "isStatic": true,
                "visibility": "private"
              }
            ],
            "constructors": [],
            "implements": [],
            "jsdocDescription": "URL enrichment service that converts bare URLs to WebSearchResult format\nwith page titles and favicons extracted from the actual web pages",
            "isAbstract": false,
            "sourceLOC": 142,
            "sourceFilename": "UrlEnrichmentService.ts"
          }
        ],
        "interfaces": [
          {
            "name": "UrlEnrichmentOptions",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
              "line": 11,
              "column": 1
            },
            "properties": [
              {
                "name": "timeout",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "userAgent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
                  "line": 13,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "content-type",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
            "line": 68,
            "column": 27
          },
          "method": "get"
        },
        {
          "query": "promises",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
            "line": 127,
            "column": 27
          },
          "method": "all"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/repositories/ConversationRepository.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "ConversationRepository",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
              "line": 12,
              "column": 1,
              "endLine": 341
            },
            "methods": [
              {
                "name": "getDb",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 23,
                  "column": 3,
                  "endLine": 25
                },
                "parameters": [],
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "preloadVendorCache",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 27,
                  "column": 3,
                  "endLine": 32
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "preloadModelCache",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 34,
                  "column": 3,
                  "endLine": 39
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorNameByIdSync",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 41,
                  "column": 3,
                  "endLine": 50
                },
                "parameters": [
                  {
                    "name": "vendorId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getModelNameByIdSync",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 52,
                  "column": 3,
                  "endLine": 61
                },
                "parameters": [
                  {
                    "name": "modelId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorNameById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 63,
                  "column": 3,
                  "endLine": 80
                },
                "parameters": [
                  {
                    "name": "vendorId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getModelNameById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 82,
                  "column": 3,
                  "endLine": 99
                },
                "parameters": [
                  {
                    "name": "modelId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "transformToConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 101,
                  "column": 3,
                  "endLine": 121
                },
                "parameters": [
                  {
                    "name": "record",
                    "type": "__type",
                    "displayType": "ConversationRecord",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation>",
                "displayReturnType": "Promise<Conversation>",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "transformToConversationSync",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 123,
                  "column": 3,
                  "endLine": 143
                },
                "parameters": [
                  {
                    "name": "record",
                    "type": "__type",
                    "displayType": "ConversationRecord",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Conversation",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\".Conversation",
                "displayReturnType": "Conversation",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "create",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 145,
                  "column": 3,
                  "endLine": 168
                },
                "parameters": [
                  {
                    "name": "conversation",
                    "type": "__type",
                    "displayType": "NewConversation",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Conversation",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\".Conversation",
                "displayReturnType": "Conversation",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 170,
                  "column": 3,
                  "endLine": 176
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation | null>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation>",
                "displayReturnType": "Promise<Conversation | null>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findAll",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 178,
                  "column": 3,
                  "endLine": 213
                },
                "parameters": [
                  {
                    "name": "limit",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  },
                  {
                    "name": "offset",
                    "type": "number",
                    "displayType": "number",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation[]>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation[]>",
                "displayReturnType": "Promise<Conversation[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findByVendorAndModel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 215,
                  "column": 3,
                  "endLine": 227
                },
                "parameters": [
                  {
                    "name": "vendorId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "modelId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation[]>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation[]>",
                "displayReturnType": "Promise<Conversation[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findByVendorConversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 229,
                  "column": 3,
                  "endLine": 240
                },
                "parameters": [
                  {
                    "name": "vendorId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "vendorConversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation | null>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation>",
                "displayReturnType": "Promise<Conversation | null>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "conversationToDbUpdates",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 242,
                  "column": 3,
                  "endLine": 258
                },
                "parameters": [
                  {
                    "name": "updates",
                    "type": "__type",
                    "displayType": "Partial<Conversation>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Partial<ConversationRecord>",
                "resolvedReturnType": "__type",
                "displayReturnType": "Partial<ConversationRecord>",
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "update",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 260,
                  "column": 3,
                  "endLine": 270
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "updates",
                    "type": "__type",
                    "displayType": "Partial<Conversation>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation | null>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation>",
                "displayReturnType": "Promise<Conversation | null>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "delete",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 272,
                  "column": 3,
                  "endLine": 277
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<boolean>",
                "resolvedReturnType": "Promise<boolean>",
                "displayReturnType": "Promise<boolean>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 279,
                  "column": 3,
                  "endLine": 282
                },
                "parameters": [],
                "returnType": "Promise<number>",
                "resolvedReturnType": "Promise<number>",
                "displayReturnType": "Promise<number>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findStarred",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 285,
                  "column": 3,
                  "endLine": 312
                },
                "parameters": [
                  {
                    "name": "limit",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "defaultValue": "STARRED_CHATS_SIDEBAR_LIMIT",
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation[]>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation[]>",
                "displayReturnType": "Promise<Conversation[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findRecent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 314,
                  "column": 3,
                  "endLine": 340
                },
                "parameters": [
                  {
                    "name": "limit",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "defaultValue": "RECENT_CHATS_SIDEBAR_LIMIT",
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Conversation[]>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\").Conversation[]>",
                "displayReturnType": "Promise<Conversation[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "dbService",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 13,
                  "column": 3,
                  "endLine": 13
                },
                "type": "DatabaseService",
                "displayType": "DatabaseService",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "vendorCache",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 14,
                  "column": 3,
                  "endLine": 14
                },
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "modelCache",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 15,
                  "column": 3,
                  "endLine": 15
                },
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
                  "line": 17,
                  "column": 3,
                  "endLine": 21
                },
                "parameters": [
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 274,
            "sourceFilename": "ConversationRepository.ts"
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "vendorId",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
            "line": 43,
            "column": 14
          },
          "method": "get"
        },
        {
          "query": "modelId",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
            "line": 54,
            "column": 14
          },
          "method": "get"
        },
        {
          "query": "vendorId",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
            "line": 66,
            "column": 14
          },
          "method": "get"
        },
        {
          "query": "modelId",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
            "line": 85,
            "column": 14
          },
          "method": "get"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/repositories/FileAttachmentRepository.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "FileAttachmentRepository",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
              "line": 10,
              "column": 1,
              "endLine": 108
            },
            "methods": [
              {
                "name": "getDb",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 17,
                  "column": 3,
                  "endLine": 19
                },
                "parameters": [],
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "create",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 21,
                  "column": 3,
                  "endLine": 24
                },
                "parameters": [
                  {
                    "name": "attachment",
                    "type": "__type",
                    "displayType": "NewFileAttachment",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<FileAttachmentRecord>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; message_id: string; file_name: string; file_path: string; file_size: number; line_count: number; page_count: number; file_extension: string; }>",
                "displayReturnType": "Promise<FileAttachmentRecord>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 26,
                  "column": 3,
                  "endLine": 29
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<FileAttachmentRecord | null>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; message_id: string; file_name: string; file_path: string; file_size: number; line_count: number; page_count: number; file_extension: string; }>",
                "displayReturnType": "Promise<FileAttachmentRecord | null>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findByMessageId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 31,
                  "column": 3,
                  "endLine": 38
                },
                "parameters": [
                  {
                    "name": "messageId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<FileAttachmentRecord[]>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; message_id: string; file_name: string; file_path: string; file_size: number; line_count: number; page_count: number; file_extension: string; }[]>",
                "displayReturnType": "Promise<FileAttachmentRecord[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 40,
                  "column": 3,
                  "endLine": 42
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteByMessageId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 44,
                  "column": 3,
                  "endLine": 46
                },
                "parameters": [
                  {
                    "name": "messageId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<void>",
                "resolvedReturnType": "Promise<void>",
                "displayReturnType": "Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteByConversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 48,
                  "column": 3,
                  "endLine": 74
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<number>",
                "resolvedReturnType": "Promise<number>",
                "displayReturnType": "Promise<number>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findAll",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 76,
                  "column": 3,
                  "endLine": 79
                },
                "parameters": [],
                "returnType": "Promise<FileAttachmentRecord[]>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; message_id: string; file_name: string; file_path: string; file_size: number; line_count: number; page_count: number; file_extension: string; }[]>",
                "displayReturnType": "Promise<FileAttachmentRecord[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findByConversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 81,
                  "column": 3,
                  "endLine": 102
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<FileAttachmentRecord[]>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; message_id: string; file_name: string; file_path: string; file_size: number; line_count: number; page_count: number; file_extension: string; }[]>",
                "displayReturnType": "Promise<FileAttachmentRecord[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "count",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 104,
                  "column": 3,
                  "endLine": 107
                },
                "parameters": [],
                "returnType": "Promise<number>",
                "resolvedReturnType": "Promise<number>",
                "displayReturnType": "Promise<number>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "dbService",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 11,
                  "column": 3,
                  "endLine": 11
                },
                "type": "DatabaseService",
                "displayType": "DatabaseService",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
                  "line": 13,
                  "column": 3,
                  "endLine": 15
                },
                "parameters": [
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 76,
            "sourceFilename": "FileAttachmentRepository.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/repositories/MessageRepository.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "MessageRepository",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
              "line": 10,
              "column": 1,
              "endLine": 146
            },
            "methods": [
              {
                "name": "getDb",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 17,
                  "column": 3,
                  "endLine": 19
                },
                "parameters": [],
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "create",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 21,
                  "column": 3,
                  "endLine": 53
                },
                "parameters": [
                  {
                    "name": "message",
                    "type": "__type",
                    "displayType": "NewMessage",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "MessageRecord",
                "resolvedReturnType": "__type",
                "displayReturnType": "MessageRecord",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 55,
                  "column": 3,
                  "endLine": 58
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<MessageRecord | null>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; vendor_data: Record<string, any>; conversation_id: string; vendor_message_id: string; vendor_parent_uuid: string; role: string; content: string; sequence: number; input_tokens: number; output_tokens: number; total_tokens: number; }>",
                "displayReturnType": "Promise<MessageRecord | null>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findByConversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 60,
                  "column": 3,
                  "endLine": 67
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<MessageRecord[]>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; vendor_data: Record<string, any>; conversation_id: string; vendor_message_id: string; vendor_parent_uuid: string; role: string; content: string; sequence: number; input_tokens: number; output_tokens: number; total_tokens: number; }[]>",
                "displayReturnType": "Promise<MessageRecord[]>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getNextSequenceNumber",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 69,
                  "column": 3,
                  "endLine": 77
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<number>",
                "resolvedReturnType": "Promise<number>",
                "displayReturnType": "Promise<number>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "update",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 79,
                  "column": 3,
                  "endLine": 88
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "updates",
                    "type": "__type",
                    "displayType": "Partial<Omit<MessageRecord, 'id' | 'created_at' | 'updated_at'>>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<MessageRecord | null>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; vendor_data: Record<string, any>; conversation_id: string; vendor_message_id: string; vendor_parent_uuid: string; role: string; content: string; sequence: number; input_tokens: number; output_tokens: number; total_tokens: number; }>",
                "displayReturnType": "Promise<MessageRecord | null>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "delete",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 90,
                  "column": 3,
                  "endLine": 93
                },
                "parameters": [
                  {
                    "name": "id",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<boolean>",
                "resolvedReturnType": "Promise<boolean>",
                "displayReturnType": "Promise<boolean>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "deleteByConversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 95,
                  "column": 3,
                  "endLine": 100
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<number>",
                "resolvedReturnType": "Promise<number>",
                "displayReturnType": "Promise<number>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getLatestMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 102,
                  "column": 3,
                  "endLine": 112
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<MessageRecord | null>",
                "resolvedReturnType": "Promise<{ id: string; created_at: string; updated_at: string; vendor_data: Record<string, any>; conversation_id: string; vendor_message_id: string; vendor_parent_uuid: string; role: string; content: string; sequence: number; input_tokens: number; output_tokens: number; total_tokens: number; }>",
                "displayReturnType": "Promise<MessageRecord | null>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMessageCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 114,
                  "column": 3,
                  "endLine": 122
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<number>",
                "resolvedReturnType": "Promise<number>",
                "displayReturnType": "Promise<number>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findByConversationIdWithAttachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 124,
                  "column": 3,
                  "endLine": 145
                },
                "parameters": [
                  {
                    "name": "conversationId",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Array<MessageRecord & { fileAttachments: FileAttachmentRecord[] }>>",
                "resolvedReturnType": "Promise<({ id: string; created_at: string; updated_at: string; vendor_data: Record<string, any>; conversation_id: string; vendor_message_id: string; vendor_parent_uuid: string; role: string; content: string; sequence: number; input_tokens: number; output_tokens: number; total_tokens: number; } & { fileAttachments: { id: string; created_at: string; updated_at: string; message_id: string; file_name: string; file_path: string; file_size: number; line_count: number; page_count: number; file_extension: string; }[]; })[]>",
                "displayReturnType": "Promise<Array<MessageRecord & { fileAttachments: FileAttachmentRecord[] }>>",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "dbService",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 11,
                  "column": 3,
                  "endLine": 11
                },
                "type": "DatabaseService",
                "displayType": "DatabaseService",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
                  "line": 13,
                  "column": 3,
                  "endLine": 15
                },
                "parameters": [
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 113,
            "sourceFilename": "MessageRepository.ts"
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "messageRecords.map(async (message) => {\n        const attachments = this.getDb()\n          .select()\n          .from(fileAttachments)\n          .where(eq(fileAttachments.message_id, message.id))\n          .all();\n\n        return {\n          ...message,\n          fileAttachments: attachments\n        };\n      })",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
            "line": 129,
            "column": 43
          },
          "method": "all"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/repositories/ModelRepository.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "ModelRepository",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
              "line": 18,
              "column": 1,
              "endLine": 220
            },
            "methods": [
              {
                "name": "getDb",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 26,
                  "column": 3,
                  "endLine": 28
                },
                "parameters": [],
                "isStatic": false,
                "visibility": "private",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getMaxTokensForModel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 35,
                  "column": 3,
                  "endLine": 163
                },
                "parameters": [
                  {
                    "name": "modelName",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- The model name (e.g., 'claude-3-5-sonnet-20241022')"
                  }
                ],
                "returnType": "Promise<ModelMaxTokensInfo>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository\").ModelMaxTokensInfo>",
                "displayReturnType": "Promise<ModelMaxTokensInfo>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get max tokens for a model by looking up the database record",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getAllModelsWithMaxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 169,
                  "column": 3,
                  "endLine": 201
                },
                "parameters": [],
                "returnType": "Promise<ModelMaxTokensInfo[]>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository\").ModelMaxTokensInfo[]>",
                "displayReturnType": "Promise<ModelMaxTokensInfo[]>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get all model records with their max tokens information",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "clearCache",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 206,
                  "column": 3,
                  "endLine": 209
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Clear the max tokens cache",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getCacheStats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 214,
                  "column": 3,
                  "endLine": 219
                },
                "parameters": [],
                "returnType": "{ size: number; keys: string[] }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ size: number; keys: string[] }",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get cache statistics for debugging",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "dbService",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 19,
                  "column": 3,
                  "endLine": 19
                },
                "type": "DatabaseService",
                "displayType": "DatabaseService",
                "isStatic": false,
                "visibility": "private"
              },
              {
                "name": "maxTokensCache",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 20,
                  "column": 3,
                  "endLine": 20
                },
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 22,
                  "column": 3,
                  "endLine": 24
                },
                "parameters": [
                  {
                    "name": "dbService",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService\".DatabaseService",
                    "displayType": "DatabaseService",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 150,
            "sourceFilename": "ModelRepository.ts"
          }
        ],
        "interfaces": [
          {
            "name": "ModelMaxTokensInfo",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
              "line": 11,
              "column": 1
            },
            "properties": [
              {
                "name": "modelName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "maxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 13,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "source",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 14,
                  "column": 3
                },
                "type": "'database' | 'fallback'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
                  "line": 15,
                  "column": 3
                },
                "type": "Record<string, any>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "modelName",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
            "line": 38,
            "column": 22
          },
          "method": "get"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/utils/AnthropicContentBlockProcessor.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "AnthropicContentBlockProcessor",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
              "line": 14,
              "column": 1,
              "endLine": 345
            },
            "methods": [
              {
                "name": "processResponseBlocks",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 18,
                  "column": 3,
                  "endLine": 21
                },
                "parameters": [
                  {
                    "name": "blocks",
                    "type": "Anth.AnthContentBlock[]",
                    "displayType": "ReadonlyArray<AnthContentBlock>",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "stopReason",
                    "type": "Anth.MaybeStop",
                    "displayType": "MaybeStop",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processRequestBlocks",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 23,
                  "column": 3,
                  "endLine": 26
                },
                "parameters": [
                  {
                    "name": "blocks",
                    "type": "Anth.AnthContentBlockParam[]",
                    "displayType": "ReadonlyArray<AnthContentBlockParam>",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "stopReason",
                    "type": "Anth.MaybeStop",
                    "displayType": "MaybeStop",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "isValidWebSearchResult",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 44,
                  "column": 3,
                  "endLine": 49
                },
                "parameters": [
                  {
                    "name": "result",
                    "type": "Anth.WebSearchResultLike",
                    "displayType": "WebSearchResultLike",
                    "optional": false,
                    "isRest": false,
                    "description": "- Result item from tool result content array"
                  }
                ],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Check if a result item is a valid web search result (both old and new formats)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processTextBlock",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 56,
                  "column": 3,
                  "endLine": 65
                },
                "parameters": [
                  {
                    "name": "block",
                    "type": "Anth.AnthropicTextishBlock",
                    "displayType": "AnthropicTextishBlock",
                    "optional": false,
                    "isRest": false,
                    "description": "- Text content block with .text property and optional citations"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process a text content block",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processToolUseBlock",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 72,
                  "column": 3,
                  "endLine": 76
                },
                "parameters": [
                  {
                    "name": "block",
                    "type": "Anth.AnyToolUse",
                    "displayType": "AnyToolUse",
                    "optional": false,
                    "isRest": false,
                    "description": "- Tool use block with name, input properties"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process a tool_use content block",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processUnknownBlock",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 83,
                  "column": 3,
                  "endLine": 86
                },
                "parameters": [
                  {
                    "name": "block",
                    "type": "Anth.ReqOrResBlock",
                    "displayType": "ReqOrResBlock",
                    "optional": false,
                    "isRest": false,
                    "description": "- Content block with unknown or missing type"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process an unknown content block type",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processContentBlock",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 93,
                  "column": 3,
                  "endLine": 106
                },
                "parameters": [
                  {
                    "name": "block",
                    "type": "Anth.ReqOrResBlock | Anth.ScrapedTextBlock",
                    "displayType": "ScrapedTextBlock",
                    "optional": false,
                    "isRest": false,
                    "description": "- Content block of any type"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process any content block by dispatching to appropriate handler",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processWebSearchBlock",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 115,
                  "column": 3,
                  "endLine": 162
                },
                "parameters": [
                  {
                    "name": "toolUseBlock",
                    "type": "Anth.AnyWebSearchToolUse | Anth.ScrapedServerToolUseBlock",
                    "displayType": "ScrapedServerToolUseBlock",
                    "optional": false,
                    "isRest": false,
                    "description": "- The web_search tool_use block"
                  },
                  {
                    "name": "contentBlocks",
                    "type": "Anth.ReqOrResBlock[]",
                    "displayType": "ReqOrResBlock[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Full array of content blocks"
                  },
                  {
                    "name": "startIndex",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false,
                    "description": "- Current index in the contentBlocks array"
                  }
                ],
                "returnType": "{ html: string; nextIndex: number }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ html: string; nextIndex: number }",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process web search blocks with their associated tool results",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "generateWebSearchHtml",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 172,
                  "column": 3,
                  "endLine": 198
                },
                "parameters": [
                  {
                    "name": "query",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- The search query"
                  },
                  {
                    "name": "results",
                    "type": "any[]",
                    "displayType": "any[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of search results"
                  },
                  {
                    "name": "resultCount",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false,
                    "description": "- Number of results"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Generate HTML for web search display component",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processTextWithCitations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 207,
                  "column": 3,
                  "endLine": 243
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- The original text content"
                  },
                  {
                    "name": "citations",
                    "type": "Anth.AnthropicCitationish[]",
                    "displayType": "AnthropicCitationish[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of citation objects (old or new format)"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process text with citations by inserting inline citation lozenges\nSupports both old format (with start_index/end_index) and new format (without positional data)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "generateCitationLozenge",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 252,
                  "column": 3,
                  "endLine": 296
                },
                "parameters": [
                  {
                    "name": "citation",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false,
                    "description": "- Citation object with title, url, and optional metadata"
                  },
                  {
                    "name": "index",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false,
                    "description": "- Index of the citation for unique identification"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Generate HTML for a single citation lozenge\nSupports both old format (with metadata object) and new format (direct properties)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "_processAllContentBlocks",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
                  "line": 304,
                  "column": 3,
                  "endLine": 344
                },
                "parameters": [
                  {
                    "name": "contentBlocks",
                    "type": "Anth.ReqOrResBlock[]",
                    "displayType": "ReadonlyArray<ReqOrResBlock>",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of content blocks from Anthropic message"
                  },
                  {
                    "name": "stopReason",
                    "type": "Anth.MaybeStop",
                    "displayType": "MaybeStop",
                    "optional": true,
                    "isRest": false,
                    "description": "- Optional stop reason to determine if ellipsis should be added"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process an array of content blocks and combine into single text",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [],
            "constructors": [],
            "implements": [],
            "jsdocDescription": "Processor for handling different types of Anthropic content blocks\nduring the import process. Extracts meaningful content from each\nblock type and provides descriptive placeholders for non-text blocks.",
            "isAbstract": false,
            "sourceLOC": 178,
            "sourceFilename": "AnthropicContentBlockProcessor.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/utils/AnthropicStopReason.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "AnthropicStopReason",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.ts",
              "line": 9,
              "column": 1,
              "endLine": 75
            },
            "methods": [
              {
                "name": "fromApiResponse",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.ts",
                  "line": 48,
                  "column": 5,
                  "endLine": 53
                },
                "parameters": [
                  {
                    "name": "response",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@anthropic-ai/sdk/resources/messages/messages\".Message",
                    "displayType": "Message",
                    "optional": false,
                    "isRest": false,
                    "description": "- The Anthropic API response object"
                  }
                ],
                "returnType": "AnthropicStopReason",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason\".AnthropicStopReason",
                "displayReturnType": "AnthropicStopReason",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Create an AnthropicStopReason instance from an API response",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "isNormalCompletion",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.ts",
                  "line": 59,
                  "column": 5,
                  "endLine": 61
                },
                "parameters": [],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Check if this stop reason indicates a normal completion",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getFormattedWarning",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.ts",
                  "line": 67,
                  "column": 5,
                  "endLine": 74
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get the warning message formatted for display with styled lozenge",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "stopReasonText",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.ts",
                  "line": 10,
                  "column": 5,
                  "endLine": 10
                },
                "type": "Anthropic.Messages.StopReason",
                "displayType": "StopReason",
                "isStatic": false,
                "visibility": "public"
              },
              {
                "name": "warningMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.ts",
                  "line": 11,
                  "column": 5,
                  "endLine": 11
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "public"
              },
              {
                "name": "isAbnormalHalt",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.ts",
                  "line": 12,
                  "column": 5,
                  "endLine": 12
                },
                "type": "boolean",
                "displayType": "boolean",
                "isStatic": false,
                "visibility": "public"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.ts",
                  "line": 14,
                  "column": 5,
                  "endLine": 41
                },
                "parameters": [
                  {
                    "name": "stopReasonText",
                    "type": "\"end_turn\" | \"max_tokens\" | \"stop_sequence\" | \"tool_use\" | \"pause_turn\" | \"refusal\"",
                    "displayType": "StopReason",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "jsdocDescription": "Represents an Anthropic API response stop reason with associated warning information",
            "isAbstract": false,
            "sourceLOC": 43,
            "sourceFilename": "AnthropicStopReason.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/utils/GeminiContentProcessor.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "GeminiContentProcessor",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
              "line": 15,
              "column": 1,
              "endLine": 389
            },
            "methods": [
              {
                "name": "convertGroundingChunksToWebSearchResults",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
                  "line": 22,
                  "column": 3,
                  "endLine": 136
                },
                "parameters": [
                  {
                    "name": "chunks",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\").GroundingChunk[]",
                    "displayType": "GroundingChunk[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of grounding chunks from Gemini response"
                  }
                ],
                "returnType": "Promise<WebSearchResult[]>",
                "resolvedReturnType": "Promise<WebSearchResult[]>",
                "displayReturnType": "Promise<WebSearchResult[]>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Convert Gemini grounding chunks to WebSearchResult format using bulk URL enrichment",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addInlineCitations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
                  "line": 146,
                  "column": 3,
                  "endLine": 273
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Original text response from Gemini"
                  },
                  {
                    "name": "supports",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\").GroundingSupport[]",
                    "displayType": "GroundingSupport[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of grounding supports"
                  },
                  {
                    "name": "chunks",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\").GroundingChunk[]",
                    "displayType": "GroundingChunk[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of grounding chunks for citation URLs"
                  },
                  {
                    "name": "enrichedResults",
                    "type": "WebSearchResult[]",
                    "displayType": "WebSearchResult[]",
                    "optional": true,
                    "isRest": false,
                    "description": "- Optional enriched web search results for better titles"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process grounding supports to add inline citations to text",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "generateWebSearchHTML",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
                  "line": 282,
                  "column": 3,
                  "endLine": 318
                },
                "parameters": [
                  {
                    "name": "queries",
                    "type": "string[]",
                    "displayType": "string[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of search queries performed"
                  },
                  {
                    "name": "results",
                    "type": "WebSearchResult[]",
                    "displayType": "WebSearchResult[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of WebSearchResult objects"
                  },
                  {
                    "name": "resultCount",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false,
                    "description": "- Total number of results"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Generate HTML for WebSearchDisplay component using structured data attributes",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processGroundingResponse",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
                  "line": 326,
                  "column": 3,
                  "endLine": 388
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Text response from Gemini"
                  },
                  {
                    "name": "groundingMetadata",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@google/genai/dist/genai\".GroundingMetadata",
                    "displayType": "GroundingMetadata",
                    "optional": true,
                    "isRest": false,
                    "description": "- Grounding metadata from response"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process complete Gemini response with grounding metadata",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [],
            "constructors": [],
            "implements": [],
            "jsdocDescription": "Processor for handling Gemini grounding metadata and converting\nit into web search displays and inline citations",
            "isAbstract": false,
            "sourceLOC": 256,
            "sourceFilename": "GeminiContentProcessor.ts"
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "originalUrl",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
            "line": 92,
            "column": 30
          },
          "method": "get"
        },
        {
          "query": "uri",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
            "line": 231,
            "column": 36
          },
          "method": "get"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/utils/OpenAIContentProcessor.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "OpenAIContentProcessor",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
              "line": 23,
              "column": 1,
              "endLine": 609
            },
            "methods": [
              {
                "name": "parseMarkdownLinks",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 30,
                  "column": 3,
                  "endLine": 46
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- The original text containing markdown links"
                  }
                ],
                "returnType": "MarkdownLink[]",
                "resolvedReturnType": "MarkdownLink[]",
                "displayReturnType": "MarkdownLink[]",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Parse markdown links from text with position tracking",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "findLinksToRemove",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 54,
                  "column": 3,
                  "endLine": 85
                },
                "parameters": [
                  {
                    "name": "markdownLinks",
                    "type": "MarkdownLink[]",
                    "displayType": "MarkdownLink[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- All markdown links found in text"
                  },
                  {
                    "name": "urlCitations",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseOutputText.URLCitation[]",
                    "displayType": "URLCitation[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- All URL citation annotations"
                  }
                ],
                "returnType": "MarkdownLink[]",
                "resolvedReturnType": "MarkdownLink[]",
                "displayReturnType": "MarkdownLink[]",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Find markdown links that should be removed because they have matching citations",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "removeMatchedLinksAndAdjustCitations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 94,
                  "column": 3,
                  "endLine": 168
                },
                "parameters": [
                  {
                    "name": "originalText",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- The original text"
                  },
                  {
                    "name": "linksToRemove",
                    "type": "MarkdownLink[]",
                    "displayType": "MarkdownLink[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Markdown links to remove"
                  },
                  {
                    "name": "urlCitations",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseOutputText.URLCitation[]",
                    "displayType": "URLCitation[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Original URL citations"
                  }
                ],
                "returnType": "{ cleanedText: string; adjustedCitations: OpenAI.Responses.ResponseOutputText.URLCitation[] }",
                "resolvedReturnType": "__type",
                "displayReturnType": "{ cleanedText: string; adjustedCitations: OpenAI.Responses.ResponseOutputText.URLCitation[] }",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Remove matched markdown links and adjust citation indices",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "extractSiteName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 175,
                  "column": 3,
                  "endLine": 187
                },
                "parameters": [
                  {
                    "name": "domain",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- The hostname (e.g., \"en.wikipedia.org\", \"www.timesofisrael.com\")"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Extract a human-readable site name from a domain",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processTextWithCitations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 194,
                  "column": 3,
                  "endLine": 279
                },
                "parameters": [
                  {
                    "name": "textBlock",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\".ResponseOutputText",
                    "displayType": "ResponseOutputText",
                    "optional": false,
                    "isRest": false,
                    "description": "- ResponseOutputText block with text and annotations"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process ResponseOutputText with URLCitation annotations",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "generateCitationLozenge",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 287,
                  "column": 3,
                  "endLine": 336
                },
                "parameters": [
                  {
                    "name": "citation",
                    "type": "\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\".ResponseOutputText.URLCitation",
                    "displayType": "URLCitation",
                    "optional": false,
                    "isRest": false,
                    "description": "- URLCitation object with title, url, start_index, end_index"
                  },
                  {
                    "name": "index",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false,
                    "description": "- Index of the citation for unique identification"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Generate HTML for a single citation lozenge from OpenAI URLCitation",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "extractWebSearchData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 343,
                  "column": 3,
                  "endLine": 355
                },
                "parameters": [
                  {
                    "name": "outputItems",
                    "type": "any[]",
                    "displayType": "any[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of response output items that may contain web_search_call"
                  }
                ],
                "returnType": "Array<{\n    id: string;\n    query: string;\n    sources: { type: string; url: string }[];\n  }>",
                "resolvedReturnType": "{ id: string; query: string; sources: { type: string; url: string; }[]; }[]",
                "displayReturnType": "Array<{\n    id: string;\n    query: string;\n    sources: { type: string; url: string }[];\n  }>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Extract web search data from OpenAI response output items",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "transformWebSearchSources",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 362,
                  "column": 3,
                  "endLine": 379
                },
                "parameters": [
                  {
                    "name": "sources",
                    "type": "{ type: string; url: string; }[]",
                    "displayType": "{ type: string; url: string }[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of OpenAI web search sources"
                  }
                ],
                "returnType": "WebSearchResult[]",
                "resolvedReturnType": "WebSearchResult[]",
                "displayReturnType": "WebSearchResult[]",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Transform OpenAI web search sources to WebSearchResult format (legacy - non-enriched)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "enrichWebSearchSources",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 386,
                  "column": 3,
                  "endLine": 415
                },
                "parameters": [
                  {
                    "name": "sources",
                    "type": "{ type: string; url: string; }[]",
                    "displayType": "{ type: string; url: string }[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of OpenAI web search sources"
                  }
                ],
                "returnType": "Promise<WebSearchResult[]>",
                "resolvedReturnType": "Promise<WebSearchResult[]>",
                "displayReturnType": "Promise<WebSearchResult[]>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Enrich OpenAI web search sources with real page titles and favicons",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "generateWebSearchHTML",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 422,
                  "column": 3,
                  "endLine": 446
                },
                "parameters": [
                  {
                    "name": "searchData",
                    "type": "__type",
                    "displayType": "{\n    id: string;\n    query: string;\n    sources: { type: string; url: string }[];\n  }",
                    "optional": false,
                    "isRest": false,
                    "description": "- Web search data from OpenAI response"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Generate HTML block for OpenAI web search display (legacy - non-enriched)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "generateEnrichedWebSearchHTML",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 453,
                  "column": 3,
                  "endLine": 495
                },
                "parameters": [
                  {
                    "name": "searchData",
                    "type": "__type",
                    "displayType": "{\n    id: string;\n    query: string;\n    sources: { type: string; url: string }[];\n  }",
                    "optional": false,
                    "isRest": false,
                    "description": "- Web search data from OpenAI response"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Generate enriched HTML block for OpenAI web search display",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processContentBlocksWithWebSearch",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 503,
                  "column": 3,
                  "endLine": 526
                },
                "parameters": [
                  {
                    "name": "contentBlocks",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseOutputText[]",
                    "displayType": "ResponseOutputText[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of ResponseOutputText blocks"
                  },
                  {
                    "name": "outputItems",
                    "type": "any[]",
                    "displayType": "any[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- All response output items (including web_search_call)"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process multiple ResponseOutputText content blocks and append web search blocks (legacy - non-enriched)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processContentBlocksWithEnrichedWebSearch",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 534,
                  "column": 3,
                  "endLine": 578
                },
                "parameters": [
                  {
                    "name": "contentBlocks",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseOutputText[]",
                    "displayType": "ResponseOutputText[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of ResponseOutputText blocks"
                  },
                  {
                    "name": "outputItems",
                    "type": "any[]",
                    "displayType": "any[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- All response output items (including web_search_call)"
                  }
                ],
                "returnType": "Promise<string>",
                "resolvedReturnType": "Promise<string>",
                "displayReturnType": "Promise<string>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process multiple ResponseOutputText content blocks and append enriched web search blocks",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "processContentBlocks",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 585,
                  "column": 3,
                  "endLine": 608
                },
                "parameters": [
                  {
                    "name": "contentBlocks",
                    "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/openai/resources/responses/responses\").ResponseOutputText[]",
                    "displayType": "ResponseOutputText[]",
                    "optional": false,
                    "isRest": false,
                    "description": "- Array of ResponseOutputText blocks"
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Process multiple ResponseOutputText content blocks",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [],
            "constructors": [],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 372,
            "sourceFilename": "OpenAIContentProcessor.ts"
          }
        ],
        "interfaces": [
          {
            "name": "MarkdownLink",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
              "line": 15,
              "column": 1
            },
            "properties": [
              {
                "name": "text",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 16,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 17,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fullMatch",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 18,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "startIndex",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 19,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "endIndex",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "jsdocDescription": "Processor for handling OpenAI ResponseOutputText content blocks\nand converting URLCitation annotations into inline citation lozenges"
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "text",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
            "line": 35,
            "column": 21
          },
          "method": "exec"
        },
        {
          "query": "webSearchBlockPromises",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
            "line": 557,
            "column": 37
          },
          "method": "all"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/utils/WebChatJSONValidator.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "WebChatJSONValidator",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
              "line": 15,
              "column": 1,
              "endLine": 200
            },
            "methods": [
              {
                "name": "validateAndDetectVendor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 21,
                  "column": 3,
                  "endLine": 86
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to the JSON file"
                  }
                ],
                "returnType": "Promise<VendorDetectionResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator\").VendorDetectionResult>",
                "displayReturnType": "Promise<VendorDetectionResult>",
                "isStatic": true,
                "visibility": "public",
                "jsdocDescription": "Validate JSON file and detect vendor format",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "parseJSON",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 93,
                  "column": 3,
                  "endLine": 144
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Path to the JSON file"
                  }
                ],
                "returnType": "Promise<{ success: boolean; data?: any; error?: string }>",
                "resolvedReturnType": "Promise<{ success: boolean; data?: any; error?: string; }>",
                "displayReturnType": "Promise<{ success: boolean; data?: any; error?: string }>",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Parse JSON file safely",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectAnthropicV1",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 151,
                  "column": 3,
                  "endLine": 173
                },
                "parameters": [
                  {
                    "name": "json",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false,
                    "description": "- Parsed JSON data"
                  }
                ],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Detect Anthropic Claude web chat v1 format using zod schema validation",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectOpenAIV1",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 180,
                  "column": 3,
                  "endLine": 188
                },
                "parameters": [
                  {
                    "name": "json",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false,
                    "description": "- Parsed JSON data"
                  }
                ],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Detect OpenAI ChatGPT web export v1 format",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectGoogleV1",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 195,
                  "column": 3,
                  "endLine": 199
                },
                "parameters": [
                  {
                    "name": "json",
                    "type": "any",
                    "displayType": "any",
                    "optional": false,
                    "isRest": false,
                    "description": "- Parsed JSON data"
                  }
                ],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": true,
                "visibility": "private",
                "jsdocDescription": "Detect Google Gemini web export v1 format",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [],
            "constructors": [],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 123,
            "sourceFilename": "WebChatJSONValidator.ts"
          }
        ],
        "interfaces": [
          {
            "name": "VendorDetectionResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
              "line": 8,
              "column": 1
            },
            "properties": [
              {
                "name": "isValid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 9,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "confidence",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/utils/anthropicGuards.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "isToolResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 3,
              "column": 1,
              "endLine": 5
            },
            "parameters": [
              {
                "name": "b",
                "type": "Anth.ReqOrResBlock",
                "displayType": "ReqOrResBlock",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "b is Anth.AnyToolResult",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isToolUse",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 7,
              "column": 1,
              "endLine": 9
            },
            "parameters": [
              {
                "name": "b",
                "type": "Anth.ReqOrResBlock",
                "displayType": "ReqOrResBlock",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "b is Anth.AnyToolUse",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isWebSearchToolUse",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 12,
              "column": 1,
              "endLine": 18
            },
            "parameters": [
              {
                "name": "b",
                "type": "Anth.ReqOrResBlock",
                "displayType": "ReqOrResBlock",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "b is Anth.WebSearchToolUseAny",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isSdkWebSearchToolUse",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 20,
              "column": 1,
              "endLine": 24
            },
            "parameters": [
              {
                "name": "b",
                "type": "Anth.ReqOrResBlock",
                "displayType": "ReqOrResBlock",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "b is Anth.AnyWebSearchToolUse",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isScrapedWebSearchToolUse",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 26,
              "column": 1,
              "endLine": 30
            },
            "parameters": [
              {
                "name": "b",
                "type": "Anth.ReqOrResBlock",
                "displayType": "ReqOrResBlock",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "b is Anth.AnyWebSearchToolUse",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isTextBlock",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 32,
              "column": 1,
              "endLine": 34
            },
            "parameters": [
              {
                "name": "b",
                "type": "Anth.ReqOrResBlock",
                "displayType": "ReqOrResBlock",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "b is Anth.AnthropicTextishBlock",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isScrapedWebCitation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 36,
              "column": 1,
              "endLine": 46
            },
            "parameters": [
              {
                "name": "c",
                "type": "Anth.AnthropicCitationish",
                "displayType": "AnthropicCitationish",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "c is Anth.ScrapedWebCitation",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isScrapedWebSearchToolResultWithArray",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 48,
              "column": 1,
              "endLine": 57
            },
            "parameters": [
              {
                "name": "b",
                "type": "Anth.ReqOrResBlock",
                "displayType": "ReqOrResBlock",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "b is Anth.ScrapedWebSearchToolResultWithArray",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isSdkWebSearchToolResultWithArray",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 59,
              "column": 1,
              "endLine": 69
            },
            "parameters": [
              {
                "name": "b",
                "type": "Anth.ReqOrResBlock",
                "displayType": "ReqOrResBlock",
                "optional": false,
                "isRest": false
              },
              {
                "name": "id",
                "type": "string",
                "displayType": "string",
                "optional": true,
                "isRest": false
              }
            ],
            "returnType": "b is Anth.AnyToolResult & { content: Anth.WebSearchResultLike[] }",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "normalizeWebToStrictContentBlocks",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 71,
              "column": 1,
              "endLine": 83
            },
            "parameters": [
              {
                "name": "blocks",
                "type": "Anth.AnthropicWebContentBlock[]",
                "displayType": "ReadonlyArray<AnthropicWebContentBlock>",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "ReadonlyArray<Anth.AnthContentBlock>",
            "resolvedReturnType": "Anth.AnthContentBlock[]",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "isStrictContentBlocks",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/anthropicGuards.ts",
              "line": 85,
              "column": 1,
              "endLine": 95
            },
            "parameters": [
              {
                "name": "blocks",
                "type": "Anth.AnthropicWebContentBlock[]",
                "displayType": "ReadonlyArray<AnthropicWebContentBlock>",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "blocks is ReadonlyArray<Anth.AnthContentBlock>",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/utils/fileTypeDetector.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "FileTypeDetector",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
              "line": 24,
              "column": 1,
              "endLine": 759
            },
            "methods": [
              {
                "name": "getCodeMimeType",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 97,
                  "column": 3,
                  "endLine": 127
                },
                "parameters": [
                  {
                    "name": "extension",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Get appropriate MIME type for known code extensions",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectFileType",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 136,
                  "column": 3,
                  "endLine": 180
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<FileDetectionResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\").FileDetectionResult>",
                "displayReturnType": "Promise<FileDetectionResult>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Multi-stage file type detection strategy:\n1. Extension-based detection (mime-types)\n2. Content-based detection (file-type) \n3. Binary detection fallback (isbinaryfile)\n4. Code detection pipeline",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectCodeType",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 185,
                  "column": 3,
                  "endLine": 219
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "baseResult",
                    "type": "__type",
                    "displayType": "Partial<FileDetectionResult>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>>",
                "resolvedReturnType": "Promise<Pick<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\").FileDetectionResult, \"isCode\" | \"languageHint\" | \"codeConfidence\" | \"codeDetectionMethod\">>",
                "displayReturnType": "Promise<Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Multi-stage code detection pipeline",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectByExtension",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 224,
                  "column": 3,
                  "endLine": 304
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "FileDetectionResult",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\".FileDetectionResult",
                "displayReturnType": "FileDetectionResult",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Stage 1: Extension-based detection using mime-types package",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectByContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 309,
                  "column": 3,
                  "endLine": 365
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<FileDetectionResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\").FileDetectionResult>",
                "displayReturnType": "Promise<FileDetectionResult>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Stage 2: Content-based detection using file-type package",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectByFallback",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 370,
                  "column": 3,
                  "endLine": 404
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<FileDetectionResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\").FileDetectionResult>",
                "displayReturnType": "Promise<FileDetectionResult>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Stage 3: Binary detection fallback using isbinaryfile package",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectCodeByMime",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 409,
                  "column": 3,
                  "endLine": 436
                },
                "parameters": [
                  {
                    "name": "mimeType",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>",
                "resolvedReturnType": "__type",
                "displayReturnType": "Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Code detection by MIME type analysis",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectCodeByContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 441,
                  "column": 3,
                  "endLine": 475
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>>",
                "resolvedReturnType": "Promise<Pick<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\").FileDetectionResult, \"isCode\" | \"languageHint\" | \"codeConfidence\" | \"codeDetectionMethod\">>",
                "displayReturnType": "Promise<Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Code detection by file content (shebang, modelines)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectCodeByExtension",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 480,
                  "column": 3,
                  "endLine": 499
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>",
                "resolvedReturnType": "__type",
                "displayReturnType": "Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Code detection by extension",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectCodeByStructure",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 504,
                  "column": 3,
                  "endLine": 559
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>>",
                "resolvedReturnType": "Promise<Pick<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\").FileDetectionResult, \"isCode\" | \"languageHint\" | \"codeConfidence\" | \"codeDetectionMethod\">>",
                "displayReturnType": "Promise<Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Code detection by structural analysis",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectShebang",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 564,
                  "column": 3,
                  "endLine": 603
                },
                "parameters": [
                  {
                    "name": "firstLine",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>",
                "resolvedReturnType": "__type",
                "displayReturnType": "Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Detect shebang lines",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectModeline",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 608,
                  "column": 3,
                  "endLine": 639
                },
                "parameters": [
                  {
                    "name": "lines",
                    "type": "string[]",
                    "displayType": "string[]",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>",
                "resolvedReturnType": "__type",
                "displayReturnType": "Pick<FileDetectionResult, 'isCode' | 'languageHint' | 'codeConfidence' | 'codeDetectionMethod'>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Detect editor modelines (Emacs and Vim)",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "mimeToLanguage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 644,
                  "column": 3,
                  "endLine": 676
                },
                "parameters": [
                  {
                    "name": "mimeType",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Map MIME types to language hints",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectExecutable",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 681,
                  "column": 3,
                  "endLine": 740
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "baseResult",
                    "type": "__type",
                    "displayType": "Partial<FileDetectionResult>",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "Promise<Pick<FileDetectionResult, 'isExecutable' | 'executableConfidence' | 'executableReason'>>",
                "resolvedReturnType": "Promise<Pick<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\").FileDetectionResult, \"isExecutable\" | \"executableConfidence\" | \"executableReason\">>",
                "displayReturnType": "Promise<Pick<FileDetectionResult, 'isExecutable' | 'executableConfidence' | 'executableReason'>>",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Detect if a file is executable based on multiple criteria",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "detectFileTypeOptimized",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 745,
                  "column": 3,
                  "endLine": 758
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "maxSampleSize",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "defaultValue": "8192",
                    "isRest": false
                  }
                ],
                "returnType": "Promise<FileDetectionResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector\").FileDetectionResult>",
                "displayReturnType": "Promise<FileDetectionResult>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Optimized detection for large files - only read small sample",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "CODE_MIME_TYPES",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 26,
                  "column": 3,
                  "endLine": 35
                },
                "isStatic": true,
                "visibility": "private"
              },
              {
                "name": "EXTENSION_LANGUAGE_MAP",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 38,
                  "column": 3,
                  "endLine": 69
                },
                "type": "Record<string, string>",
                "displayType": "Record<string, string>",
                "isStatic": true,
                "visibility": "private"
              },
              {
                "name": "EXECUTABLE_EXTENSIONS",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 72,
                  "column": 3,
                  "endLine": 80
                },
                "isStatic": true,
                "visibility": "private"
              },
              {
                "name": "EXECUTABLE_BASENAMES",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 83,
                  "column": 3,
                  "endLine": 87
                },
                "isStatic": true,
                "visibility": "private"
              },
              {
                "name": "EXECUTABLE_DIRECTORIES",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 90,
                  "column": 3,
                  "endLine": 92
                },
                "isStatic": true,
                "visibility": "private"
              }
            ],
            "constructors": [],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 578,
            "sourceFilename": "fileTypeDetector.ts"
          }
        ],
        "interfaces": [
          {
            "name": "FileDetectionResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
              "line": 6,
              "column": 1
            },
            "properties": [
              {
                "name": "isBinaryFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 7,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "mimeType",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 8,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "confidence",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 9,
                  "column": 3
                },
                "type": "'high' | 'medium' | 'low'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "detectionMethod",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "'extension' | 'content' | 'fallback'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileSize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "encoding",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isCode",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 14,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "languageHint",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 15,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "codeConfidence",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 16,
                  "column": 3
                },
                "type": "'high' | 'medium' | 'low'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "codeDetectionMethod",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 17,
                  "column": 3
                },
                "type": "'mime' | 'shebang' | 'modeline' | 'extension' | 'structure'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isExecutable",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 19,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "executableConfidence",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "'high' | 'medium' | 'low'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "executableReason",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
                  "line": 21,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/utils/fileValidation.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "FileValidationService",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
              "line": 84,
              "column": 1,
              "endLine": 207
            },
            "methods": [
              {
                "name": "isFileValidForUpload",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 97,
                  "column": 3,
                  "endLine": 154
                },
                "parameters": [
                  {
                    "name": "filePath",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false,
                    "description": "- Absolute path to the file"
                  },
                  {
                    "name": "vendor",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false,
                    "description": "- Optional vendor name for vendor-specific validation"
                  }
                ],
                "returnType": "Promise<FileValidationResult>",
                "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation\").FileValidationResult>",
                "displayReturnType": "Promise<FileValidationResult>",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Validate a file for upload compatibility",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "isMimeTypeSupported",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 159,
                  "column": 3,
                  "endLine": 176
                },
                "parameters": [
                  {
                    "name": "mimeType",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  },
                  {
                    "name": "supportedTypes",
                    "type": "string[]",
                    "displayType": "string[]",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "boolean",
                "resolvedReturnType": "false | true",
                "displayReturnType": "boolean",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Check if MIME type is supported by vendor",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "formatFileSize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 181,
                  "column": 3,
                  "endLine": 192
                },
                "parameters": [
                  {
                    "name": "bytes",
                    "type": "number",
                    "displayType": "number",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "private",
                "jsdocDescription": "Format file size for human-readable display",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getVendorLimits",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 197,
                  "column": 3,
                  "endLine": 199
                },
                "parameters": [
                  {
                    "name": "vendor",
                    "type": "string",
                    "displayType": "string",
                    "optional": true,
                    "isRest": false
                  }
                ],
                "returnType": "VendorLimits",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation\".VendorLimits",
                "displayReturnType": "VendorLimits",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get vendor limits for informational purposes",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getSupportedVendors",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 204,
                  "column": 3,
                  "endLine": 206
                },
                "parameters": [],
                "returnType": "string[]",
                "resolvedReturnType": "string[]",
                "displayReturnType": "string[]",
                "isStatic": false,
                "visibility": "public",
                "jsdocDescription": "Get list of supported vendors",
                "isAbstract": false,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "fileTypeDetector",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 85,
                  "column": 3,
                  "endLine": 85
                },
                "type": "FileTypeDetector",
                "displayType": "FileTypeDetector",
                "isStatic": false,
                "visibility": "private"
              }
            ],
            "constructors": [
              {
                "name": "constructor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 87,
                  "column": 3,
                  "endLine": 89
                },
                "parameters": [],
                "returnType": "void",
                "resolvedReturnType": "void",
                "displayReturnType": "void",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": true
              }
            ],
            "implements": [],
            "isAbstract": false,
            "sourceLOC": 80,
            "sourceFilename": "fileValidation.ts"
          }
        ],
        "functions": [
          {
            "name": "isFileValidForUpload",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
              "line": 218,
              "column": 1,
              "endLine": 223
            },
            "parameters": [
              {
                "name": "filePath",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false,
                "description": "- Absolute path to file"
              },
              {
                "name": "vendor",
                "type": "string",
                "displayType": "string",
                "optional": true,
                "isRest": false,
                "description": "- Optional vendor name for vendor-specific rules"
              }
            ],
            "returnType": "Promise<FileValidationResult>",
            "resolvedReturnType": "Promise<import(\"/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation\").FileValidationResult>",
            "isExported": true,
            "jsdocDescription": "Main validation function - validates file for upload",
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "FileValidationResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
              "line": 8,
              "column": 1
            },
            "properties": [
              {
                "name": "isValid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 9,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileInfo",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 11,
                  "column": 3
                },
                "type": "{\n    name: string;\n    size: number;\n    mimeType: string;\n    isText: boolean;\n    languageHint?: string;\n  }",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "VendorLimits",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
              "line": 20,
              "column": 1
            },
            "properties": [
              {
                "name": "maxFileSize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 21,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "supportedMimeTypes",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 22,
                  "column": 3
                },
                "type": "string[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "allowBinaryFiles",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
                  "line": 23,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/utils/vendorFavicons.ts",
      "kind": "shared",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "getVendorFavicon",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/vendorFavicons.ts",
              "line": 18,
              "column": 1,
              "endLine": 26
            },
            "parameters": [
              {
                "name": "modelId",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false,
                "description": "- The model ID string (e.g., 'claude-3-5-sonnet-20241022')"
              }
            ],
            "returnType": "string | null",
            "resolvedReturnType": "string | null",
            "isExported": true,
            "jsdocDescription": "Get vendor favicon path from model ID",
            "isReactComponent": false
          },
          {
            "name": "getVendorName",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/utils/vendorFavicons.ts",
              "line": 33,
              "column": 1,
              "endLine": 39
            },
            "parameters": [
              {
                "name": "modelId",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false,
                "description": "- The model ID string"
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": true,
            "jsdocDescription": "Get vendor name from model ID for alt text",
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "tests/poc/unified-poc-2.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "unifyProcess",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc-2.ts",
              "line": 16,
              "column": 1,
              "endLine": 30
            },
            "parameters": [
              {
                "name": "markdown",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Promise<string>",
            "resolvedReturnType": "Promise<string>",
            "isExported": false,
            "jsdocDescription": "Convert Markdown (possibly with inline HTML) to sanitized HTML string.",
            "isReactComponent": false
          },
          {
            "name": "main",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc-2.ts",
              "line": 37,
              "column": 1,
              "endLine": 61
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "tests/poc/unified-poc.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "markdownToHtml",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
              "line": 16,
              "column": 1,
              "endLine": 64
            },
            "parameters": [
              {
                "name": "markdown",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Promise<string>",
            "resolvedReturnType": "Promise<string>",
            "isExported": false,
            "jsdocDescription": "Convert Markdown (possibly with inline HTML) to sanitized HTML string.",
            "isReactComponent": false
          },
          {
            "name": "repairJsonAttrs",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
              "line": 75,
              "column": 1,
              "endLine": 126
            },
            "parameters": [
              {
                "name": "html",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              },
              {
                "name": "attrNames",
                "optional": false,
                "defaultValue": "[\"data-results\"]",
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": false,
            "jsdocDescription": "Repair broken JSON-in-HTML attributes that were emitted like:\n  data-results=\"[{\\\"title\\\":\\\"ok\\\"}]\"\nHTML doesn't treat backslashes as escapes, so we:\n - capture the whole value using a \"backslash-aware\" scanner,\n - switch the outer quotes to single quotes,\n - unescape the \\\" -> \" we see in the raw text,\n - entity-encode & and ' for single-quoted attribute safety.",
            "isReactComponent": false
          },
          {
            "name": "extractAttr",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
              "line": 128,
              "column": 1,
              "endLine": 133
            },
            "parameters": [
              {
                "name": "html",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              },
              {
                "name": "attrName",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "string | null",
            "resolvedReturnType": "string | null",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "main",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
              "line": 140,
              "column": 1,
              "endLine": 248
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/types/Message.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "classes": [
          {
            "name": "Message",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
              "line": 4,
              "column": 1,
              "endLine": 24
            },
            "methods": [
              {
                "name": "getId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
                  "line": 9,
                  "column": 5,
                  "endLine": 11
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "getTimestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
                  "line": 13,
                  "column": 5,
                  "endLine": 15
                },
                "parameters": [],
                "returnType": "Date",
                "resolvedReturnType": "Date",
                "displayReturnType": "Date",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": false,
                "isConstructor": false
              },
              {
                "name": "addTextContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
                  "line": 18,
                  "column": 5,
                  "endLine": 18
                },
                "parameters": [
                  {
                    "name": "text",
                    "type": "string",
                    "displayType": "string",
                    "optional": false,
                    "isRest": false
                  }
                ],
                "returnType": "this",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/Message\".Message",
                "displayReturnType": "this",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              },
              {
                "name": "getRole",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
                  "line": 21,
                  "column": 5,
                  "endLine": 21
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              },
              {
                "name": "getVendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
                  "line": 22,
                  "column": 5,
                  "endLine": 22
                },
                "parameters": [],
                "returnType": "T",
                "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/Message\".Message.T",
                "displayReturnType": "T",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              },
              {
                "name": "serialize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
                  "line": 23,
                  "column": 5,
                  "endLine": 23
                },
                "parameters": [],
                "returnType": "string",
                "resolvedReturnType": "string",
                "displayReturnType": "string",
                "isStatic": false,
                "visibility": "public",
                "isAbstract": true,
                "isConstructor": false
              }
            ],
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
                  "line": 5,
                  "column": 5,
                  "endLine": 5
                },
                "type": "string",
                "displayType": "string",
                "isStatic": false,
                "visibility": "protected"
              },
              {
                "name": "timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.ts",
                  "line": 6,
                  "column": 5,
                  "endLine": 6
                },
                "type": "Date",
                "displayType": "Date",
                "isStatic": false,
                "visibility": "protected"
              }
            ],
            "constructors": [],
            "implements": [],
            "genericParameters": [
              {
                "name": "T",
                "defaultType": "any"
              }
            ],
            "isAbstract": true,
            "sourceLOC": 14,
            "sourceFilename": "Message.ts"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/types/anthropic.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "interfaces": [
          {
            "name": "ScrapedServerToolUseBlock",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 37,
              "column": 1
            },
            "properties": [
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 38,
                  "column": 3
                },
                "type": "\"server_tool_use\"",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 39,
                  "column": 3
                },
                "type": "\"web_search\"",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 40,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "input",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 42,
                  "column": 3
                },
                "type": "{ query?: string }",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "ScrapedWebSearchToolResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 45,
              "column": 1
            },
            "properties": [
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 46,
                  "column": 3
                },
                "type": "\"web_search_tool_result\"",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 47,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "content",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 48,
                  "column": 3
                },
                "type": "unknown",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "ScrapedWebCitationSource",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 57,
              "column": 1
            },
            "properties": [
              {
                "name": "title",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 58,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 59,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "icon_url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 60,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "source",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 61,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 62,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "ScrapedWebCitationMetadata",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 65,
              "column": 1
            },
            "properties": [
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 66,
                  "column": 3
                },
                "type": "\"webpage_metadata\"",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "site_domain",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 67,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "favicon_url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 68,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "site_name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 69,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "ScrapedTextBlock",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 72,
              "column": 1
            },
            "properties": [
              {
                "name": "start_timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 73,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "stop_timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 74,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 75,
                  "column": 5
                },
                "type": "\"text\"",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "text",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 76,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "citations",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 77,
                  "column": 5
                },
                "type": "ScrapedCitation[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "ScrapedWebCitation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 82,
              "column": 1
            },
            "properties": [
              {
                "name": "uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 83,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "title",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 84,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 85,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "metadata",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 86,
                  "column": 5
                },
                "type": "ScrapedWebCitationMetadata",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "origin_tool_name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 87,
                  "column": 5
                },
                "type": "\"web_search\"",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "sources",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 88,
                  "column": 5
                },
                "type": "ScrapedWebCitationSource[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "start_index",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 89,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "end_index",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 90,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "cited_text",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 94,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "encrypted_index",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 95,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 96,
                  "column": 5
                },
                "type": "\"web_search_result_location\"",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "WebSearchResultLike",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 102,
              "column": 1
            },
            "properties": [
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 103,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "title",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 104,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 105,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "AnthropicWebChatMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 117,
              "column": 2
            },
            "properties": [
              {
                "name": "uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 118,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "sender",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 119,
                  "column": 4
                },
                "type": "'human' | 'assistant'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "content",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 120,
                  "column": 4
                },
                "type": "AnthropicWebContentBlock[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "index",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 121,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "parent_message_uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 122,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "created_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 123,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "updated_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 124,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "truncated",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 125,
                  "column": 4
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "stop_reason",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 126,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "attachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 127,
                  "column": 4
                },
                "type": "AnthropicWebAttachment[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "files",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 128,
                  "column": 4
                },
                "type": "AnthropicWebFile[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "files_v2",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 129,
                  "column": 4
                },
                "type": "AnthropicWebFileV2[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "jsdocDescription": "Raw Anthropic web chat message structure from exported JSON"
          },
          {
            "name": "MaybeWebTimedFields",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 134,
              "column": 1
            },
            "properties": [
              {
                "name": "start_timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 135,
                  "column": 3
                },
                "type": "ISODateTimeString | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "stop_timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 136,
                  "column": 3
                },
                "type": "ISODateTimeString | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "AnthropicWebAttachment",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 152,
              "column": 2
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 153,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 154,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "extracted_content",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 155,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_size",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 156,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 157,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "created_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 158,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "jsdocDescription": "Raw attachment structure from Anthropic web export"
          },
          {
            "name": "AnthropicWebFile",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 163,
              "column": 2
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 164,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 165,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 166,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 167,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 168,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 169,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "size",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 170,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_size",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 171,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "jsdocDescription": "Raw file reference from 'files' array in Anthropic web export"
          },
          {
            "name": "AnthropicWebFileV2",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 176,
              "column": 2
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 177,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 178,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 179,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 180,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 181,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 182,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "size",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 183,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_size",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 184,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "jsdocDescription": "Raw file reference from 'files_v2' array in Anthropic web export"
          },
          {
            "name": "ProcessedFileReference",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 191,
              "column": 2
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 193,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 194,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 195,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 196,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 197,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 198,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "size",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 199,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "file_size",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 200,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "source_version",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 202,
                  "column": 4
                },
                "type": "'files' | 'files_v2'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "source_index",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 203,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "jsdocDescription": "Processed file reference with deduplication metadata"
          },
          {
            "name": "ProcessedAttachment",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 210,
              "column": 2
            },
            "properties": [
              {
                "name": "anthropicId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 211,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 212,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "originalFileName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 213,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileSize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 214,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileType",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 215,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "content",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 216,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "createdAt",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 217,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "contentSizeBytes",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 218,
                  "column": 4
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "jsdocDescription": "Processed attachment with validation and safety checks"
          },
          {
            "name": "AnthropicWebConversation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 223,
              "column": 2
            },
            "properties": [
              {
                "name": "uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 224,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 225,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "summary",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 226,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "settings",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 227,
                  "column": 4
                },
                "type": "Record<string, unknown>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "current_leaf_message_uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 228,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "created_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 229,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "updated_at",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 230,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "project_uuid",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 231,
                  "column": 4
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "chat_messages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
                  "line": 232,
                  "column": 4
                },
                "type": "AnthropicWebChatMessage[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": [],
            "jsdocDescription": "Raw Anthropic conversation structure from exported JSON"
          }
        ],
        "types": [
          {
            "name": "AnthMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 14,
              "column": 1
            },
            "type": "Message"
          },
          {
            "name": "AnthContentBlock",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 15,
              "column": 1
            },
            "type": "ContentBlock"
          },
          {
            "name": "AnthContentBlockParam",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 18,
              "column": 1
            },
            "type": "ContentBlockParam"
          },
          {
            "name": "AnthStopReason",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 21,
              "column": 1
            },
            "type": "StopReason"
          },
          {
            "name": "MaybeStop",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 22,
              "column": 1
            },
            "type": "AnthStopReason | null | undefined"
          },
          {
            "name": "ReqOrResBlock",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 25,
              "column": 1
            },
            "type": "AnthContentBlock | AnthContentBlockParam  | ScrapedServerToolUseBlock\n  | ScrapedWebSearchToolResult"
          },
          {
            "name": "ResToolResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 28,
              "column": 1
            },
            "type": "Extract<ContentBlock, { type: \"tool_result\" }>"
          },
          {
            "name": "ReqToolResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 29,
              "column": 1
            },
            "type": "Extract<ContentBlockParam, { type: \"tool_result\" }>"
          },
          {
            "name": "AnyToolResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 30,
              "column": 1
            },
            "type": "ResToolResult | ReqToolResult"
          },
          {
            "name": "ResToolUse",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 32,
              "column": 1
            },
            "type": "Extract<ContentBlock, { type: \"tool_use\" }>"
          },
          {
            "name": "ReqToolUse",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 33,
              "column": 1
            },
            "type": "Extract<ContentBlockParam, { type: \"tool_use\" }>"
          },
          {
            "name": "AnyToolUse",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 34,
              "column": 1
            },
            "type": "ResToolUse | ReqToolUse"
          },
          {
            "name": "AnyWebSearchToolUse",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 52,
              "column": 1
            },
            "type": "(ResToolUse | ReqToolUse) & { name: \"web_search\"; input: { query?: string } }"
          },
          {
            "name": "WebSearchToolUseAny",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 55,
              "column": 1
            },
            "type": "AnyWebSearchToolUse | ScrapedServerToolUseBlock"
          },
          {
            "name": "ScrapedCitation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 80,
              "column": 1
            },
            "type": "| ScrapedWebCitation"
          },
          {
            "name": "AnthropicTextishBlock",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 99,
              "column": 1
            },
            "type": "TextBlock | ScrapedTextBlock"
          },
          {
            "name": "AnthropicCitationish",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 100,
              "column": 1
            },
            "type": "TextCitation | ScrapedWebCitation"
          },
          {
            "name": "ScrapedWebSearchToolResultWithArray",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 108,
              "column": 1
            },
            "type": "ScrapedWebSearchToolResult & { content: WebSearchResultLike[] }"
          },
          {
            "name": "ISODateTimeString",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 132,
              "column": 1
            },
            "type": "string"
          },
          {
            "name": "AnthropicWebContentBlock",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
              "line": 142,
              "column": 2
            },
            "type": "( | AnthropicTextishBlock\n   | ScrapedServerToolUseBlock\n   | ScrapedWebSearchToolResult\n   | AnthContentBlock\n   | AnthContentBlockParam ) & MaybeWebTimedFields"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/types/conversation.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "generateConversationName",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 49,
              "column": 14,
              "endLine": 51
            },
            "parameters": [],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "createMessage",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 54,
              "column": 14,
              "endLine": 64
            },
            "parameters": [
              {
                "name": "role",
                "type": "\"user\" | \"assistant\"",
                "displayType": "'user' | 'assistant'",
                "optional": false,
                "isRest": false
              },
              {
                "name": "content",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Message",
            "resolvedReturnType": "\"/Users/slane/Documents/Code/electron/ai-client/src/types/conversation\".Message",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "sanitizeMessageForDisplay",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 68,
              "column": 14,
              "endLine": 75
            },
            "parameters": [
              {
                "name": "content",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": true,
            "isReactComponent": false
          },
          {
            "name": "sanitizeUserMessageForDisplay",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 79,
              "column": 14,
              "endLine": 85
            },
            "parameters": [
              {
                "name": "content",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "Message",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 8,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "role",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 9,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "content",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 10,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "timestamp",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 11,
                  "column": 5
                },
                "type": "Date",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "inputTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 12,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "outputTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 13,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "totalTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 14,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileAttachments",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 15,
                  "column": 5
                },
                "type": "FileAttachmentRecord[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "Conversation",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 18,
              "column": 1
            },
            "properties": [
              {
                "name": "localId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 19,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 20,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "modelId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 21,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 22,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorData",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 23,
                  "column": 5
                },
                "type": "object",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "createdAt",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 24,
                  "column": 5
                },
                "type": "Date",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "updatedAt",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 25,
                  "column": 5
                },
                "type": "Date",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "modelMaxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 26,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isStarred",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 27,
                  "column": 5
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorConversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 28,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorProjectId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 29,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "localProjectId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 30,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendorName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 31,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "messages",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 32,
                  "column": 5
                },
                "type": "Message[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "ConversationAggregates",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 35,
              "column": 1
            },
            "properties": [
              {
                "name": "messageCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 36,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "totalTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 37,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 38,
                  "column": 5
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "ConversationState",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 43,
              "column": 1
            },
            "properties": [
              {
                "name": "currentConversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 44,
                  "column": 5
                },
                "type": "Conversation | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "selectedModel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
                  "line": 45,
                  "column": 5
                },
                "type": "Model",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "types": [
          {
            "name": "ConversationWithAggregates",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
              "line": 41,
              "column": 1
            },
            "type": "Conversation & ConversationAggregates"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/types/electron.ts",
      "kind": "main",
      "language": "ts",
      "exports": {
        "interfaces": [
          {
            "name": "ConversationAPI",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
              "line": 8,
              "column": 1
            },
            "properties": [
              {
                "name": "create",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 9,
                  "column": 3
                },
                "type": "(modelId: string) => Promise<Conversation>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "sendMessage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 10,
                  "column": 3
                },
                "type": "(conversationId: string, messageText: string, filePaths?: string[]) => Promise<{\n    success: boolean;\n    response?: string;\n    error?: string;\n    fileResults?: {\n      validFiles: string[];\n      invalidFiles: Array<{ path: string; name: string; error: string }>;\n    };\n  }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getHistory",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 19,
                  "column": 3
                },
                "type": "(conversationId: string) => Promise<{ success: boolean; history?: any[]; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "clear",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 20,
                  "column": 3
                },
                "type": "(conversationId: string) => Promise<{ success: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "delete",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 21,
                  "column": 3
                },
                "type": "(conversationId: string) => Promise<{ success: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "deleteMultiple",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 22,
                  "column": 3
                },
                "type": "(conversationIds: string[]) => Promise<{ success: boolean; error?: string; deletedCount?: number }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "updateName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 23,
                  "column": 3
                },
                "type": "(conversationId: string, name: string) => Promise<{ success: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getAll",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 24,
                  "column": 3
                },
                "type": "(limit?: number, offset?: number) => Promise<{ success: boolean; conversations?: any[]; total?: number; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 25,
                  "column": 3
                },
                "type": "(conversationId: string) => Promise<Conversation>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 26,
                  "column": 3
                },
                "type": "(conversationId: string) => Promise<{ success: boolean; tokens?: { inputTokens: number; outputTokens: number; totalTokens: number }; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "toggleStar",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 27,
                  "column": 3
                },
                "type": "(conversationId: string) => Promise<{ success: boolean; isStarred?: boolean; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getStarred",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 28,
                  "column": 3
                },
                "type": "(limit?: number) => Promise<{ success: boolean; conversations?: any[]; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getRecent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 29,
                  "column": 3
                },
                "type": "(limit?: number) => Promise<{ success: boolean; conversations?: any[]; error?: string }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          },
          {
            "name": "ElectronAPI",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
              "line": 32,
              "column": 1
            },
            "properties": [
              {
                "name": "getSupportedVendors",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 34,
                  "column": 3
                },
                "type": "() => Promise<string[]>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "addApiKey",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 35,
                  "column": 3
                },
                "type": "(apiKey: { name: string; vendor: string; key: string }) => Promise<Result<ApiKey>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getApiKeys",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 36,
                  "column": 3
                },
                "type": "() => Promise<Result<ApiKey[]>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "removeApiKey",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 37,
                  "column": 3
                },
                "type": "(id: string) => Promise<Result<void>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getApiKeyById",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 38,
                  "column": 3
                },
                "type": "(id: string) => Promise<Result<ApiKey | undefined>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getShowTurnCounter",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 39,
                  "column": 3
                },
                "type": "() => Promise<Result<boolean>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "setShowTurnCounter",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 40,
                  "column": 3
                },
                "type": "(show: boolean) => Promise<Result<void>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getLoggingConfig",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 41,
                  "column": 3
                },
                "type": "() => Promise<Result<LoggingConfig>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "setLoggingConfig",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 42,
                  "column": 3
                },
                "type": "(loggingConfig: LoggingConfig) => Promise<Result<void>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getApiLoggingEnabled",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 43,
                  "column": 3
                },
                "type": "() => Promise<Result<boolean>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "setApiLoggingEnabled",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 44,
                  "column": 3
                },
                "type": "(enabled: boolean) => Promise<Result<void>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getLogContent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 47,
                  "column": 3
                },
                "type": "(logKey: string) => Promise<Result<string>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getLogStats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 48,
                  "column": 3
                },
                "type": "(logKey: string) => Promise<Result<{ entryCount: number; fileSize: number }>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getAvailableLogKeys",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 49,
                  "column": 3
                },
                "type": "() => Promise<Result<string[]>>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "conversation",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 52,
                  "column": 3
                },
                "type": "ConversationAPI",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "showOpenDialog",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 55,
                  "column": 3
                },
                "type": "() => Promise<any>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getFileStats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 56,
                  "column": 3
                },
                "type": "(filePath: string) => Promise<any>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "getPathForFile",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 57,
                  "column": 3
                },
                "type": "(file: File) => string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "import",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 60,
                  "column": 3
                },
                "type": "{\n    webChat: (filePath: string) => Promise<any>;\n  }",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "shell",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
                  "line": 65,
                  "column": 3
                },
                "type": "{\n    openExternal: (url: string) => Promise<void>;\n  }",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/types/result.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "success",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/result.ts",
              "line": 8,
              "column": 1,
              "endLine": 10
            },
            "parameters": [
              {
                "name": "data",
                "type": "T",
                "displayType": "T",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Result<T>",
            "resolvedReturnType": "{ success: false; error: string; } | { success: true; data: T; }",
            "isExported": true,
            "genericParameters": [
              {
                "name": "T"
              }
            ],
            "isReactComponent": false
          },
          {
            "name": "failure",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/result.ts",
              "line": 12,
              "column": 1,
              "endLine": 14
            },
            "parameters": [
              {
                "name": "error",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "Result<T>",
            "resolvedReturnType": "{ success: false; error: string; } | { success: true; data: T; }",
            "isExported": true,
            "genericParameters": [
              {
                "name": "T",
                "defaultType": "never"
              }
            ],
            "isReactComponent": false
          },
          {
            "name": "isSuccess",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/result.ts",
              "line": 16,
              "column": 1,
              "endLine": 18
            },
            "parameters": [
              {
                "name": "res",
                "type": "{ success: false; error: string; } | { success: true; data: T; }",
                "displayType": "Result<T>",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "res is { success: true; data: T }",
            "resolvedReturnType": "false | true",
            "isExported": true,
            "genericParameters": [
              {
                "name": "T"
              }
            ],
            "isReactComponent": false
          }
        ],
        "types": [
          {
            "name": "Result",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/result.ts",
              "line": 4,
              "column": 1
            },
            "type": "| { success: true; data: T }\n  | { success: false; error: string }"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/types/settings.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "interfaces": [
          {
            "name": "ApiKey",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
              "line": 4,
              "column": 1
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 5,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "name",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 6,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "vendor",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 7,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "key",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 8,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "keyPreview",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 9,
                  "column": 5
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "createdAt",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 10,
                  "column": 5
                },
                "type": "Date",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "LoggingConfig",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
              "line": 13,
              "column": 1
            },
            "properties": [
              {
                "name": "apiEnabled",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 14,
                  "column": 5
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "SettingsConfig",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
              "line": 21,
              "column": 1
            },
            "properties": [
              {
                "name": "apiKeys",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 22,
                  "column": 5
                },
                "type": "ApiKey[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "showTurnCounter",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 23,
                  "column": 5
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "logging",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
                  "line": 24,
                  "column": 5
                },
                "type": "LoggingConfig",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/types/utilityTypes.ts",
      "kind": "unknown",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "asList",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/utilityTypes.ts",
              "line": 3,
              "column": 1,
              "endLine": 5
            },
            "parameters": [
              {
                "name": "xs",
                "type": "T[]",
                "displayType": "MaybeList<T>",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "ReadonlyArray<T>",
            "resolvedReturnType": "T[]",
            "isExported": true,
            "genericParameters": [
              {
                "name": "T"
              }
            ],
            "isReactComponent": false
          }
        ],
        "types": [
          {
            "name": "MaybeList",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/types/utilityTypes.ts",
              "line": 1,
              "column": 1
            },
            "type": "ReadonlyArray<T> | undefined | null"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
      "kind": "main",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "createWindow",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
              "line": 14,
              "column": 7,
              "endLine": 36
            },
            "parameters": [],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
      "kind": "main",
      "language": "ts",
      "exports": {
        "functions": [
          {
            "name": "createWindow",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
              "line": 14,
              "column": 7,
              "endLine": 36
            },
            "parameters": [],
            "returnType": "void",
            "resolvedReturnType": "void",
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/App.tsx",
      "kind": "unknown",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "AppContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
              "line": 18,
              "column": 7,
              "endLine": 41
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          },
          {
            "name": "App",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
              "line": 43,
              "column": 7,
              "endLine": 54
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "AppContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
              "line": 18,
              "column": 7
            },
            "type": "function"
          },
          {
            "name": "App",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
              "line": 43,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/index.tsx",
      "kind": "unknown",
      "language": "tsx",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "src/contexts/RecentChatsContext.tsx",
      "kind": "unknown",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "RecentChatsProvider",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
              "line": 20,
              "column": 14,
              "endLine": 39
            },
            "parameters": [
              {
                "name": "{ children }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "useRecentChatsContext",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
              "line": 41,
              "column": 14,
              "endLine": 47
            },
            "parameters": [],
            "returnType": "RecentChatsContextType",
            "resolvedReturnType": "RecentChatsContextType",
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "RecentChatsContextType",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "recentChats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "any[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isLoading",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "string | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "refreshRecentChats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "() => Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          },
          {
            "name": "RecentChatsProviderProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
              "line": 16,
              "column": 1
            },
            "properties": [
              {
                "name": "children",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
                  "line": 17,
                  "column": 3
                },
                "type": "React.ReactNode",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "RecentChatsProvider",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
              "line": 20,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/contexts/StarredChatsContext.tsx",
      "kind": "unknown",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "StarredChatsProvider",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
              "line": 20,
              "column": 14,
              "endLine": 39
            },
            "parameters": [
              {
                "name": "{ children }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "useStarredChatsContext",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
              "line": 41,
              "column": 14,
              "endLine": 47
            },
            "parameters": [],
            "returnType": "StarredChatsContextType",
            "resolvedReturnType": "StarredChatsContextType",
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "StarredChatsContextType",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "starredChats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "any[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isLoading",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "error",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "string | null",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "refreshStarredChats",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "() => Promise<void>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          },
          {
            "name": "StarredChatsProviderProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
              "line": 16,
              "column": 1
            },
            "properties": [
              {
                "name": "children",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
                  "line": 17,
                  "column": 3
                },
                "type": "React.ReactNode",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "StarredChatsProvider",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
              "line": 20,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/contexts/ToastContext.tsx",
      "kind": "unknown",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ToastProvider",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
              "line": 23,
              "column": 14,
              "endLine": 94
            },
            "parameters": [
              {
                "name": "{ children }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "useToast",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
              "line": 96,
              "column": 14,
              "endLine": 102
            },
            "parameters": [],
            "returnType": "ToastContextType",
            "resolvedReturnType": "ToastContextType",
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "ToastContextType",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "toasts",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "ToastData[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "showToast",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "(toast: Omit<ToastData, 'id'>) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "dismissToast",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "(id: string) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "showSuccess",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "(title: string, message?: string, details?: string[]) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "showError",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
                  "line": 12,
                  "column": 3
                },
                "type": "(title: string, message?: string, details?: string[]) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "showInfo",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
                  "line": 13,
                  "column": 3
                },
                "type": "(title: string, message?: string, details?: string[]) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "showBatchImportResults",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
                  "line": 14,
                  "column": 3
                },
                "type": "(success: number, failed: number, errors: string[]) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          },
          {
            "name": "ToastProviderProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
              "line": 19,
              "column": 1
            },
            "properties": [
              {
                "name": "children",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
                  "line": 20,
                  "column": 3
                },
                "type": "ReactNode",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ToastProvider",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
              "line": 23,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "tests/utils/render.tsx",
      "kind": "shared",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Providers",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/utils/render.tsx",
              "line": 5,
              "column": 1,
              "endLine": 7
            },
            "parameters": [
              {
                "name": "{ children }",
                "type": "__type",
                "displayType": "{ children: React.ReactNode }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          },
          {
            "name": "renderWithProviders",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/utils/render.tsx",
              "line": 9,
              "column": 14,
              "endLine": 12
            },
            "parameters": [
              {
                "name": "ui",
                "type": "React.ReactElement",
                "displayType": "ReactElement",
                "optional": false,
                "isRest": false
              },
              {
                "name": "options",
                "type": "__type",
                "displayType": "Parameters<typeof render>[1]",
                "optional": true,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": false
          }
        ],
        "components": [
          {
            "name": "Providers",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/tests/utils/render.tsx",
              "line": 5,
              "column": 1
            },
            "type": "function",
            "propsType": "{ children: React.ReactNode }"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/Chat/index.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Chat",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
              "line": 19,
              "column": 7,
              "endLine": 961
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Chat",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
              "line": 19,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/Home/index.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Home",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Home/index.tsx",
              "line": 6,
              "column": 7,
              "endLine": 13
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Home",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Home/index.tsx",
              "line": 6,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/Layout/index.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Layout",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
              "line": 14,
              "column": 7,
              "endLine": 132
            },
            "parameters": [
              {
                "name": "{ children }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "LayoutProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
              "line": 10,
              "column": 1
            },
            "properties": [
              {
                "name": "children",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "React.ReactNode",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "Layout",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
              "line": 14,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/LogViewer/index.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "LogViewer",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer/index.tsx",
              "line": 10,
              "column": 7,
              "endLine": 165
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "LogViewer",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer/index.tsx",
              "line": 10,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "sqliteQueries": [
        {
          "query": "contentPromises",
          "location": {
            "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer/index.tsx",
            "line": 62,
            "column": 38
          },
          "method": "all"
        }
      ],
      "isExecutable": true
    },
    {
      "path": "src/components/RecentChats/index.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "RecentChats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/RecentChats/index.tsx",
              "line": 11,
              "column": 7,
              "endLine": 88
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "RecentChats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/RecentChats/index.tsx",
              "line": 11,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/Settings/ApiKeyList.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ApiKeyList",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyList.tsx",
              "line": 14,
              "column": 7,
              "endLine": 57
            },
            "parameters": [
              {
                "name": "{ apiKeys, onRemoveKey, onAddKey }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "ApiKeyListProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyList.tsx",
              "line": 8,
              "column": 1
            },
            "properties": [
              {
                "name": "apiKeys",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyList.tsx",
                  "line": 9,
                  "column": 5
                },
                "type": "ApiKey[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onRemoveKey",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyList.tsx",
                  "line": 10,
                  "column": 5
                },
                "type": "(id: string) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "onAddKey",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyList.tsx",
                  "line": 11,
                  "column": 5
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ApiKeyList",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyList.tsx",
              "line": 14,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/Settings/ApiKeyModal.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ApiKeyModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
              "line": 30,
              "column": 7,
              "endLine": 149
            },
            "parameters": [
              {
                "name": "{ vendors, onSubmit, open, onOpenChange }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "ApiKeyModalProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
              "line": 23,
              "column": 1
            },
            "properties": [
              {
                "name": "vendors",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
                  "line": 24,
                  "column": 5
                },
                "type": "string[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onSubmit",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
                  "line": 25,
                  "column": 5
                },
                "type": "(keyData: { name: string; vendor: string; key: string }) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "open",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
                  "line": 26,
                  "column": 5
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onOpenChange",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
                  "line": 27,
                  "column": 5
                },
                "type": "(open: boolean) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ApiKeyModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
              "line": 30,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/Settings/index.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Settings",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
              "line": 15,
              "column": 7,
              "endLine": 234
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Settings",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
              "line": 15,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/StarredChats/index.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "StarredChats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/StarredChats/index.tsx",
              "line": 11,
              "column": 7,
              "endLine": 88
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "StarredChats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/StarredChats/index.tsx",
              "line": 11,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ViewChats/index.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "formatChatStats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
              "line": 21,
              "column": 7,
              "endLine": 56
            },
            "parameters": [
              {
                "name": "messageCount",
                "type": "number",
                "displayType": "number",
                "optional": false,
                "isRest": false
              },
              {
                "name": "fileCount",
                "type": "number",
                "displayType": "number",
                "optional": false,
                "isRest": false
              },
              {
                "name": "totalTokens",
                "type": "number",
                "displayType": "number",
                "optional": false,
                "isRest": false
              },
              {
                "name": "maxTokens",
                "type": "number",
                "displayType": "number",
                "optional": true,
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "ViewChats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
              "line": 58,
              "column": 7,
              "endLine": 772
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "ViewChats",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
              "line": 58,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/ChatActionMenu.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ChatActionMenu",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
              "line": 20,
              "column": 7,
              "endLine": 216
            },
            "parameters": [
              {
                "name": "{\n  conversationId,\n  conversationName,\n  isStarred,\n  onConversationUpdate,\n  className = '',\n  menuPosition = 'right'\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "ChatActionMenuProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
              "line": 11,
              "column": 1
            },
            "properties": [
              {
                "name": "conversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "conversationName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
                  "line": 13,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isStarred",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
                  "line": 14,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onConversationUpdate",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
                  "line": 15,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "className",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
                  "line": 16,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "menuPosition",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
                  "line": 17,
                  "column": 3
                },
                "type": "'left' | 'right'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ChatActionMenu",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
              "line": 20,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/ChatSettings.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ChatSettings",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
              "line": 22,
              "column": 7,
              "endLine": 206
            },
            "parameters": [
              {
                "name": "{\n  showTokens,\n  onToggle,\n  conversationId,\n  conversationName,\n  isStarred,\n  onConversationUpdate\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "ChatSettingsProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
              "line": 13,
              "column": 1
            },
            "properties": [
              {
                "name": "showTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
                  "line": 14,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onToggle",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
                  "line": 15,
                  "column": 3
                },
                "type": "(show: boolean) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "conversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
                  "line": 16,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "conversationName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
                  "line": 17,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isStarred",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
                  "line": 18,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onConversationUpdate",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
                  "line": 19,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ChatSettings",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
              "line": 22,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/CitationLozenge.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "CitationLozenge",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
              "line": 16,
              "column": 7,
              "endLine": 186
            },
            "parameters": [
              {
                "name": "{\n  fullTitle,\n  truncatedTitle,\n  citationUrl,\n  faviconUrl,\n  siteName,\n  citationIndex,\n  className = ''\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "CitationLozengeProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
              "line": 6,
              "column": 1
            },
            "properties": [
              {
                "name": "fullTitle",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
                  "line": 7,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "truncatedTitle",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "citationUrl",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "faviconUrl",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "siteName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "citationIndex",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
                  "line": 12,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "className",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
                  "line": 13,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "CitationLozenge",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
              "line": 16,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/ContentRenderer.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ContentRenderer",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
              "line": 29,
              "column": 7,
              "endLine": 104
            },
            "parameters": [
              {
                "name": "{ content, className = '' }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          },
          {
            "name": "renderMarkdownWithCitations",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
              "line": 107,
              "column": 7,
              "endLine": 157
            },
            "parameters": [
              {
                "name": "markdownContent",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              },
              {
                "name": "keyPrefix",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "React.ReactNode",
            "resolvedReturnType": "React.ReactNode",
            "isExported": false,
            "isReactComponent": false
          }
        ],
        "interfaces": [
          {
            "name": "ContentRendererProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
              "line": 12,
              "column": 1
            },
            "properties": [
              {
                "name": "content",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
                  "line": 13,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "className",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
                  "line": 14,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "WebSearchData",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
              "line": 17,
              "column": 1
            },
            "properties": [
              {
                "name": "searchId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
                  "line": 18,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "query",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
                  "line": 19,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "results",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
                  "line": 20,
                  "column": 3
                },
                "type": "Array<{\n    title: string;\n    url: string;\n    domain: string;\n    faviconUrl?: string;\n  }>",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "resultCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
                  "line": 26,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ContentRenderer",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
              "line": 29,
              "column": 7
            },
            "type": "function"
          },
          {
            "name": "renderMarkdownWithCitations",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
              "line": 107,
              "column": 7
            },
            "type": "function",
            "propsType": "string"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/ConversationTooltip.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ConversationTooltip",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ConversationTooltip.tsx",
              "line": 12,
              "column": 7,
              "endLine": 136
            },
            "parameters": [
              {
                "name": "{\n  conversationId,\n  children,\n  className = ''\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "ConversationTooltipProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ConversationTooltip.tsx",
              "line": 6,
              "column": 1
            },
            "properties": [
              {
                "name": "conversationId",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ConversationTooltip.tsx",
                  "line": 7,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "children",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ConversationTooltip.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "React.ReactNode",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "className",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ConversationTooltip.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ConversationTooltip",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ConversationTooltip.tsx",
              "line": 12,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/DeleteChatModal.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "DeleteChatModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal.tsx",
              "line": 13,
              "column": 14,
              "endLine": 75
            },
            "parameters": [
              {
                "name": "{\n  isOpen,\n  chatName,\n  onDelete,\n  onCancel\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "DeleteChatModalProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal.tsx",
              "line": 6,
              "column": 1
            },
            "properties": [
              {
                "name": "isOpen",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal.tsx",
                  "line": 7,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "chatName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onDelete",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "onCancel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "DeleteChatModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal.tsx",
              "line": 13,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/DeleteMultipleChatsModal.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "DeleteMultipleChatsModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
              "line": 15,
              "column": 14,
              "endLine": 93
            },
            "parameters": [
              {
                "name": "{\n  isOpen,\n  chatCount,\n  onDelete,\n  onCancel,\n  isDeleting = false\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "DeleteMultipleChatsModalProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "isOpen",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "chatCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onDelete",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "onCancel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "isDeleting",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
                  "line": 12,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "DeleteMultipleChatsModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
              "line": 15,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/FileLozenge.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "getFileExtension",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
              "line": 19,
              "column": 7,
              "endLine": 22
            },
            "parameters": [
              {
                "name": "fileName",
                "type": "string",
                "displayType": "string",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "formatFileSize",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
              "line": 25,
              "column": 7,
              "endLine": 36
            },
            "parameters": [
              {
                "name": "bytes",
                "type": "number",
                "displayType": "number",
                "optional": false,
                "isRest": false
              }
            ],
            "returnType": "string",
            "resolvedReturnType": "string",
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "FileLozenge",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
              "line": 38,
              "column": 7,
              "endLine": 136
            },
            "parameters": [
              {
                "name": "{ fileName, lineCount, filePath, onRemove, isImage = false, isPDF = false, pageCount, fileSize }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "FileLozengeProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
              "line": 8,
              "column": 1
            },
            "properties": [
              {
                "name": "fileName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "lineCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "filePath",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onRemove",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
                  "line": 12,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "isImage",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
                  "line": 13,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "isPDF",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
                  "line": 14,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "pageCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
                  "line": 15,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "fileSize",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
                  "line": 16,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "FileLozenge",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
              "line": 38,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/ImportWebChatModal.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ImportWebChatModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
              "line": 15,
              "column": 14,
              "endLine": 332
            },
            "parameters": [
              {
                "name": "{\n  isOpen,\n  onClose,\n  onImportSuccess,\n  onBatchImportComplete,\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "ImportWebChatModalProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
              "line": 8,
              "column": 1
            },
            "properties": [
              {
                "name": "isOpen",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onClose",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "onImportSuccess",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "(conversationId: string) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "onBatchImportComplete",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
                  "line": 12,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ImportWebChatModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
              "line": 15,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/RenameChatModal.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "RenameChatModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
              "line": 13,
              "column": 14,
              "endLine": 116
            },
            "parameters": [
              {
                "name": "{\n  isOpen,\n  currentName,\n  onSave,\n  onCancel\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "RenameChatModalProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
              "line": 6,
              "column": 1
            },
            "properties": [
              {
                "name": "isOpen",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
                  "line": 7,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "currentName",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onSave",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "(newName: string) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              },
              {
                "name": "onCancel",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "() => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "RenameChatModal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
              "line": 13,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/Toast.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Toast",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
              "line": 22,
              "column": 14,
              "endLine": 110
            },
            "parameters": [
              {
                "name": "{ toast, onDismiss }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "ToastData",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "id",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "type",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "'success' | 'error' | 'info'",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "title",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "message",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "details",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 12,
                  "column": 3
                },
                "type": "string[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "duration",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 13,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "persistent",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 14,
                  "column": 3
                },
                "type": "boolean",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "ToastProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
              "line": 17,
              "column": 1
            },
            "properties": [
              {
                "name": "toast",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 18,
                  "column": 3
                },
                "type": "ToastData",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onDismiss",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
                  "line": 19,
                  "column": 3
                },
                "type": "(id: string) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "Toast",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
              "line": 22,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/ToastContainer.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "ToastContainer",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer.tsx",
              "line": 12,
              "column": 14,
              "endLine": 27
            },
            "parameters": [
              {
                "name": "{ toasts, onDismiss }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "ToastContainerProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer.tsx",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "toasts",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "ToastData[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "onDismiss",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "(id: string) => void",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": true
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "ToastContainer",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer.tsx",
              "line": 12,
              "column": 14
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/TokenDisplay.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "TokenDisplay",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
              "line": 14,
              "column": 7,
              "endLine": 42
            },
            "parameters": [
              {
                "name": "{\n  inputTokens,\n  outputTokens,\n  totalTokens,\n  maxTokens,\n  className = ''\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "TokenDisplayProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
              "line": 6,
              "column": 1
            },
            "properties": [
              {
                "name": "inputTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
                  "line": 7,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "outputTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "totalTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "maxTokens",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "className",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "TokenDisplay",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
              "line": 14,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/WebSearchDisplay.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "WebSearchDisplay",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
              "line": 22,
              "column": 7,
              "endLine": 130
            },
            "parameters": [
              {
                "name": "{\n  query,\n  results,\n  resultCount,\n  className = ''\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": true
          }
        ],
        "interfaces": [
          {
            "name": "WebSearchResult",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
              "line": 7,
              "column": 1
            },
            "properties": [
              {
                "name": "title",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 8,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "url",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 9,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "domain",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 10,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "faviconUrl",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 11,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "originalUrl",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 12,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          },
          {
            "name": "WebSearchDisplayProps",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
              "line": 15,
              "column": 1
            },
            "properties": [
              {
                "name": "query",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 16,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "results",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 17,
                  "column": 3
                },
                "type": "WebSearchResult[]",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "resultCount",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 18,
                  "column": 3
                },
                "type": "number",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              },
              {
                "name": "className",
                "location": {
                  "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
                  "line": 19,
                  "column": 3
                },
                "type": "string",
                "isStatic": false,
                "visibility": "public",
                "isFunctionType": false
              }
            ],
            "methods": []
          }
        ],
        "components": [
          {
            "name": "WebSearchDisplay",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
              "line": 22,
              "column": 7
            },
            "type": "function"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/button.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Button",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/button.tsx",
              "line": 38,
              "column": 1,
              "endLine": 57
            },
            "parameters": [
              {
                "name": "{\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLButtonElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ButtonHTMLAttributes<HTMLButtonElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/class-variance-authority/dist/index\").VariantProps<(props?: ConfigVariants<{ variant: { default: string; destructive: string; outline: string; secondary: string; ghost: string; link: string; }; size: { default: string; sm: string; lg: string; icon: string; }; }> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/class-variance-authority/dist/types\").ClassProp) => string> & { asChild?: boolean; }",
                "displayType": "React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Button",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/button.tsx",
              "line": 38,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/card.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Card",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 5,
              "column": 1,
              "endLine": 16
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "CardHeader",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 18,
              "column": 1,
              "endLine": 29
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "CardTitle",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 31,
              "column": 1,
              "endLine": 39
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "CardDescription",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 41,
              "column": 1,
              "endLine": 49
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "CardAction",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 51,
              "column": 1,
              "endLine": 62
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "CardContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 64,
              "column": 1,
              "endLine": 72
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "CardFooter",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 74,
              "column": 1,
              "endLine": 82
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Card",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 5,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          },
          {
            "name": "CardHeader",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 18,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          },
          {
            "name": "CardTitle",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 31,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          },
          {
            "name": "CardDescription",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 41,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          },
          {
            "name": "CardAction",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 51,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          },
          {
            "name": "CardContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 64,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          },
          {
            "name": "CardFooter",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card.tsx",
              "line": 74,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/dialog.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Dialog",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 7,
              "column": 1,
              "endLine": 11
            },
            "parameters": [
              {
                "name": "{\n  ...props\n}",
                "type": "DialogProps",
                "displayType": "ComponentProps<Root>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogTrigger",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 13,
              "column": 1,
              "endLine": 17
            },
            "parameters": [
              {
                "name": "{\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-dialog/dist/index\").DialogTriggerProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLButtonElement>",
                "displayType": "ComponentProps<Trigger>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogPortal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 19,
              "column": 1,
              "endLine": 23
            },
            "parameters": [
              {
                "name": "{\n  ...props\n}",
                "type": "DialogPortalProps",
                "displayType": "ComponentProps<Portal>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogClose",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 25,
              "column": 1,
              "endLine": 29
            },
            "parameters": [
              {
                "name": "{\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-dialog/dist/index\").DialogCloseProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLButtonElement>",
                "displayType": "ComponentProps<Close>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogOverlay",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 31,
              "column": 1,
              "endLine": 45
            },
            "parameters": [
              {
                "name": "{\n  className,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-dialog/dist/index\").DialogOverlayProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<Overlay>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 47,
              "column": 1,
              "endLine": 79
            },
            "parameters": [
              {
                "name": "{\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-dialog/dist/index\").DialogContentProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement> & { showCloseButton?: boolean; }",
                "displayType": "ComponentProps<Content> & {\n  showCloseButton?: boolean\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogHeader",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 81,
              "column": 1,
              "endLine": 89
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogFooter",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 91,
              "column": 1,
              "endLine": 102
            },
            "parameters": [
              {
                "name": "{ className, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLDivElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").HTMLAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<\"div\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogTitle",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 104,
              "column": 1,
              "endLine": 115
            },
            "parameters": [
              {
                "name": "{\n  className,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-dialog/dist/index\").DialogTitleProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLHeadingElement>",
                "displayType": "ComponentProps<Title>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "DialogDescription",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 117,
              "column": 1,
              "endLine": 128
            },
            "parameters": [
              {
                "name": "{\n  className,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-dialog/dist/index\").DialogDescriptionProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLParagraphElement>",
                "displayType": "ComponentProps<Description>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Dialog",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 7,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof DialogPrimitive.Root>"
          },
          {
            "name": "DialogTrigger",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 13,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof DialogPrimitive.Trigger>"
          },
          {
            "name": "DialogPortal",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 19,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof DialogPrimitive.Portal>"
          },
          {
            "name": "DialogClose",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 25,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof DialogPrimitive.Close>"
          },
          {
            "name": "DialogOverlay",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 31,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof DialogPrimitive.Overlay>"
          },
          {
            "name": "DialogContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 47,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}"
          },
          {
            "name": "DialogHeader",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 81,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          },
          {
            "name": "DialogFooter",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 91,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"div\">"
          },
          {
            "name": "DialogTitle",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 104,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof DialogPrimitive.Title>"
          },
          {
            "name": "DialogDescription",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
              "line": 117,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof DialogPrimitive.Description>"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/input.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Input",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/input.tsx",
              "line": 5,
              "column": 1,
              "endLine": 19
            },
            "parameters": [
              {
                "name": "{ className, type, ...props }",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").ClassAttributes<HTMLInputElement> & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").InputHTMLAttributes<HTMLInputElement>",
                "displayType": "ComponentProps<\"input\">",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Input",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/input.tsx",
              "line": 5,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<\"input\">"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/label.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Label",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/label.tsx",
              "line": 8,
              "column": 1,
              "endLine": 22
            },
            "parameters": [
              {
                "name": "{\n  className,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-label/dist/index\").LabelProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLLabelElement>",
                "displayType": "ComponentProps<Root>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Label",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/label.tsx",
              "line": 8,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof LabelPrimitive.Root>"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/select.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {
        "functions": [
          {
            "name": "Select",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 7,
              "column": 1,
              "endLine": 11
            },
            "parameters": [
              {
                "name": "{\n  ...props\n}",
                "type": "SelectSharedProps & { value?: string; defaultValue?: string; onValueChange?(value: string): void; }",
                "displayType": "ComponentProps<Root>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectGroup",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 13,
              "column": 1,
              "endLine": 17
            },
            "parameters": [
              {
                "name": "{\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectGroupProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<Group>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectValue",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 19,
              "column": 1,
              "endLine": 23
            },
            "parameters": [
              {
                "name": "{\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectValueProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLSpanElement>",
                "displayType": "ComponentProps<Value>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectTrigger",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 25,
              "column": 1,
              "endLine": 49
            },
            "parameters": [
              {
                "name": "{\n  className,\n  size = \"default\",\n  children,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectTriggerProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLButtonElement> & { size?: \"sm\" | \"default\"; }",
                "displayType": "ComponentProps<Trigger> & {\n  size?: \"sm\" | \"default\"\n}",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 51,
              "column": 1,
              "endLine": 84
            },
            "parameters": [
              {
                "name": "{\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectContentProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<Content>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectLabel",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 86,
              "column": 1,
              "endLine": 97
            },
            "parameters": [
              {
                "name": "{\n  className,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectLabelProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<Label>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectItem",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 99,
              "column": 1,
              "endLine": 121
            },
            "parameters": [
              {
                "name": "{\n  className,\n  children,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectItemProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<Item>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectSeparator",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 123,
              "column": 1,
              "endLine": 134
            },
            "parameters": [
              {
                "name": "{\n  className,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectSeparatorProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<Separator>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectScrollUpButton",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 136,
              "column": 1,
              "endLine": 152
            },
            "parameters": [
              {
                "name": "{\n  className,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectScrollUpButtonProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<ScrollUpButton>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          },
          {
            "name": "SelectScrollDownButton",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 154,
              "column": 1,
              "endLine": 170
            },
            "parameters": [
              {
                "name": "{\n  className,\n  ...props\n}",
                "type": "import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@radix-ui/react-select/dist/index\").SelectScrollDownButtonProps & import(\"/Users/slane/Documents/Code/electron/ai-client/node_modules/@types/react/index\").RefAttributes<HTMLDivElement>",
                "displayType": "ComponentProps<ScrollDownButton>",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": true,
            "isReactComponent": true
          }
        ],
        "components": [
          {
            "name": "Select",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 7,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.Root>"
          },
          {
            "name": "SelectGroup",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 13,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.Group>"
          },
          {
            "name": "SelectValue",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 19,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.Value>"
          },
          {
            "name": "SelectTrigger",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 25,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}"
          },
          {
            "name": "SelectContent",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 51,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.Content>"
          },
          {
            "name": "SelectLabel",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 86,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.Label>"
          },
          {
            "name": "SelectItem",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 99,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.Item>"
          },
          {
            "name": "SelectSeparator",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 123,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.Separator>"
          },
          {
            "name": "SelectScrollUpButton",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 136,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>"
          },
          {
            "name": "SelectScrollDownButton",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
              "line": 154,
              "column": 1
            },
            "type": "function",
            "propsType": "React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>"
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "src/components/ui/tabs.tsx",
      "kind": "renderer",
      "language": "tsx",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "debug-string-positions.js",
      "kind": "unknown",
      "language": "js",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "tailwind.config.js",
      "kind": "unknown",
      "language": "js",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "test-gemini-citations.js",
      "kind": "unknown",
      "language": "js",
      "exports": {
        "functions": [
          {
            "name": "testGeminiCitations",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/test-gemini-citations.js",
              "line": 13,
              "column": 1,
              "endLine": 51
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "scripts/zod-anthropic-validator-poc.js",
      "kind": "unknown",
      "language": "js",
      "exports": {
        "functions": [
          {
            "name": "detectAnthropicV1Current",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/zod-anthropic-validator-poc.js",
              "line": 89,
              "column": 1,
              "endLine": 166
            },
            "parameters": [
              {
                "name": "json",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "detectAnthropicV1Zod",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/zod-anthropic-validator-poc.js",
              "line": 169,
              "column": 1,
              "endLine": 183
            },
            "parameters": [
              {
                "name": "json",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "validateFile",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/zod-anthropic-validator-poc.js",
              "line": 186,
              "column": 1,
              "endLine": 246
            },
            "parameters": [
              {
                "name": "filePath",
                "optional": false,
                "isRest": false
              },
              {
                "name": "compareMode",
                "optional": false,
                "defaultValue": "false",
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "validateAllSamples",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/zod-anthropic-validator-poc.js",
              "line": 249,
              "column": 1,
              "endLine": 267
            },
            "parameters": [
              {
                "name": "compareMode",
                "optional": false,
                "defaultValue": "false",
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "main",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/scripts/zod-anthropic-validator-poc.js",
              "line": 270,
              "column": 1,
              "endLine": 296
            },
            "parameters": [],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "tests/jest.setup.js",
      "kind": "unknown",
      "language": "js",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "utils/test-anthropic.js",
      "kind": "shared",
      "language": "js",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "data/attachments/2025/09/22/13c5a05a-b721-424b-b40f-bb882645c48c/tailwind.config.js",
      "kind": "unknown",
      "language": "js",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/tailwind.config.js",
      "kind": "unknown",
      "language": "js",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "data/attachments/2025/10/01/acb95065-a0bf-4658-ad96-18e998efdd4f/debug-citations.js",
      "kind": "unknown",
      "language": "js",
      "exports": {
        "functions": [
          {
            "name": "processTextWithCitations",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/10/01/acb95065-a0bf-4658-ad96-18e998efdd4f/debug-citations.js",
              "line": 4,
              "column": 1,
              "endLine": 10
            },
            "parameters": [
              {
                "name": "text",
                "optional": false,
                "isRest": false
              },
              {
                "name": "citations",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "generateCitationLozenge",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/10/01/acb95065-a0bf-4658-ad96-18e998efdd4f/debug-citations.js",
              "line": 12,
              "column": 1,
              "endLine": 35
            },
            "parameters": [
              {
                "name": "citation",
                "optional": false,
                "isRest": false
              },
              {
                "name": "index",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/debug-citations.js",
      "kind": "unknown",
      "language": "js",
      "exports": {
        "functions": [
          {
            "name": "processTextWithCitations",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/debug-citations.js",
              "line": 4,
              "column": 1,
              "endLine": 10
            },
            "parameters": [
              {
                "name": "text",
                "optional": false,
                "isRest": false
              },
              {
                "name": "citations",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          },
          {
            "name": "generateCitationLozenge",
            "location": {
              "file": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/debug-citations.js",
              "line": 12,
              "column": 1,
              "endLine": 35
            },
            "parameters": [
              {
                "name": "citation",
                "optional": false,
                "isRest": false
              },
              {
                "name": "index",
                "optional": false,
                "isRest": false
              }
            ],
            "isExported": false,
            "isReactComponent": false
          }
        ]
      },
      "isExecutable": true
    },
    {
      "path": "data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
      "kind": "unknown",
      "language": "js",
      "exports": {},
      "isExecutable": true
    },
    {
      "path": "data/attachments/2025/10/25/fc8a52b8-26d4-48a7-bdef-9974530c9d56/tailwind.config.js",
      "kind": "unknown",
      "language": "js",
      "exports": {},
      "isExecutable": true
    }
  ],
  "typeCatalog": {
    "entries": [
      {
        "id": "ed8da7793b42",
        "name": "fs",
        "kind": "import",
        "definition": "import fs from 'fs'",
        "fullPath": "node_modules/fs",
        "filename": "fs",
        "location": {
          "file": "data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
          "line": 2,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
        "isLocal": false,
        "references": []
      },
      {
        "id": "652e12cb164d",
        "name": "app",
        "kind": "import",
        "definition": "import { app } from 'electron/main'",
        "fullPath": "node_modules/electron/main",
        "filename": "main",
        "location": {
          "file": "data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
          "line": 1,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "b9faa2ab532a",
        "name": "BrowserWindow",
        "kind": "import",
        "definition": "import { BrowserWindow } from 'electron/main'",
        "fullPath": "node_modules/electron/main",
        "filename": "main",
        "location": {
          "file": "data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
          "line": 1,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "1111bd0c1c6b",
        "name": "Menu",
        "kind": "import",
        "definition": "import { Menu } from 'electron/main'",
        "fullPath": "node_modules/electron/main",
        "filename": "main",
        "location": {
          "file": "main.ts",
          "line": 1,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/main.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "e1a6ba1a44c0",
        "name": "path",
        "kind": "import",
        "definition": "import path from 'path'",
        "fullPath": "node_modules/path",
        "filename": "path",
        "location": {
          "file": "scripts/zod-anthropic-validator-poc.js",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/scripts/zod-anthropic-validator-poc.js",
        "isLocal": false,
        "references": []
      },
      {
        "id": "8f251e12cc2e",
        "name": "dotenv",
        "kind": "import",
        "definition": "import dotenv from 'dotenv'",
        "fullPath": "node_modules/dotenv",
        "filename": "dotenv",
        "location": {
          "file": "utils/test-anthropic.js",
          "line": 1,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/utils/test-anthropic.js",
        "isLocal": false,
        "references": []
      },
      {
        "id": "9d457a85fc40",
        "name": "registerSettingsHandlers",
        "kind": "import",
        "definition": "import { registerSettingsHandlers } from './src/ipc/settings-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.js",
        "filename": "settings-handlers.js",
        "location": {
          "file": "main.ts",
          "line": 14,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "1e10fa778d95",
        "name": "registerLoggingHandlers",
        "kind": "import",
        "definition": "import { registerLoggingHandlers } from './src/ipc/logging-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.js",
        "filename": "logging-handlers.js",
        "location": {
          "file": "main.ts",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "db8ddb089f71",
        "name": "setupConversationHandlers",
        "kind": "import",
        "definition": "import { setupConversationHandlers } from './src/ipc/conversation-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.js",
        "filename": "conversation-handlers.js",
        "location": {
          "file": "main.ts",
          "line": 16,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "69da4dcff205",
        "name": "setupDialogHandlers",
        "kind": "import",
        "definition": "import { setupDialogHandlers } from './src/ipc/dialog-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/dialog-handlers.js",
        "filename": "dialog-handlers.js",
        "location": {
          "file": "main.ts",
          "line": 17,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "c6cd1353cb7d",
        "name": "registerImportHandlers",
        "kind": "import",
        "definition": "import { registerImportHandlers } from './src/ipc/import-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/import-handlers.js",
        "filename": "import-handlers.js",
        "location": {
          "file": "main.ts",
          "line": 18,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "6ea233ee4634",
        "name": "GeminiContentProcessor",
        "kind": "import",
        "definition": "import { GeminiContentProcessor } from '../utils/GeminiContentProcessor.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.js",
        "filename": "GeminiContentProcessor.js",
        "location": {
          "file": "src/managers/GeminiConversationManager.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "ed9764bba6b9",
        "name": "GroundingMetadata",
        "kind": "import",
        "definition": "import { GroundingMetadata } from '@google/genai'",
        "fullPath": "node_modules/@google/genai",
        "filename": "genai",
        "location": {
          "file": "src/utils/GeminiContentProcessor.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
        "isLocal": false,
        "references": [
          {
            "id": "5393428c",
            "typeId": "ed9764bba6b9",
            "location": {
              "file": "src/utils/GeminiContentProcessor.ts",
              "line": 328,
              "column": 25
            },
            "context": "parameter",
            "contextDetails": "GeminiContentProcessor.processGroundingResponse(groundingMetadata)",
            "usageType": "imported",
            "sourceText": "GroundingMetadata"
          },
          {
            "id": "53a5b9f3",
            "typeId": "ed9764bba6b9",
            "location": {
              "file": "test-citation-positioning.ts",
              "line": 8,
              "column": 41
            },
            "context": "return",
            "contextDetails": "createTestGroundingMetadata",
            "usageType": "imported",
            "sourceText": "GroundingMetadata"
          }
        ]
      },
      {
        "id": "5ef63f239d56",
        "name": "GroundingChunk",
        "kind": "import",
        "definition": "import { GroundingChunk } from '@google/genai'",
        "fullPath": "node_modules/@google/genai",
        "filename": "genai",
        "location": {
          "file": "src/utils/GeminiContentProcessor.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
        "isLocal": false,
        "references": [
          {
            "id": "db48a1e8",
            "typeId": "5ef63f239d56",
            "location": {
              "file": "src/utils/GeminiContentProcessor.ts",
              "line": 23,
              "column": 13
            },
            "context": "parameter",
            "contextDetails": "GeminiContentProcessor.convertGroundingChunksToWebSearchResults(chunks)",
            "usageType": "imported",
            "sourceText": "GroundingChunk[]"
          },
          {
            "id": "efc875dc",
            "typeId": "5ef63f239d56",
            "location": {
              "file": "src/utils/GeminiContentProcessor.ts",
              "line": 149,
              "column": 13
            },
            "context": "parameter",
            "contextDetails": "GeminiContentProcessor.addInlineCitations(chunks)",
            "usageType": "imported",
            "sourceText": "GroundingChunk[]"
          }
        ]
      },
      {
        "id": "94fff5682bd4",
        "name": "GroundingSupport",
        "kind": "import",
        "definition": "import { GroundingSupport } from '@google/genai'",
        "fullPath": "node_modules/@google/genai",
        "filename": "genai",
        "location": {
          "file": "src/utils/GeminiContentProcessor.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/GeminiContentProcessor.ts",
        "isLocal": false,
        "references": [
          {
            "id": "c88e67ac",
            "typeId": "94fff5682bd4",
            "location": {
              "file": "src/utils/GeminiContentProcessor.ts",
              "line": 148,
              "column": 15
            },
            "context": "parameter",
            "contextDetails": "GeminiContentProcessor.addInlineCitations(supports)",
            "usageType": "imported",
            "sourceText": "GroundingSupport[]"
          }
        ]
      },
      {
        "id": "b0ae901d51f3",
        "name": "GeminiConversationManager",
        "kind": "import",
        "definition": "import { GeminiConversationManager } from '../managers/GeminiConversationManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.js",
        "filename": "GeminiConversationManager.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "59563a48e470",
        "name": "AnthropicFileManager",
        "kind": "import",
        "definition": "import { AnthropicFileManager } from '../src/managers/AnthropicFileManager'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager",
        "filename": "AnthropicFileManager",
        "location": {
          "file": "scripts/anthropic-files-poc.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/scripts/anthropic-files-poc.ts",
        "isLocal": true,
        "references": [
          {
            "id": "e183d848",
            "typeId": "59563a48e470",
            "location": {
              "file": "scripts/anthropic-files-poc.ts",
              "line": 12,
              "column": 49
            },
            "context": "parameter",
            "contextDetails": "listAndAnalyzeFiles(fileManager)",
            "usageType": "local",
            "sourceText": "AnthropicFileManager"
          },
          {
            "id": "ffddbde2",
            "typeId": "59563a48e470",
            "location": {
              "file": "scripts/anthropic-files-poc.ts",
              "line": 50,
              "column": 50
            },
            "context": "parameter",
            "contextDetails": "uploadAndAnalyzeFile(fileManager)",
            "usageType": "local",
            "sourceText": "AnthropicFileManager"
          }
        ]
      },
      {
        "id": "da08a9bb7764",
        "name": "DatabaseBackupService",
        "kind": "import",
        "definition": "import { DatabaseBackupService } from '../src/services/DatabaseBackupService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.js",
        "filename": "DatabaseBackupService.js",
        "location": {
          "file": "scripts/backup-db.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/scripts/backup-db.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "65c32d8972e0",
        "name": "readline",
        "kind": "import",
        "definition": "import readline from 'readline'",
        "fullPath": "node_modules/readline",
        "filename": "readline",
        "location": {
          "file": "scripts/migrate-files.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/scripts/migrate-files.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "cf4cb3cbe32e",
        "name": "FileMigrationService",
        "kind": "import",
        "definition": "import { FileMigrationService } from '../src/services/FileMigrationService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.js",
        "filename": "FileMigrationService.js",
        "location": {
          "file": "scripts/migrate-files.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/scripts/migrate-files.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "167d769efb22",
        "name": "FileStorageService",
        "kind": "import",
        "definition": "import { FileStorageService } from './FileStorageService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.js",
        "filename": "FileStorageService.js",
        "location": {
          "file": "src/services/FileMigrationService.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "0aab9ec1",
            "typeId": "167d769efb22",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 40,
              "column": 31
            },
            "context": "property",
            "contextDetails": "ConversationService.fileStorageService",
            "usageType": "local",
            "sourceText": "FileStorageService"
          },
          {
            "id": "433d0190",
            "typeId": "167d769efb22",
            "location": {
              "file": "src/services/FileMigrationService.ts",
              "line": 24,
              "column": 31
            },
            "context": "property",
            "contextDetails": "FileMigrationService.fileStorageService",
            "usageType": "local",
            "sourceText": "FileStorageService"
          }
        ]
      },
      {
        "id": "b8f9dc98b5c1",
        "name": "MessageRepository",
        "kind": "import",
        "definition": "import { MessageRepository } from '../repositories/MessageRepository.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.js",
        "filename": "MessageRepository.js",
        "location": {
          "file": "src/services/FileMigrationService.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "b4036fb3",
            "typeId": "b8f9dc98b5c1",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 37,
              "column": 30
            },
            "context": "property",
            "contextDetails": "ConversationService.messageRepository",
            "usageType": "local",
            "sourceText": "MessageRepository"
          },
          {
            "id": "0ae88f69",
            "typeId": "b8f9dc98b5c1",
            "location": {
              "file": "src/services/FileMigrationService.ts",
              "line": 26,
              "column": 30
            },
            "context": "property",
            "contextDetails": "FileMigrationService.messageRepository",
            "usageType": "local",
            "sourceText": "MessageRepository"
          }
        ]
      },
      {
        "id": "e2ee56c2c1fc",
        "name": "DatabaseService",
        "kind": "import",
        "definition": "import { DatabaseService } from '../database/DatabaseService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.js",
        "filename": "DatabaseService.js",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": true,
        "references": [
          {
            "id": "90e61d15",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/database/DatabaseService.ts",
              "line": 28,
              "column": 72
            },
            "context": "return",
            "contextDetails": "DatabaseService.getInstance",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "d023bd18",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/managers/AnthropicWebImportManager.ts",
              "line": 531,
              "column": 16
            },
            "context": "parameter",
            "contextDetails": "AnthropicWebImportManager.storeMessageFileReferences(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "1fe744d9",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/managers/AnthropicWebImportManager.ts",
              "line": 704,
              "column": 16
            },
            "context": "parameter",
            "contextDetails": "AnthropicWebImportManager.storeMessageAttachments(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "a7b54fbd",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 13,
              "column": 22
            },
            "context": "property",
            "contextDetails": "ConversationRepository.dbService",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "4501bc75",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 17,
              "column": 26
            },
            "context": "parameter",
            "contextDetails": "ConversationRepository.constructor(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "0a2b2250",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/repositories/FileAttachmentRepository.ts",
              "line": 11,
              "column": 22
            },
            "context": "property",
            "contextDetails": "FileAttachmentRepository.dbService",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "f0fe0663",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/repositories/FileAttachmentRepository.ts",
              "line": 13,
              "column": 26
            },
            "context": "parameter",
            "contextDetails": "FileAttachmentRepository.constructor(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "5f28fe9b",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/repositories/MessageRepository.ts",
              "line": 11,
              "column": 22
            },
            "context": "property",
            "contextDetails": "MessageRepository.dbService",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "213fadcd",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/repositories/MessageRepository.ts",
              "line": 13,
              "column": 26
            },
            "context": "parameter",
            "contextDetails": "MessageRepository.constructor(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "58f6fcba",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/repositories/ModelRepository.ts",
              "line": 19,
              "column": 22
            },
            "context": "property",
            "contextDetails": "ModelRepository.dbService",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "cc32d93b",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/repositories/ModelRepository.ts",
              "line": 22,
              "column": 26
            },
            "context": "parameter",
            "contextDetails": "ModelRepository.constructor(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "23b607b5",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 43,
              "column": 27
            },
            "context": "parameter",
            "contextDetails": "ConversationService.constructor(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "8e06a13d",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/services/FileMigrationService.ts",
              "line": 30,
              "column": 27
            },
            "context": "parameter",
            "contextDetails": "FileMigrationService.constructor(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "142965e9",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "src/services/FileStorageService.ts",
              "line": 32,
              "column": 27
            },
            "context": "parameter",
            "contextDetails": "FileStorageService.constructor(dbService)",
            "usageType": "local",
            "sourceText": "DatabaseService"
          },
          {
            "id": "91904cb0",
            "typeId": "e2ee56c2c1fc",
            "location": {
              "file": "tests/conversation-flow-test.ts",
              "line": 21,
              "column": 16
            },
            "context": "variable",
            "contextDetails": "dbService",
            "usageType": "local",
            "sourceText": "DatabaseService"
          }
        ]
      },
      {
        "id": "03be8ce9db05",
        "name": "AnthropicWebImportManager",
        "kind": "import",
        "definition": "import { AnthropicWebImportManager } from '../managers/AnthropicWebImportManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.js",
        "filename": "AnthropicWebImportManager.js",
        "location": {
          "file": "src/ipc/import-handlers.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/import-handlers.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "714ec06227ab",
        "name": "logger",
        "kind": "import",
        "definition": "import { logger } from '../logger.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/logger.js",
        "filename": "logger.js",
        "location": {
          "file": "src/utils/WebChatJSONValidator.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3b72b2da14f9",
        "name": "Anthropic",
        "kind": "import",
        "definition": "import Anthropic from '@anthropic-ai/sdk'",
        "fullPath": "node_modules/@anthropic-ai/sdk",
        "filename": "sdk",
        "location": {
          "file": "utils/test-anthropic.js",
          "line": 2,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/utils/test-anthropic.js",
        "isLocal": false,
        "references": [
          {
            "id": "ba857482",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/AnthropicProject.ts",
              "line": 21,
              "column": 27
            },
            "context": "parameter",
            "contextDetails": "AnthropicProject.addDocument(document)",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.DocumentBlockParam | Anthropic.Messages.ImageBlockParam"
          },
          {
            "id": "aabece7b",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/data/mockLogs.ts",
              "line": 8,
              "column": 11
            },
            "context": "property",
            "contextDetails": "ApiLogEntry.vendor",
            "usageType": "imported",
            "sourceText": "'Anthropic' | 'OpenAI' | 'Gemini'"
          },
          {
            "id": "68d64340",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 43,
              "column": 21
            },
            "context": "property",
            "contextDetails": "AnthropicConversationManager.client",
            "usageType": "imported",
            "sourceText": "Anthropic"
          },
          {
            "id": "5d00d0e7",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 44,
              "column": 23
            },
            "context": "property",
            "contextDetails": "AnthropicConversationManager.messages",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.MessageParam[]"
          },
          {
            "id": "41d0933e",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 274,
              "column": 31
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.getConversationHistory",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.MessageParam[]"
          },
          {
            "id": "83864e99",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 426,
              "column": 43
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createTextBlock",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.TextBlockParam"
          },
          {
            "id": "e966d5af",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 433,
              "column": 50
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createImageBlockFromUrl",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.ImageBlockParam"
          },
          {
            "id": "8ca2219d",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 448,
              "column": 8
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createImageBlockFromFile",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.ImageBlockParam"
          },
          {
            "id": "d71813be",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 469,
              "column": 49
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createPlainTextSource",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.PlainTextSource"
          },
          {
            "id": "f51e1e05",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 477,
              "column": 61
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createPlainTextSourceFromFile",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.PlainTextSource"
          },
          {
            "id": "43be28c7",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 489,
              "column": 45
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createURLPDFSource",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.URLPDFSource"
          },
          {
            "id": "b1352332",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 499,
              "column": 61
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createBase64PDFSourceFromFile",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.Base64PDFSource"
          },
          {
            "id": "57cd73a2",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 520,
              "column": 17
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.createDocumentBlock(source)",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.Base64PDFSource | \n                Anthropic.Messages.PlainTextSource | \n                Anthropic.Messages.ContentBlockSource | \n                Anthropic.Messages.URLPDFSource"
          },
          {
            "id": "0ad6d66c",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 524,
              "column": 8
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createDocumentBlock",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.DocumentBlockParam"
          },
          {
            "id": "72ac01ca",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 532,
              "column": 39
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.createUserMessage(content)",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.MessageParam['content']"
          },
          {
            "id": "afe4e3b9",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 532,
              "column": 84
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.createUserMessage",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.MessageParam"
          },
          {
            "id": "3ce3e383",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 540,
              "column": 45
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.renderMessageForConsole(message)",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.MessageParam"
          },
          {
            "id": "0711473f",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/managers/AnthropicFileManager.ts",
              "line": 8,
              "column": 21
            },
            "context": "property",
            "contextDetails": "AnthropicFileManager.client",
            "usageType": "imported",
            "sourceText": "Anthropic"
          },
          {
            "id": "7984820a",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 12,
              "column": 27
            },
            "context": "property",
            "contextDetails": "AnthropicMessage.messageParam",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.MessageParam"
          },
          {
            "id": "7228c73a",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 23,
              "column": 43
            },
            "context": "parameter",
            "contextDetails": "AnthropicMessage.fromMessageParam(messageParam)",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.MessageParam"
          },
          {
            "id": "d9f18392",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 37,
              "column": 36
            },
            "context": "parameter",
            "contextDetails": "AnthropicMessage.addContentBlock(block)",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.ContentBlockParam"
          },
          {
            "id": "565d621f",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 272,
              "column": 22
            },
            "context": "return",
            "contextDetails": "AnthropicMessage.getVendorData",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.MessageParam"
          },
          {
            "id": "d0970aa0",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/utils/AnthropicStopReason.ts",
              "line": 10,
              "column": 37
            },
            "context": "property",
            "contextDetails": "AnthropicStopReason.stopReasonText",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.StopReason"
          },
          {
            "id": "8c0bae8b",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/utils/AnthropicStopReason.ts",
              "line": 14,
              "column": 33
            },
            "context": "parameter",
            "contextDetails": "AnthropicStopReason.constructor(stopReasonText)",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.StopReason"
          },
          {
            "id": "bfd0cd2c",
            "typeId": "3b72b2da14f9",
            "location": {
              "file": "src/utils/AnthropicStopReason.ts",
              "line": 48,
              "column": 38
            },
            "context": "parameter",
            "contextDetails": "AnthropicStopReason.fromApiResponse(response)",
            "usageType": "imported",
            "sourceText": "Anthropic.Messages.Message"
          }
        ]
      },
      {
        "id": "5a0bba19d174",
        "name": "AnthropicConversationManager",
        "kind": "import",
        "definition": "import { AnthropicConversationManager } from '../managers/AnthropicConversationManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.js",
        "filename": "AnthropicConversationManager.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "49d1dde8ac19",
        "name": "Vendor",
        "kind": "interface",
        "definition": "interface Vendor {\n  name: string;\n  models: Model[];\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/Models.ts",
        "filename": "Models.ts",
        "location": {
          "file": "src/Models.ts",
          "line": 4,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "41084f0b",
            "typeId": "49d1dde8ac19",
            "location": {
              "file": "src/constants.ts",
              "line": 9,
              "column": 33
            },
            "context": "variable",
            "contextDetails": "SUPPORTED_VENDORS",
            "usageType": "local",
            "sourceText": "Vendor[]"
          },
          {
            "id": "53ae5c91",
            "typeId": "49d1dde8ac19",
            "location": {
              "file": "src/Models.ts",
              "line": 22,
              "column": 48
            },
            "context": "property",
            "contextDetails": "Model.SUPPORTED_VENDORS",
            "usageType": "local",
            "sourceText": "Vendor[]"
          },
          {
            "id": "6a9f86b1",
            "typeId": "49d1dde8ac19",
            "location": {
              "file": "src/Models.ts",
              "line": 57,
              "column": 43
            },
            "context": "return",
            "contextDetails": "Model.getVendorByName",
            "usageType": "local",
            "sourceText": "Vendor | undefined"
          }
        ]
      },
      {
        "id": "4c990e99cf15",
        "name": "randomUUID",
        "kind": "import",
        "definition": "import { randomUUID } from 'crypto'",
        "fullPath": "node_modules/crypto",
        "filename": "crypto",
        "location": {
          "file": "src/SettingsService.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "0e7e7229d1ad",
        "name": "DateTime",
        "kind": "import",
        "definition": "import { DateTime } from 'luxon'",
        "fullPath": "node_modules/luxon",
        "filename": "luxon",
        "location": {
          "file": "src/SettingsService.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "ac3511db38f5",
        "name": "resolveFromProjectRoot",
        "kind": "import",
        "definition": "import { resolveFromProjectRoot } from '../utils.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils.js",
        "filename": "utils.js",
        "location": {
          "file": "src/services/LoggingService.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "41afd2ece2db",
        "name": "ApiKey",
        "kind": "import",
        "definition": "import { ApiKey } from './types/settings.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.js",
        "filename": "settings.js",
        "location": {
          "file": "src/SettingsService.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "02a5ebce",
            "typeId": "41afd2ece2db",
            "location": {
              "file": "src/components/Settings/ApiKeyList.tsx",
              "line": 9,
              "column": 14
            },
            "context": "property",
            "contextDetails": "ApiKeyListProps.apiKeys",
            "usageType": "local",
            "sourceText": "ApiKey[]"
          },
          {
            "id": "33b3063b",
            "typeId": "41afd2ece2db",
            "location": {
              "file": "src/types/settings.ts",
              "line": 22,
              "column": 14
            },
            "context": "property",
            "contextDetails": "SettingsConfig.apiKeys",
            "usageType": "local",
            "sourceText": "ApiKey[]"
          }
        ]
      },
      {
        "id": "a40f9d93c589",
        "name": "SettingsConfig",
        "kind": "import",
        "definition": "import { SettingsConfig } from './types/settings.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.js",
        "filename": "settings.js",
        "location": {
          "file": "src/SettingsService.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "ae21691b",
            "typeId": "a40f9d93c589",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 41,
              "column": 32
            },
            "context": "parameter",
            "contextDetails": "SettingsService.saveSettings(config)",
            "usageType": "local",
            "sourceText": "SettingsConfig"
          },
          {
            "id": "016b719d",
            "typeId": "a40f9d93c589",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 123,
              "column": 38
            },
            "context": "return",
            "contextDetails": "SettingsService.createDefaultSettings",
            "usageType": "local",
            "sourceText": "SettingsConfig"
          }
        ]
      },
      {
        "id": "7bc932716de3",
        "name": "LoggingConfig",
        "kind": "import",
        "definition": "import { LoggingConfig } from './types/settings.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.js",
        "filename": "settings.js",
        "location": {
          "file": "src/SettingsService.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "7570b177",
            "typeId": "7bc932716de3",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 106,
              "column": 43
            },
            "context": "parameter",
            "contextDetails": "SettingsService.setLoggingConfig(loggingConfig)",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          },
          {
            "id": "509ccac4",
            "typeId": "7bc932716de3",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 131,
              "column": 40
            },
            "context": "return",
            "contextDetails": "SettingsService.getDefaultLoggingConfig",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          },
          {
            "id": "bdccc8f1",
            "typeId": "7bc932716de3",
            "location": {
              "file": "src/types/settings.ts",
              "line": 24,
              "column": 15
            },
            "context": "property",
            "contextDetails": "SettingsConfig.logging",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          }
        ]
      },
      {
        "id": "e6cc2086bd61",
        "name": "Vendor",
        "kind": "interface",
        "definition": "interface Vendor {\n  name: string;\n  models: string[];\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants.ts",
        "filename": "constants.ts",
        "location": {
          "file": "src/constants.ts",
          "line": 4,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "7ae5aada",
            "typeId": "e6cc2086bd61",
            "location": {
              "file": "src/constants.ts",
              "line": 9,
              "column": 33
            },
            "context": "variable",
            "contextDetails": "SUPPORTED_VENDORS",
            "usageType": "local",
            "sourceText": "Vendor[]"
          },
          {
            "id": "a19d1477",
            "typeId": "e6cc2086bd61",
            "location": {
              "file": "src/Models.ts",
              "line": 22,
              "column": 48
            },
            "context": "property",
            "contextDetails": "Model.SUPPORTED_VENDORS",
            "usageType": "local",
            "sourceText": "Vendor[]"
          },
          {
            "id": "eff43c23",
            "typeId": "e6cc2086bd61",
            "location": {
              "file": "src/Models.ts",
              "line": 57,
              "column": 43
            },
            "context": "return",
            "contextDetails": "Model.getVendorByName",
            "usageType": "local",
            "sourceText": "Vendor | undefined"
          }
        ]
      },
      {
        "id": "f98ab4a2b7a3",
        "name": "pino",
        "kind": "import",
        "definition": "import pino from 'pino'",
        "fullPath": "node_modules/pino",
        "filename": "pino",
        "location": {
          "file": "src/services/LoggingService.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "fd67483c7c9d",
        "name": "fileURLToPath",
        "kind": "import",
        "definition": "import { fileURLToPath } from 'url'",
        "fullPath": "node_modules/url",
        "filename": "url",
        "location": {
          "file": "data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
        "isLocal": false,
        "references": []
      },
      {
        "id": "81624dbde7e1",
        "name": "HistoryResult",
        "kind": "type",
        "definition": "{ success: boolean; history?: any[]; error?: string }",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
        "filename": "conversation-flow-test.ts",
        "location": {
          "file": "tests/conversation-flow-test.ts",
          "line": 26,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "f7df52d1deff",
        "name": "SendMessageResult",
        "kind": "type",
        "definition": "{ success: boolean; response?: string; error?: string }",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/tests/conversation-flow-test.ts",
        "filename": "conversation-flow-test.ts",
        "location": {
          "file": "tests/conversation-flow-test.ts",
          "line": 27,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "ddd44f9c70c3",
        "name": "ConversationService",
        "kind": "import",
        "definition": "import { ConversationService } from '../services/ConversationService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.js",
        "filename": "ConversationService.js",
        "location": {
          "file": "src/ipc/conversation-handlers.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/conversation-handlers.ts",
        "isLocal": true,
        "references": [
          {
            "id": "f21a3135",
            "typeId": "ddd44f9c70c3",
            "location": {
              "file": "tests/conversation-flow-test.ts",
              "line": 22,
              "column": 26
            },
            "context": "variable",
            "contextDetails": "conversationService",
            "usageType": "local",
            "sourceText": "ConversationService"
          }
        ]
      },
      {
        "id": "ea0728df0961",
        "name": "Model",
        "kind": "import",
        "definition": "import { Model } from '../Models.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/Models.js",
        "filename": "Models.js",
        "location": {
          "file": "src/types/conversation.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
        "isLocal": true,
        "references": [
          {
            "id": "46eb60a8",
            "typeId": "ea0728df0961",
            "location": {
              "file": "src/Models.ts",
              "line": 6,
              "column": 13
            },
            "context": "property",
            "contextDetails": "Vendor.models",
            "usageType": "local",
            "sourceText": "Model[]"
          },
          {
            "id": "e5f4fac6",
            "typeId": "ea0728df0961",
            "location": {
              "file": "src/Models.ts",
              "line": 65,
              "column": 38
            },
            "context": "return",
            "contextDetails": "Model.getModelById",
            "usageType": "local",
            "sourceText": "Model | undefined"
          },
          {
            "id": "203d89ef",
            "typeId": "ea0728df0961",
            "location": {
              "file": "src/Models.ts",
              "line": 73,
              "column": 51
            },
            "context": "return",
            "contextDetails": "Model.getModelsByVendor",
            "usageType": "local",
            "sourceText": "Model[]"
          },
          {
            "id": "1cbb0ab1",
            "typeId": "ea0728df0961",
            "location": {
              "file": "src/Models.ts",
              "line": 78,
              "column": 28
            },
            "context": "return",
            "contextDetails": "Model.getAllModels",
            "usageType": "local",
            "sourceText": "Model[]"
          },
          {
            "id": "6fb4d0bf",
            "typeId": "ea0728df0961",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 45,
              "column": 20
            },
            "context": "property",
            "contextDetails": "ConversationState.selectedModel",
            "usageType": "local",
            "sourceText": "Model"
          }
        ]
      },
      {
        "id": "24991b184d5c",
        "name": "Conversation",
        "kind": "import",
        "definition": "import { Conversation } from '../types/conversation.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.js",
        "filename": "conversation.js",
        "location": {
          "file": "src/repositories/ConversationRepository.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
        "isLocal": true,
        "references": [
          {
            "id": "d6ab15d6",
            "typeId": "24991b184d5c",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 123,
              "column": 68
            },
            "context": "return",
            "contextDetails": "ConversationRepository.transformToConversationSync",
            "usageType": "local",
            "sourceText": "Conversation"
          },
          {
            "id": "de169bf9",
            "typeId": "24991b184d5c",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 145,
              "column": 42
            },
            "context": "return",
            "contextDetails": "ConversationRepository.create",
            "usageType": "local",
            "sourceText": "Conversation"
          },
          {
            "id": "af224932",
            "typeId": "24991b184d5c",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 44,
              "column": 26
            },
            "context": "property",
            "contextDetails": "ConversationState.currentConversation",
            "usageType": "local",
            "sourceText": "Conversation | null"
          }
        ]
      },
      {
        "id": "e658c9f22ed2",
        "name": "AnthropicRole",
        "kind": "type",
        "definition": "typeof ANTHROPIC_ROLES.USER | typeof ANTHROPIC_ROLES.ASSISTANT",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.ts",
        "filename": "roles.ts",
        "location": {
          "file": "src/constants/roles.ts",
          "line": 21,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "typeof ANTHROPIC_ROLES.USER",
          "typeof ANTHROPIC_ROLES.ASSISTANT"
        ],
        "references": [
          {
            "id": "7f54e6f4",
            "typeId": "e658c9f22ed2",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 14,
              "column": 23
            },
            "context": "parameter",
            "contextDetails": "AnthropicMessage.constructor(role)",
            "usageType": "local",
            "sourceText": "AnthropicRole"
          }
        ]
      },
      {
        "id": "a8b2bb73b574",
        "name": "OpenAIRole",
        "kind": "type",
        "definition": "typeof OPENAI_ROLES.USER | typeof OPENAI_ROLES.ASSISTANT | typeof OPENAI_ROLES.SYSTEM",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.ts",
        "filename": "roles.ts",
        "location": {
          "file": "src/constants/roles.ts",
          "line": 22,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "typeof OPENAI_ROLES.USER",
          "typeof OPENAI_ROLES.ASSISTANT",
          "typeof OPENAI_ROLES.SYSTEM"
        ],
        "references": [
          {
            "id": "5ab590c6",
            "typeId": "a8b2bb73b574",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 14,
              "column": 23
            },
            "context": "parameter",
            "contextDetails": "OpenAIMessage.constructor(role)",
            "usageType": "local",
            "sourceText": "OpenAIRole"
          }
        ]
      },
      {
        "id": "ae3df3c29302",
        "name": "GeminiRole",
        "kind": "type",
        "definition": "typeof GEMINI_ROLES.USER | typeof GEMINI_ROLES.ASSISTANT",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.ts",
        "filename": "roles.ts",
        "location": {
          "file": "src/constants/roles.ts",
          "line": 23,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "typeof GEMINI_ROLES.USER",
          "typeof GEMINI_ROLES.ASSISTANT"
        ],
        "references": [
          {
            "id": "2e22f8c9",
            "typeId": "ae3df3c29302",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 14,
              "column": 23
            },
            "context": "parameter",
            "contextDetails": "GeminiMessage.constructor(role)",
            "usageType": "local",
            "sourceText": "GeminiRole"
          }
        ]
      },
      {
        "id": "bef1166bea52",
        "name": "ApiLogEntry",
        "kind": "interface",
        "definition": "interface ApiLogEntry {\n  id: string;\n  timestamp: string;\n  type: 'request' | 'response' | 'error';\n  vendor: 'Anthropic' | 'OpenAI' | 'Gemini';\n  model: string;\n  method: string;\n  url: string;\n  headers: Record<string, string>;\n  body?: any;\n  response?: {\n    status: number;\n    statusText: string;\n    headers: Record<string, string>;\n    data: any;\n  };\n  error?: {\n    message: string;\n    code?: string;\n    stack?: string;\n  };\n  duration?: number;\n  tokens?: {\n    input?: number;\n    output?: number;\n    total?: number;\n  };\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/data/mockLogs.ts",
        "filename": "mockLogs.ts",
        "location": {
          "file": "src/data/mockLogs.ts",
          "line": 4,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "27111092",
            "typeId": "bef1166bea52",
            "location": {
              "file": "src/data/mockLogs.ts",
              "line": 33,
              "column": 27
            },
            "context": "variable",
            "contextDetails": "mockApiLogs",
            "usageType": "local",
            "sourceText": "ApiLogEntry[]"
          }
        ]
      },
      {
        "id": "639c36f0ce21",
        "name": "Database",
        "kind": "import",
        "definition": "import Database from 'better-sqlite3'",
        "fullPath": "node_modules/better-sqlite3",
        "filename": "better-sqlite3",
        "location": {
          "file": "src/database/DatabaseService.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
        "isLocal": false,
        "references": [
          {
            "id": "61f890af",
            "typeId": "639c36f0ce21",
            "location": {
              "file": "src/database/DatabaseService.ts",
              "line": 17,
              "column": 20
            },
            "context": "property",
            "contextDetails": "DatabaseService.sqlite",
            "usageType": "imported",
            "sourceText": "Database.Database"
          },
          {
            "id": "b31da1c4",
            "typeId": "639c36f0ce21",
            "location": {
              "file": "src/database/DatabaseService.ts",
              "line": 475,
              "column": 23
            },
            "context": "return",
            "contextDetails": "DatabaseService.getSqlite",
            "usageType": "imported",
            "sourceText": "Database.Database"
          }
        ]
      },
      {
        "id": "acff4098154c",
        "name": "drizzle",
        "kind": "import",
        "definition": "import { drizzle } from 'drizzle-orm/better-sqlite3'",
        "fullPath": "node_modules/drizzle-orm/better-sqlite3",
        "filename": "better-sqlite3",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "0f256ccde964",
        "name": "migrate",
        "kind": "import",
        "definition": "import { migrate } from 'drizzle-orm/better-sqlite3/migrator'",
        "fullPath": "node_modules/drizzle-orm/better-sqlite3/migrator",
        "filename": "migrator",
        "location": {
          "file": "src/database/DatabaseService.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "d06dd9138a4a",
        "name": "vendors",
        "kind": "import",
        "definition": "import { vendors } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "fbddca7da7b8",
        "name": "models",
        "kind": "import",
        "definition": "import { models } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "297d99910627",
        "name": "VendorRecord",
        "kind": "import",
        "definition": "import { VendorRecord } from './schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/database/DatabaseService.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/database/DatabaseService.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "838f485f88ed",
        "name": "ModelRecord",
        "kind": "import",
        "definition": "import { ModelRecord } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "63cb8165ca6d",
        "name": "eq",
        "kind": "import",
        "definition": "import { eq } from 'drizzle-orm'",
        "fullPath": "node_modules/drizzle-orm",
        "filename": "drizzle-orm",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "fd2ae5e41941",
        "name": "VendorRecord",
        "kind": "type",
        "definition": "typeof vendors.$inferSelect",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 73,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "d271b4c467e6",
        "name": "ModelRecord",
        "kind": "type",
        "definition": "typeof models.$inferSelect",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 74,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "e6f2c8ad52ed",
        "name": "ConversationRecord",
        "kind": "type",
        "definition": "typeof conversations.$inferSelect",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 75,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "c8406003",
            "typeId": "e6f2c8ad52ed",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 101,
              "column": 49
            },
            "context": "parameter",
            "contextDetails": "ConversationRepository.transformToConversation(record)",
            "usageType": "local",
            "sourceText": "ConversationRecord"
          },
          {
            "id": "9bf3f1f4",
            "typeId": "e6f2c8ad52ed",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 123,
              "column": 47
            },
            "context": "parameter",
            "contextDetails": "ConversationRepository.transformToConversationSync(record)",
            "usageType": "local",
            "sourceText": "ConversationRecord"
          }
        ]
      },
      {
        "id": "45e15756c09e",
        "name": "MessageRecord",
        "kind": "type",
        "definition": "typeof messages.$inferSelect",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 76,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "aba39960",
            "typeId": "45e15756c09e",
            "location": {
              "file": "src/repositories/MessageRepository.ts",
              "line": 21,
              "column": 32
            },
            "context": "return",
            "contextDetails": "MessageRepository.create",
            "usageType": "local",
            "sourceText": "MessageRecord"
          }
        ]
      },
      {
        "id": "d1d11c88022a",
        "name": "FileAttachmentRecord",
        "kind": "type",
        "definition": "typeof fileAttachments.$inferSelect",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 77,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "cd6cbe54",
            "typeId": "d1d11c88022a",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 15,
              "column": 23
            },
            "context": "property",
            "contextDetails": "Message.fileAttachments",
            "usageType": "local",
            "sourceText": "FileAttachmentRecord[]"
          }
        ]
      },
      {
        "id": "7d6bec3d358c",
        "name": "NewVendor",
        "kind": "type",
        "definition": "typeof vendors.$inferInsert",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 79,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "bba26c017703",
        "name": "NewModel",
        "kind": "type",
        "definition": "typeof models.$inferInsert",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 80,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "46126254dbbb",
        "name": "NewConversation",
        "kind": "type",
        "definition": "typeof conversations.$inferInsert",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 81,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "31ba3a4e",
            "typeId": "46126254dbbb",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 145,
              "column": 24
            },
            "context": "parameter",
            "contextDetails": "ConversationRepository.create(conversation)",
            "usageType": "local",
            "sourceText": "NewConversation"
          }
        ]
      },
      {
        "id": "c48af3403b1b",
        "name": "NewMessage",
        "kind": "type",
        "definition": "typeof messages.$inferInsert",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 82,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "d823de17",
            "typeId": "c48af3403b1b",
            "location": {
              "file": "src/repositories/MessageRepository.ts",
              "line": 21,
              "column": 19
            },
            "context": "parameter",
            "contextDetails": "MessageRepository.create(message)",
            "usageType": "local",
            "sourceText": "NewMessage"
          }
        ]
      },
      {
        "id": "d316e575eb10",
        "name": "NewFileAttachment",
        "kind": "type",
        "definition": "typeof fileAttachments.$inferInsert",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "filename": "schema.ts",
        "location": {
          "file": "src/database/schema.ts",
          "line": 83,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "a58c1be0",
            "typeId": "d316e575eb10",
            "location": {
              "file": "src/repositories/FileAttachmentRepository.ts",
              "line": 21,
              "column": 28
            },
            "context": "parameter",
            "contextDetails": "FileAttachmentRepository.create(attachment)",
            "usageType": "local",
            "sourceText": "NewFileAttachment"
          }
        ]
      },
      {
        "id": "f54e59c8e8c7",
        "name": "sqliteTable",
        "kind": "import",
        "definition": "import { sqliteTable } from 'drizzle-orm/sqlite-core'",
        "fullPath": "node_modules/drizzle-orm/sqlite-core",
        "filename": "sqlite-core",
        "location": {
          "file": "src/database/schema.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "3654d65e07da",
        "name": "text",
        "kind": "import",
        "definition": "import { text } from 'drizzle-orm/sqlite-core'",
        "fullPath": "node_modules/drizzle-orm/sqlite-core",
        "filename": "sqlite-core",
        "location": {
          "file": "src/database/schema.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "isLocal": false,
        "references": [
          {
            "id": "2a1e6b01",
            "typeId": "3654d65e07da",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 75,
              "column": 11
            },
            "context": "property",
            "contextDetails": "ScrapedTextBlock.type",
            "usageType": "imported",
            "sourceText": "\"text\""
          }
        ]
      },
      {
        "id": "aa50107ae583",
        "name": "integer",
        "kind": "import",
        "definition": "import { integer } from 'drizzle-orm/sqlite-core'",
        "fullPath": "node_modules/drizzle-orm/sqlite-core",
        "filename": "sqlite-core",
        "location": {
          "file": "src/database/schema.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "24931d5638f3",
        "name": "real",
        "kind": "import",
        "definition": "import { real } from 'drizzle-orm/sqlite-core'",
        "fullPath": "node_modules/drizzle-orm/sqlite-core",
        "filename": "sqlite-core",
        "location": {
          "file": "src/database/schema.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "66d67a5e5018",
        "name": "ClassValue",
        "kind": "import",
        "definition": "import { ClassValue } from 'clsx'",
        "fullPath": "node_modules/clsx",
        "filename": "clsx",
        "location": {
          "file": "src/lib/utils.ts",
          "line": 1,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/lib/utils.ts",
        "isLocal": false,
        "references": [
          {
            "id": "2828ffa5",
            "typeId": "66d67a5e5018",
            "location": {
              "file": "src/lib/utils.ts",
              "line": 5,
              "column": 31
            },
            "context": "parameter",
            "contextDetails": "cn(inputs)",
            "usageType": "imported",
            "sourceText": "ClassValue[]"
          }
        ]
      },
      {
        "id": "ba9455782c42",
        "name": "clsx",
        "kind": "import",
        "definition": "import { clsx } from 'clsx'",
        "fullPath": "node_modules/clsx",
        "filename": "clsx",
        "location": {
          "file": "src/lib/utils.ts",
          "line": 1,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/lib/utils.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "8fd9ad42a344",
        "name": "twMerge",
        "kind": "import",
        "definition": "import { twMerge } from 'tailwind-merge'",
        "fullPath": "node_modules/tailwind-merge",
        "filename": "tailwind-merge",
        "location": {
          "file": "src/lib/utils.ts",
          "line": 2,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/lib/utils.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "690359e7e7cc",
        "name": "useState",
        "kind": "import",
        "definition": "import { useState } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/components/ui/WebSearchDisplay.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "e2cb327120e9",
        "name": "useEffect",
        "kind": "import",
        "definition": "import { useEffect } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/components/ui/Toast.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "24e2f3c92f0d",
        "name": "RecentChat",
        "kind": "interface",
        "definition": "interface RecentChat {\n  id: string;\n  name: string;\n  vendor_id: string;\n  model_id: string;\n  created_at: string;\n  updated_at: string;\n  last_message_time: string | null;\n  isStarred: boolean;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
        "filename": "useRecentChats.ts",
        "location": {
          "file": "src/hooks/useRecentChats.ts",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "9eba9616",
            "typeId": "24e2f3c92f0d",
            "location": {
              "file": "src/hooks/useRecentChats.ts",
              "line": 19,
              "column": 16
            },
            "context": "property",
            "contextDetails": "UseRecentChatsResult.recentChats",
            "usageType": "local",
            "sourceText": "RecentChat[]"
          }
        ]
      },
      {
        "id": "18dd476929a0",
        "name": "UseRecentChatsResult",
        "kind": "interface",
        "definition": "interface UseRecentChatsResult {\n  recentChats: RecentChat[];\n  isLoading: boolean;\n  error: string | null;\n  refetch: () => Promise<void>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
        "filename": "useRecentChats.ts",
        "location": {
          "file": "src/hooks/useRecentChats.ts",
          "line": 18,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "a7520be09e86",
        "name": "useCallback",
        "kind": "import",
        "definition": "import { useCallback } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/components/ui/ImportWebChatModal.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "63fcb91b8d8f",
        "name": "RECENT_CHATS_SIDEBAR_LIMIT",
        "kind": "import",
        "definition": "import { RECENT_CHATS_SIDEBAR_LIMIT } from '../config/constants'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/config/constants",
        "filename": "constants",
        "location": {
          "file": "src/hooks/useRecentChats.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "af9fce794eb7",
        "name": "StarredChat",
        "kind": "interface",
        "definition": "interface StarredChat {\n  id: string;\n  name: string;\n  vendor_id: string;\n  model_id: string;\n  created_at: string;\n  updated_at: string;\n  last_message_time: string | null;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
        "filename": "useStarredChats.ts",
        "location": {
          "file": "src/hooks/useStarredChats.ts",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "253a76ca",
            "typeId": "af9fce794eb7",
            "location": {
              "file": "src/hooks/useStarredChats.ts",
              "line": 18,
              "column": 17
            },
            "context": "property",
            "contextDetails": "UseStarredChatsResult.starredChats",
            "usageType": "local",
            "sourceText": "StarredChat[]"
          }
        ]
      },
      {
        "id": "322b3c03be83",
        "name": "UseStarredChatsResult",
        "kind": "interface",
        "definition": "interface UseStarredChatsResult {\n  starredChats: StarredChat[];\n  isLoading: boolean;\n  error: string | null;\n  refetch: () => Promise<void>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
        "filename": "useStarredChats.ts",
        "location": {
          "file": "src/hooks/useStarredChats.ts",
          "line": 17,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "99a0678f6c9a",
        "name": "STARRED_CHATS_SIDEBAR_LIMIT",
        "kind": "import",
        "definition": "import { STARRED_CHATS_SIDEBAR_LIMIT } from '../config/constants'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/config/constants",
        "filename": "constants",
        "location": {
          "file": "src/hooks/useStarredChats.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3638ae30aca4",
        "name": "AnthropicProject",
        "kind": "import",
        "definition": "import { AnthropicProject } from '../AnthropicProject.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/AnthropicProject.js",
        "filename": "AnthropicProject.js",
        "location": {
          "file": "src/managers/AnthropicConversationManager.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "99ed9e98",
            "typeId": "3638ae30aca4",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 47,
              "column": 23
            },
            "context": "property",
            "contextDetails": "AnthropicConversationManager.project",
            "usageType": "local",
            "sourceText": "AnthropicProject"
          },
          {
            "id": "8c19707c",
            "typeId": "3638ae30aca4",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 60,
              "column": 87
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.constructor(project)",
            "usageType": "local",
            "sourceText": "AnthropicProject"
          }
        ]
      },
      {
        "id": "a92a94affc88",
        "name": "createConversationLogger",
        "kind": "import",
        "definition": "import { createConversationLogger } from '../logger.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/logger.js",
        "filename": "logger.js",
        "location": {
          "file": "src/utils/OpenAIContentProcessor.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "09158807c83c",
        "name": "Message",
        "kind": "import",
        "definition": "import { Message } from '../types/conversation.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.js",
        "filename": "conversation.js",
        "location": {
          "file": "src/managers/OpenAIConversationManager.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "e73f9443",
            "typeId": "09158807c83c",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 279,
              "column": 20
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "944b127b",
            "typeId": "09158807c83c",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 200,
              "column": 20
            },
            "context": "return",
            "contextDetails": "GeminiConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "b32922c8",
            "typeId": "09158807c83c",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 209,
              "column": 20
            },
            "context": "return",
            "contextDetails": "OpenAIConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "b545e514",
            "typeId": "09158807c83c",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 11,
              "column": 39
            },
            "context": "extends",
            "contextDetails": "AnthropicMessage",
            "usageType": "local",
            "sourceText": "Message<Anthropic.Messages.MessageParam>"
          },
          {
            "id": "f1f9eb63",
            "typeId": "09158807c83c",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "GeminiMessage",
            "usageType": "local",
            "sourceText": "Message<Content>"
          },
          {
            "id": "fa7f3a91",
            "typeId": "09158807c83c",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "OpenAIMessage",
            "usageType": "local",
            "sourceText": "Message<OpenAI.Responses.EasyInputMessage>"
          },
          {
            "id": "948c5938",
            "typeId": "09158807c83c",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 32,
              "column": 15
            },
            "context": "property",
            "contextDetails": "Conversation.messages",
            "usageType": "local",
            "sourceText": "Message[]"
          }
        ]
      },
      {
        "id": "5e2cc2062b2c",
        "name": "createMessage",
        "kind": "import",
        "definition": "import { createMessage } from '../types/conversation.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.js",
        "filename": "conversation.js",
        "location": {
          "file": "src/managers/OpenAIConversationManager.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "18c84e44d4d5",
        "name": "AnthropicMessage",
        "kind": "import",
        "definition": "import { AnthropicMessage } from '../messages/AnthropicMessage.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.js",
        "filename": "AnthropicMessage.js",
        "location": {
          "file": "src/managers/AnthropicConversationManager.ts",
          "line": 11,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "dec8d4a5",
            "typeId": "18c84e44d4d5",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 86,
              "column": 32
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.sendMessage(message)",
            "usageType": "local",
            "sourceText": "AnthropicMessage"
          },
          {
            "id": "bfaf3b90",
            "typeId": "18c84e44d4d5",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 359,
              "column": 35
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.restoreMessage(message)",
            "usageType": "local",
            "sourceText": "AnthropicMessage"
          },
          {
            "id": "5867726b",
            "typeId": "18c84e44d4d5",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 23,
              "column": 77
            },
            "context": "return",
            "contextDetails": "AnthropicMessage.fromMessageParam",
            "usageType": "local",
            "sourceText": "AnthropicMessage"
          }
        ]
      },
      {
        "id": "b7709453a089",
        "name": "ConversationManager",
        "kind": "import",
        "definition": "import { ConversationManager } from '../managers/ConversationManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.js",
        "filename": "ConversationManager.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "caf23c89",
            "typeId": "b7709453a089",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 21,
              "column": 54
            },
            "context": "implements",
            "contextDetails": "AnthropicConversationManager",
            "usageType": "local",
            "sourceText": "ConversationManager"
          },
          {
            "id": "14d1330d",
            "typeId": "b7709453a089",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 16,
              "column": 51
            },
            "context": "implements",
            "contextDetails": "GeminiConversationManager",
            "usageType": "local",
            "sourceText": "ConversationManager"
          },
          {
            "id": "9d07a09c",
            "typeId": "b7709453a089",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 16,
              "column": 51
            },
            "context": "implements",
            "contextDetails": "OpenAIConversationManager",
            "usageType": "local",
            "sourceText": "ConversationManager"
          },
          {
            "id": "379e0810",
            "typeId": "b7709453a089",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 26,
              "column": 12
            },
            "context": "property",
            "contextDetails": "ConversationData.manager",
            "usageType": "local",
            "sourceText": "ConversationManager"
          }
        ]
      },
      {
        "id": "6e3efaee03df",
        "name": "MessageRecord",
        "kind": "import",
        "definition": "import { MessageRecord } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/MessageRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
        "isLocal": true,
        "references": [
          {
            "id": "d8814186",
            "typeId": "6e3efaee03df",
            "location": {
              "file": "src/repositories/MessageRepository.ts",
              "line": 21,
              "column": 32
            },
            "context": "return",
            "contextDetails": "MessageRepository.create",
            "usageType": "local",
            "sourceText": "MessageRecord"
          }
        ]
      },
      {
        "id": "cb87cbcdc322",
        "name": "FileAttachmentRecord",
        "kind": "import",
        "definition": "import { FileAttachmentRecord } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/types/conversation.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
        "isLocal": true,
        "references": [
          {
            "id": "a59378a2",
            "typeId": "cb87cbcdc322",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 15,
              "column": 23
            },
            "context": "property",
            "contextDetails": "Message.fileAttachments",
            "usageType": "local",
            "sourceText": "FileAttachmentRecord[]"
          }
        ]
      },
      {
        "id": "c8221831b3bb",
        "name": "StoredFileWithMetadata",
        "kind": "import",
        "definition": "import { StoredFileWithMetadata } from './FileStorageService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.js",
        "filename": "FileStorageService.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 13,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "ac120b7a",
            "typeId": "c8221831b3bb",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 580,
              "column": 22
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.sendMessageWithAttachments(attachments)",
            "usageType": "local",
            "sourceText": "StoredFileWithMetadata[]"
          },
          {
            "id": "1f13e2ff",
            "typeId": "c8221831b3bb",
            "location": {
              "file": "src/managers/ConversationManager.ts",
              "line": 75,
              "column": 18
            },
            "context": "parameter",
            "contextDetails": "ConversationManager.sendMessageWithAttachments(attachments)",
            "usageType": "local",
            "sourceText": "StoredFileWithMetadata[]"
          },
          {
            "id": "56b09166",
            "typeId": "c8221831b3bb",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 318,
              "column": 22
            },
            "context": "parameter",
            "contextDetails": "GeminiConversationManager.sendMessageWithAttachments(attachments)",
            "usageType": "local",
            "sourceText": "StoredFileWithMetadata[]"
          },
          {
            "id": "19673487",
            "typeId": "c8221831b3bb",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 341,
              "column": 22
            },
            "context": "parameter",
            "contextDetails": "OpenAIConversationManager.sendMessageWithAttachments(attachments)",
            "usageType": "local",
            "sourceText": "StoredFileWithMetadata[]"
          }
        ]
      },
      {
        "id": "fdad3ecfde73",
        "name": "ANTHROPIC_ROLES",
        "kind": "import",
        "definition": "import { ANTHROPIC_ROLES } from '../constants/roles.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.js",
        "filename": "roles.js",
        "location": {
          "file": "src/managers/AnthropicConversationManager.ts",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "036d369c21d0",
        "name": "AnthropicContentBlockProcessor",
        "kind": "import",
        "definition": "import { AnthropicContentBlockProcessor } from '../utils/AnthropicContentBlockProcessor.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.js",
        "filename": "AnthropicContentBlockProcessor.js",
        "location": {
          "file": "src/managers/AnthropicWebImportManager.ts",
          "line": 16,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "e16d122f1e19",
        "name": "AnthropicStopReason",
        "kind": "import",
        "definition": "import { AnthropicStopReason } from '../utils/AnthropicStopReason.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicStopReason.js",
        "filename": "AnthropicStopReason.js",
        "location": {
          "file": "src/managers/AnthropicConversationManager.ts",
          "line": 17,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicConversationManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "b5177b66",
            "typeId": "e16d122f1e19",
            "location": {
              "file": "src/utils/AnthropicStopReason.ts",
              "line": 48,
              "column": 67
            },
            "context": "return",
            "contextDetails": "AnthropicStopReason.fromApiResponse",
            "usageType": "local",
            "sourceText": "AnthropicStopReason"
          }
        ]
      },
      {
        "id": "8d0a53308a9f",
        "name": "DEFAULT_MAX_TOKENS_FALLBACK",
        "kind": "import",
        "definition": "import { DEFAULT_MAX_TOKENS_FALLBACK } from '../constants/tokens.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/tokens.js",
        "filename": "tokens.js",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "dd5ee33a47a4",
        "name": "LoggingService",
        "kind": "import",
        "definition": "import { LoggingService } from '../services/LoggingService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/LoggingService.js",
        "filename": "LoggingService.js",
        "location": {
          "file": "src/ipc/logging-handlers.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "b08c10f70213",
        "name": "toFile",
        "kind": "import",
        "definition": "import { toFile } from '@anthropic-ai/sdk'",
        "fullPath": "node_modules/@anthropic-ai/sdk",
        "filename": "sdk",
        "location": {
          "file": "src/managers/AnthropicFileManager.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicFileManager.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "38d6fceb3dc3",
        "name": "WebImportManager",
        "kind": "import",
        "definition": "import { WebImportManager } from './WebImportManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.js",
        "filename": "WebImportManager.js",
        "location": {
          "file": "src/managers/AnthropicWebImportManager.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "35eb724d",
            "typeId": "38d6fceb3dc3",
            "location": {
              "file": "src/managers/AnthropicWebImportManager.ts",
              "line": 29,
              "column": 51
            },
            "context": "implements",
            "contextDetails": "AnthropicWebImportManager",
            "usageType": "local",
            "sourceText": "WebImportManager"
          }
        ]
      },
      {
        "id": "fe8fcb3d7a49",
        "name": "WebImportValidationResult",
        "kind": "import",
        "definition": "import { WebImportValidationResult } from './WebImportManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.js",
        "filename": "WebImportManager.js",
        "location": {
          "file": "src/managers/AnthropicWebImportManager.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "64aa82be364b",
        "name": "WebImportConversationData",
        "kind": "import",
        "definition": "import { WebImportConversationData } from './WebImportManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.js",
        "filename": "WebImportManager.js",
        "location": {
          "file": "src/managers/AnthropicWebImportManager.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "1254da75",
            "typeId": "64aa82be364b",
            "location": {
              "file": "src/managers/WebImportManager.ts",
              "line": 27,
              "column": 22
            },
            "context": "property",
            "contextDetails": "WebImportProcessResult.conversationData",
            "usageType": "local",
            "sourceText": "WebImportConversationData"
          }
        ]
      },
      {
        "id": "3d29defcb03f",
        "name": "WebImportMessage",
        "kind": "import",
        "definition": "import { WebImportMessage } from './WebImportManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.js",
        "filename": "WebImportManager.js",
        "location": {
          "file": "src/managers/AnthropicWebImportManager.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "2f6c1787",
            "typeId": "3d29defcb03f",
            "location": {
              "file": "src/managers/AnthropicWebImportManager.ts",
              "line": 272,
              "column": 62
            },
            "context": "return",
            "contextDetails": "AnthropicWebImportManager.processMessage",
            "usageType": "local",
            "sourceText": "WebImportMessage"
          },
          {
            "id": "4f94b7e2",
            "typeId": "3d29defcb03f",
            "location": {
              "file": "src/managers/WebImportManager.ts",
              "line": 28,
              "column": 14
            },
            "context": "property",
            "contextDetails": "WebImportProcessResult.messages",
            "usageType": "local",
            "sourceText": "WebImportMessage[]"
          },
          {
            "id": "6ba76b56",
            "typeId": "3d29defcb03f",
            "location": {
              "file": "src/managers/WebImportManager.ts",
              "line": 59,
              "column": 37
            },
            "context": "return",
            "contextDetails": "WebImportManager.processMessage",
            "usageType": "local",
            "sourceText": "WebImportMessage"
          }
        ]
      },
      {
        "id": "bba2e92d8b65",
        "name": "WebImportProcessResult",
        "kind": "import",
        "definition": "import { WebImportProcessResult } from './WebImportManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.js",
        "filename": "WebImportManager.js",
        "location": {
          "file": "src/managers/AnthropicWebImportManager.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "0410e4df5983",
        "name": "WebChatJSONValidator",
        "kind": "import",
        "definition": "import { WebChatJSONValidator } from '../utils/WebChatJSONValidator.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.js",
        "filename": "WebChatJSONValidator.js",
        "location": {
          "file": "src/ipc/import-handlers.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/import-handlers.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3a14cc296f93",
        "name": "ConversationRepository",
        "kind": "import",
        "definition": "import { ConversationRepository } from '../repositories/ConversationRepository.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.js",
        "filename": "ConversationRepository.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "3b53fc9e",
            "typeId": "3a14cc296f93",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 36,
              "column": 35
            },
            "context": "property",
            "contextDetails": "ConversationService.conversationRepository",
            "usageType": "local",
            "sourceText": "ConversationRepository"
          }
        ]
      },
      {
        "id": "12993be59c47",
        "name": "FileAttachmentRepository",
        "kind": "import",
        "definition": "import { FileAttachmentRepository } from '../repositories/FileAttachmentRepository.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.js",
        "filename": "FileAttachmentRepository.js",
        "location": {
          "file": "src/services/FileStorageService.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "61a28921",
            "typeId": "12993be59c47",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 38,
              "column": 37
            },
            "context": "property",
            "contextDetails": "ConversationService.fileAttachmentRepository",
            "usageType": "local",
            "sourceText": "FileAttachmentRepository"
          },
          {
            "id": "8bafe013",
            "typeId": "12993be59c47",
            "location": {
              "file": "src/services/FileMigrationService.ts",
              "line": 25,
              "column": 37
            },
            "context": "property",
            "contextDetails": "FileMigrationService.fileAttachmentRepository",
            "usageType": "local",
            "sourceText": "FileAttachmentRepository"
          },
          {
            "id": "73e22838",
            "typeId": "12993be59c47",
            "location": {
              "file": "src/services/FileStorageService.ts",
              "line": 29,
              "column": 37
            },
            "context": "property",
            "contextDetails": "FileStorageService.fileAttachmentRepository",
            "usageType": "local",
            "sourceText": "FileAttachmentRepository"
          }
        ]
      },
      {
        "id": "92e535143d50",
        "name": "NewConversation",
        "kind": "import",
        "definition": "import { NewConversation } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/ConversationRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
        "isLocal": true,
        "references": [
          {
            "id": "befe7a32",
            "typeId": "92e535143d50",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 145,
              "column": 24
            },
            "context": "parameter",
            "contextDetails": "ConversationRepository.create(conversation)",
            "usageType": "local",
            "sourceText": "NewConversation"
          }
        ]
      },
      {
        "id": "573810e3f956",
        "name": "NewMessage",
        "kind": "import",
        "definition": "import { NewMessage } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/MessageRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
        "isLocal": true,
        "references": [
          {
            "id": "8f38fb25",
            "typeId": "573810e3f956",
            "location": {
              "file": "src/repositories/MessageRepository.ts",
              "line": 21,
              "column": 19
            },
            "context": "parameter",
            "contextDetails": "MessageRepository.create(message)",
            "usageType": "local",
            "sourceText": "NewMessage"
          }
        ]
      },
      {
        "id": "30a215494c51",
        "name": "NewFileAttachment",
        "kind": "import",
        "definition": "import { NewFileAttachment } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/FileAttachmentRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
        "isLocal": true,
        "references": [
          {
            "id": "20069d96",
            "typeId": "30a215494c51",
            "location": {
              "file": "src/repositories/FileAttachmentRepository.ts",
              "line": 21,
              "column": 28
            },
            "context": "parameter",
            "contextDetails": "FileAttachmentRepository.create(attachment)",
            "usageType": "local",
            "sourceText": "NewFileAttachment"
          }
        ]
      },
      {
        "id": "6cbefad319ca",
        "name": "normalizeWebToStrictContentBlocks",
        "kind": "import",
        "definition": "import { normalizeWebToStrictContentBlocks } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/managers/AnthropicWebImportManager.ts",
          "line": 26,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "fd064438aa8c",
        "name": "isStrictContentBlocks",
        "kind": "import",
        "definition": "import { isStrictContentBlocks } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/managers/AnthropicWebImportManager.ts",
          "line": 26,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/AnthropicWebImportManager.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "da00239bc675",
        "name": "ConversationManager",
        "kind": "interface",
        "definition": "interface ConversationManager {\n\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/ConversationManager.ts",
        "filename": "ConversationManager.ts",
        "location": {
          "file": "src/managers/ConversationManager.ts",
          "line": 6,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "74a92020",
            "typeId": "da00239bc675",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 21,
              "column": 54
            },
            "context": "implements",
            "contextDetails": "AnthropicConversationManager",
            "usageType": "local",
            "sourceText": "ConversationManager"
          },
          {
            "id": "d31d33d5",
            "typeId": "da00239bc675",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 16,
              "column": 51
            },
            "context": "implements",
            "contextDetails": "GeminiConversationManager",
            "usageType": "local",
            "sourceText": "ConversationManager"
          },
          {
            "id": "0974c52e",
            "typeId": "da00239bc675",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 16,
              "column": 51
            },
            "context": "implements",
            "contextDetails": "OpenAIConversationManager",
            "usageType": "local",
            "sourceText": "ConversationManager"
          },
          {
            "id": "dd67947e",
            "typeId": "da00239bc675",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 26,
              "column": 12
            },
            "context": "property",
            "contextDetails": "ConversationData.manager",
            "usageType": "local",
            "sourceText": "ConversationManager"
          }
        ]
      },
      {
        "id": "a3136fa26142",
        "name": "GoogleGenAI",
        "kind": "import",
        "definition": "import { GoogleGenAI } from '@google/genai'",
        "fullPath": "node_modules/@google/genai",
        "filename": "genai",
        "location": {
          "file": "src/managers/GeminiConversationManager.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
        "isLocal": false,
        "references": [
          {
            "id": "d220ec78",
            "typeId": "a3136fa26142",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 28,
              "column": 21
            },
            "context": "property",
            "contextDetails": "GeminiConversationManager.client",
            "usageType": "imported",
            "sourceText": "GoogleGenAI"
          }
        ]
      },
      {
        "id": "5285e05f03fd",
        "name": "Content",
        "kind": "import",
        "definition": "import { Content } from '@google/genai'",
        "fullPath": "node_modules/@google/genai",
        "filename": "genai",
        "location": {
          "file": "src/messages/GeminiMessage.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
        "isLocal": false,
        "references": [
          {
            "id": "add118ed",
            "typeId": "5285e05f03fd",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 32,
              "column": 22
            },
            "context": "property",
            "contextDetails": "GeminiConversationManager.history",
            "usageType": "imported",
            "sourceText": "Content[]"
          },
          {
            "id": "64db5f4b",
            "typeId": "5285e05f03fd",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 195,
              "column": 31
            },
            "context": "return",
            "contextDetails": "GeminiConversationManager.getConversationHistory",
            "usageType": "imported",
            "sourceText": "Content[]"
          },
          {
            "id": "27ff6a6c",
            "typeId": "5285e05f03fd",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 12,
              "column": 22
            },
            "context": "property",
            "contextDetails": "GeminiMessage.content",
            "usageType": "imported",
            "sourceText": "Content"
          },
          {
            "id": "13642d84",
            "typeId": "5285e05f03fd",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 23,
              "column": 33
            },
            "context": "parameter",
            "contextDetails": "GeminiMessage.fromContent(content)",
            "usageType": "imported",
            "sourceText": "Content"
          },
          {
            "id": "2b4c0fb0",
            "typeId": "5285e05f03fd",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 146,
              "column": 22
            },
            "context": "return",
            "contextDetails": "GeminiMessage.getVendorData",
            "usageType": "imported",
            "sourceText": "Content"
          }
        ]
      },
      {
        "id": "4252eff08470",
        "name": "Chat",
        "kind": "import",
        "definition": "import { Chat } from '@google/genai'",
        "fullPath": "node_modules/@google/genai",
        "filename": "genai",
        "location": {
          "file": "src/managers/GeminiConversationManager.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
        "isLocal": false,
        "references": [
          {
            "id": "a6c7ab00",
            "typeId": "4252eff08470",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 29,
              "column": 19
            },
            "context": "property",
            "contextDetails": "GeminiConversationManager.chat",
            "usageType": "imported",
            "sourceText": "Chat"
          }
        ]
      },
      {
        "id": "cdca97acf58d",
        "name": "GeminiMessage",
        "kind": "import",
        "definition": "import { GeminiMessage } from '../messages/GeminiMessage.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.js",
        "filename": "GeminiMessage.js",
        "location": {
          "file": "src/managers/GeminiConversationManager.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/GeminiConversationManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "fa56ae9f",
            "typeId": "cdca97acf58d",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 77,
              "column": 32
            },
            "context": "parameter",
            "contextDetails": "GeminiConversationManager.sendMessage(message)",
            "usageType": "local",
            "sourceText": "GeminiMessage"
          },
          {
            "id": "9a3b2c8d",
            "typeId": "cdca97acf58d",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 23,
              "column": 43
            },
            "context": "return",
            "contextDetails": "GeminiMessage.fromContent",
            "usageType": "local",
            "sourceText": "GeminiMessage"
          },
          {
            "id": "e0d705f4",
            "typeId": "cdca97acf58d",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 164,
              "column": 45
            },
            "context": "return",
            "contextDetails": "GeminiMessage.createTextMessage",
            "usageType": "local",
            "sourceText": "GeminiMessage"
          },
          {
            "id": "a1613b7a",
            "typeId": "cdca97acf58d",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 168,
              "column": 83
            },
            "context": "return",
            "contextDetails": "GeminiMessage.createImageMessage",
            "usageType": "local",
            "sourceText": "GeminiMessage"
          }
        ]
      },
      {
        "id": "2368d9d46094",
        "name": "GEMINI_ROLES",
        "kind": "import",
        "definition": "import { GEMINI_ROLES } from '../constants/roles.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.js",
        "filename": "roles.js",
        "location": {
          "file": "src/messages/GeminiMessage.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "351f24b698f5",
        "name": "OpenAI",
        "kind": "import",
        "definition": "import OpenAI from 'openai'",
        "fullPath": "node_modules/openai",
        "filename": "openai",
        "location": {
          "file": "src/utils/OpenAIContentProcessor.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
        "isLocal": false,
        "references": [
          {
            "id": "bc738b87",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 30,
              "column": 21
            },
            "context": "property",
            "contextDetails": "OpenAIConversationManager.client",
            "usageType": "imported",
            "sourceText": "OpenAI"
          },
          {
            "id": "50f0cf6c",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 31,
              "column": 23
            },
            "context": "property",
            "contextDetails": "OpenAIConversationManager.messages",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseInputItem[]"
          },
          {
            "id": "ea131b55",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 205,
              "column": 31
            },
            "context": "return",
            "contextDetails": "OpenAIConversationManager.getConversationHistory",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseInputItem[]"
          },
          {
            "id": "dbb4a652",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 12,
              "column": 27
            },
            "context": "property",
            "contextDetails": "OpenAIMessage.messageParam",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.EasyInputMessage"
          },
          {
            "id": "1022894f",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 23,
              "column": 43
            },
            "context": "parameter",
            "contextDetails": "OpenAIMessage.fromMessageParam(messageParam)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.EasyInputMessage"
          },
          {
            "id": "ec5bc0c2",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 37,
              "column": 34
            },
            "context": "parameter",
            "contextDetails": "OpenAIMessage.addContentPart(part)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseInputContent"
          },
          {
            "id": "64a7805d",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 168,
              "column": 22
            },
            "context": "return",
            "contextDetails": "OpenAIMessage.getVendorData",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.EasyInputMessage"
          },
          {
            "id": "2c03e8a8",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 56,
              "column": 19
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.findLinksToRemove(urlCitations)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseOutputText.URLCitation[]"
          },
          {
            "id": "76979e8c",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 97,
              "column": 19
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.removeMatchedLinksAndAdjustCitations(urlCitations)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseOutputText.URLCitation[]"
          },
          {
            "id": "ab9358e4",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 194,
              "column": 46
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.processTextWithCitations(textBlock)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseOutputText"
          },
          {
            "id": "9b20b8b2",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 287,
              "column": 44
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.generateCitationLozenge(citation)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseOutputText.URLCitation"
          },
          {
            "id": "0e2b3146",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 504,
              "column": 20
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.processContentBlocksWithWebSearch(contentBlocks)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseOutputText[]"
          },
          {
            "id": "a78cb6a6",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 535,
              "column": 20
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.processContentBlocksWithEnrichedWebSearch(contentBlocks)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseOutputText[]"
          },
          {
            "id": "71b22cfb",
            "typeId": "351f24b698f5",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 585,
              "column": 46
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.processContentBlocks(contentBlocks)",
            "usageType": "imported",
            "sourceText": "OpenAI.Responses.ResponseOutputText[]"
          }
        ]
      },
      {
        "id": "397300a5dc47",
        "name": "OpenAIMessage",
        "kind": "import",
        "definition": "import { OpenAIMessage } from '../messages/OpenAIMessage.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.js",
        "filename": "OpenAIMessage.js",
        "location": {
          "file": "src/managers/OpenAIConversationManager.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
        "isLocal": true,
        "references": [
          {
            "id": "91f8ffe5",
            "typeId": "397300a5dc47",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 70,
              "column": 32
            },
            "context": "parameter",
            "contextDetails": "OpenAIConversationManager.sendMessage(message)",
            "usageType": "local",
            "sourceText": "OpenAIMessage"
          },
          {
            "id": "853d110e",
            "typeId": "397300a5dc47",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 23,
              "column": 79
            },
            "context": "return",
            "contextDetails": "OpenAIMessage.fromMessageParam",
            "usageType": "local",
            "sourceText": "OpenAIMessage"
          }
        ]
      },
      {
        "id": "fb5832a3dbd1",
        "name": "OPENAI_ROLES",
        "kind": "import",
        "definition": "import { OPENAI_ROLES } from '../constants/roles.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.js",
        "filename": "roles.js",
        "location": {
          "file": "src/managers/OpenAIConversationManager.ts",
          "line": 12,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "1dc4c937f90e",
        "name": "OpenAIContentProcessor",
        "kind": "import",
        "definition": "import { OpenAIContentProcessor } from '../utils/OpenAIContentProcessor.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.js",
        "filename": "OpenAIContentProcessor.js",
        "location": {
          "file": "src/managers/OpenAIConversationManager.ts",
          "line": 13,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "c60e8197ffc1",
        "name": "WebImportValidationResult",
        "kind": "interface",
        "definition": "interface WebImportValidationResult {\n  isValid: boolean;\n  error?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
        "filename": "WebImportManager.ts",
        "location": {
          "file": "src/managers/WebImportManager.ts",
          "line": 4,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "1bf135cdb3b3",
        "name": "WebImportConversationData",
        "kind": "interface",
        "definition": "interface WebImportConversationData {\n  id?: string;\n  name: string;\n  modelId: string;\n  vendor: string;\n  vendorProjectId?: string | null;\n  vendorData?: Record<string, any>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
        "filename": "WebImportManager.ts",
        "location": {
          "file": "src/managers/WebImportManager.ts",
          "line": 9,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "d470e2b6",
            "typeId": "1bf135cdb3b3",
            "location": {
              "file": "src/managers/WebImportManager.ts",
              "line": 27,
              "column": 22
            },
            "context": "property",
            "contextDetails": "WebImportProcessResult.conversationData",
            "usageType": "local",
            "sourceText": "WebImportConversationData"
          }
        ]
      },
      {
        "id": "06e21234cc20",
        "name": "WebImportMessage",
        "kind": "interface",
        "definition": "interface WebImportMessage {\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp?: string;\n  vendorData?: Record<string, any>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
        "filename": "WebImportManager.ts",
        "location": {
          "file": "src/managers/WebImportManager.ts",
          "line": 18,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "99287613",
            "typeId": "06e21234cc20",
            "location": {
              "file": "src/managers/AnthropicWebImportManager.ts",
              "line": 272,
              "column": 62
            },
            "context": "return",
            "contextDetails": "AnthropicWebImportManager.processMessage",
            "usageType": "local",
            "sourceText": "WebImportMessage"
          },
          {
            "id": "530798fe",
            "typeId": "06e21234cc20",
            "location": {
              "file": "src/managers/WebImportManager.ts",
              "line": 28,
              "column": 14
            },
            "context": "property",
            "contextDetails": "WebImportProcessResult.messages",
            "usageType": "local",
            "sourceText": "WebImportMessage[]"
          },
          {
            "id": "2d2ff4d4",
            "typeId": "06e21234cc20",
            "location": {
              "file": "src/managers/WebImportManager.ts",
              "line": 59,
              "column": 37
            },
            "context": "return",
            "contextDetails": "WebImportManager.processMessage",
            "usageType": "local",
            "sourceText": "WebImportMessage"
          }
        ]
      },
      {
        "id": "411acaa1ea60",
        "name": "WebImportProcessResult",
        "kind": "interface",
        "definition": "interface WebImportProcessResult {\n  success: boolean;\n  conversationData?: WebImportConversationData;\n  messages?: WebImportMessage[];\n  error?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
        "filename": "WebImportManager.ts",
        "location": {
          "file": "src/managers/WebImportManager.ts",
          "line": 25,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "471dfded8696",
        "name": "WebImportManager",
        "kind": "interface",
        "definition": "interface WebImportManager {\n\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/WebImportManager.ts",
        "filename": "WebImportManager.ts",
        "location": {
          "file": "src/managers/WebImportManager.ts",
          "line": 32,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "d030c302",
            "typeId": "471dfded8696",
            "location": {
              "file": "src/managers/AnthropicWebImportManager.ts",
              "line": 29,
              "column": 51
            },
            "context": "implements",
            "contextDetails": "AnthropicWebImportManager",
            "usageType": "local",
            "sourceText": "WebImportManager"
          }
        ]
      },
      {
        "id": "f29bc8ed4273",
        "name": "Message",
        "kind": "import",
        "definition": "import { Message } from '../types/Message.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/Message.js",
        "filename": "Message.js",
        "location": {
          "file": "src/messages/OpenAIMessage.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
        "isLocal": true,
        "references": [
          {
            "id": "c3e87e3d",
            "typeId": "f29bc8ed4273",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 279,
              "column": 20
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "0028772d",
            "typeId": "f29bc8ed4273",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 200,
              "column": 20
            },
            "context": "return",
            "contextDetails": "GeminiConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "0ff9984b",
            "typeId": "f29bc8ed4273",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 209,
              "column": 20
            },
            "context": "return",
            "contextDetails": "OpenAIConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "aa9cfa1f",
            "typeId": "f29bc8ed4273",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 11,
              "column": 39
            },
            "context": "extends",
            "contextDetails": "AnthropicMessage",
            "usageType": "local",
            "sourceText": "Message<Anthropic.Messages.MessageParam>"
          },
          {
            "id": "51eaeb09",
            "typeId": "f29bc8ed4273",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "GeminiMessage",
            "usageType": "local",
            "sourceText": "Message<Content>"
          },
          {
            "id": "b75ddb0e",
            "typeId": "f29bc8ed4273",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "OpenAIMessage",
            "usageType": "local",
            "sourceText": "Message<OpenAI.Responses.EasyInputMessage>"
          },
          {
            "id": "38ea7c73",
            "typeId": "f29bc8ed4273",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 32,
              "column": 15
            },
            "context": "property",
            "contextDetails": "Conversation.messages",
            "usageType": "local",
            "sourceText": "Message[]"
          }
        ]
      },
      {
        "id": "92a7ef69145e",
        "name": "isFileValidForUpload",
        "kind": "import",
        "definition": "import { isFileValidForUpload } from '../utils/fileValidation.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.js",
        "filename": "fileValidation.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 23,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "e9aa9772ca09",
        "name": "AnthropicRole",
        "kind": "import",
        "definition": "import { AnthropicRole } from '../constants/roles.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.js",
        "filename": "roles.js",
        "location": {
          "file": "src/messages/AnthropicMessage.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/messages/AnthropicMessage.ts",
        "isLocal": true,
        "references": [
          {
            "id": "f7e393f4",
            "typeId": "e9aa9772ca09",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 14,
              "column": 23
            },
            "context": "parameter",
            "contextDetails": "AnthropicMessage.constructor(role)",
            "usageType": "local",
            "sourceText": "AnthropicRole"
          }
        ]
      },
      {
        "id": "5013856200dd",
        "name": "Part",
        "kind": "import",
        "definition": "import { Part } from '@google/genai'",
        "fullPath": "node_modules/@google/genai",
        "filename": "genai",
        "location": {
          "file": "src/messages/GeminiMessage.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
        "isLocal": false,
        "references": [
          {
            "id": "722e7fd9",
            "typeId": "5013856200dd",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 29,
              "column": 27
            },
            "context": "parameter",
            "contextDetails": "GeminiMessage.addPart(part)",
            "usageType": "imported",
            "sourceText": "Part"
          }
        ]
      },
      {
        "id": "e35a1793cc51",
        "name": "GeminiRole",
        "kind": "import",
        "definition": "import { GeminiRole } from '../constants/roles.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.js",
        "filename": "roles.js",
        "location": {
          "file": "src/messages/GeminiMessage.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/messages/GeminiMessage.ts",
        "isLocal": true,
        "references": [
          {
            "id": "e9a17389",
            "typeId": "e35a1793cc51",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 14,
              "column": 23
            },
            "context": "parameter",
            "contextDetails": "GeminiMessage.constructor(role)",
            "usageType": "local",
            "sourceText": "GeminiRole"
          }
        ]
      },
      {
        "id": "d6183bf5beb9",
        "name": "OpenAIRole",
        "kind": "import",
        "definition": "import { OpenAIRole } from '../constants/roles.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/roles.js",
        "filename": "roles.js",
        "location": {
          "file": "src/messages/OpenAIMessage.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/messages/OpenAIMessage.ts",
        "isLocal": true,
        "references": [
          {
            "id": "a33a0406",
            "typeId": "d6183bf5beb9",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 14,
              "column": 23
            },
            "context": "parameter",
            "contextDetails": "OpenAIMessage.constructor(role)",
            "usageType": "local",
            "sourceText": "OpenAIRole"
          }
        ]
      },
      {
        "id": "b0fbaa925fd5",
        "name": "ipcMain",
        "kind": "import",
        "definition": "import { ipcMain } from 'electron'",
        "fullPath": "node_modules/electron",
        "filename": "electron",
        "location": {
          "file": "src/ipc/settings-handlers.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "521a0ebe944b",
        "name": "dialog",
        "kind": "import",
        "definition": "import { dialog } from 'electron'",
        "fullPath": "node_modules/electron",
        "filename": "electron",
        "location": {
          "file": "src/ipc/dialog-handlers.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/dialog-handlers.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "bcaf7fbe3fe4",
        "name": "PDFUtils",
        "kind": "import",
        "definition": "import { PDFUtils } from './pdfUtils.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.js",
        "filename": "pdfUtils.js",
        "location": {
          "file": "src/ipc/dialog-handlers.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/dialog-handlers.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "9425e186c922",
        "name": "Result",
        "kind": "import",
        "definition": "import { Result } from '../types/result.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/result.js",
        "filename": "result.js",
        "location": {
          "file": "src/ipc/logging-handlers.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.ts",
        "isLocal": true,
        "references": [
          {
            "id": "e7a2ffec",
            "typeId": "9425e186c922",
            "location": {
              "file": "src/types/result.ts",
              "line": 8,
              "column": 38
            },
            "context": "return",
            "contextDetails": "success",
            "usageType": "local",
            "sourceText": "Result<T>"
          },
          {
            "id": "142ff163",
            "typeId": "9425e186c922",
            "location": {
              "file": "src/types/result.ts",
              "line": 12,
              "column": 52
            },
            "context": "return",
            "contextDetails": "failure",
            "usageType": "local",
            "sourceText": "Result<T>"
          },
          {
            "id": "77d2f1f1",
            "typeId": "9425e186c922",
            "location": {
              "file": "src/types/result.ts",
              "line": 16,
              "column": 35
            },
            "context": "parameter",
            "contextDetails": "isSuccess(res)",
            "usageType": "local",
            "sourceText": "Result<T>"
          }
        ]
      },
      {
        "id": "cbcb09aa1e4a",
        "name": "success",
        "kind": "import",
        "definition": "import { success } from '../types/result.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/result.js",
        "filename": "result.js",
        "location": {
          "file": "src/ipc/logging-handlers.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.ts",
        "isLocal": true,
        "references": [
          {
            "id": "3b74ce45",
            "typeId": "cbcb09aa1e4a",
            "location": {
              "file": "src/components/ui/Toast.tsx",
              "line": 9,
              "column": 9
            },
            "context": "property",
            "contextDetails": "ToastData.type",
            "usageType": "local",
            "sourceText": "'success' | 'error' | 'info'"
          },
          {
            "id": "d489ce5e",
            "typeId": "cbcb09aa1e4a",
            "location": {
              "file": "src/contexts/ToastContext.tsx",
              "line": 14,
              "column": 27
            },
            "context": "property",
            "contextDetails": "ToastContextType.showBatchImportResults",
            "usageType": "local",
            "sourceText": "(success: number, failed: number, errors: string[]) => void"
          },
          {
            "id": "f4547378",
            "typeId": "cbcb09aa1e4a",
            "location": {
              "file": "src/schemas/AnthropicV1Schema.ts",
              "line": 94,
              "column": 49
            },
            "context": "return",
            "contextDetails": "validateAnthropicV1",
            "usageType": "local",
            "sourceText": "{ success: boolean; error?: string; data?: AnthropicV1Export }"
          }
        ]
      },
      {
        "id": "addeaa83f265",
        "name": "failure",
        "kind": "import",
        "definition": "import { failure } from '../types/result.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/result.js",
        "filename": "result.js",
        "location": {
          "file": "src/ipc/logging-handlers.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/logging-handlers.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "7be771d27e35",
        "name": "PDFMetadata",
        "kind": "interface",
        "definition": "interface PDFMetadata {\n  pageCount: number;\n  fileSize: number;\n  fileName: string;\n  hasThumbnail: boolean;\n  thumbnailPath?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/pdfUtils.ts",
        "filename": "pdfUtils.ts",
        "location": {
          "file": "src/ipc/pdfUtils.ts",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "72d6ebb4e3f0",
        "name": "SettingsService",
        "kind": "import",
        "definition": "import { SettingsService } from 'SettingsService'",
        "fullPath": "node_modules/SettingsService",
        "filename": "SettingsService",
        "location": {
          "file": "src/ipc/settings-handlers.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
        "isLocal": false,
        "references": [
          {
            "id": "ab565d93",
            "typeId": "72d6ebb4e3f0",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 41,
              "column": 28
            },
            "context": "property",
            "contextDetails": "ConversationService.settingsService",
            "usageType": "imported",
            "sourceText": "SettingsService"
          }
        ]
      },
      {
        "id": "e768b9091f21",
        "name": "Model",
        "kind": "import",
        "definition": "import { Model } from 'Models'",
        "fullPath": "node_modules/Models",
        "filename": "Models",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": [
          {
            "id": "cecf6d84",
            "typeId": "e768b9091f21",
            "location": {
              "file": "src/Models.ts",
              "line": 6,
              "column": 13
            },
            "context": "property",
            "contextDetails": "Vendor.models",
            "usageType": "imported",
            "sourceText": "Model[]"
          },
          {
            "id": "bd1da74d",
            "typeId": "e768b9091f21",
            "location": {
              "file": "src/Models.ts",
              "line": 65,
              "column": 38
            },
            "context": "return",
            "contextDetails": "Model.getModelById",
            "usageType": "imported",
            "sourceText": "Model | undefined"
          },
          {
            "id": "327e7cc2",
            "typeId": "e768b9091f21",
            "location": {
              "file": "src/Models.ts",
              "line": 73,
              "column": 51
            },
            "context": "return",
            "contextDetails": "Model.getModelsByVendor",
            "usageType": "imported",
            "sourceText": "Model[]"
          },
          {
            "id": "70f34a60",
            "typeId": "e768b9091f21",
            "location": {
              "file": "src/Models.ts",
              "line": 78,
              "column": 28
            },
            "context": "return",
            "contextDetails": "Model.getAllModels",
            "usageType": "imported",
            "sourceText": "Model[]"
          },
          {
            "id": "af05dc93",
            "typeId": "e768b9091f21",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 45,
              "column": 20
            },
            "context": "property",
            "contextDetails": "ConversationState.selectedModel",
            "usageType": "imported",
            "sourceText": "Model"
          }
        ]
      },
      {
        "id": "f90c9e471c87",
        "name": "Result",
        "kind": "import",
        "definition": "import { Result } from 'types/result'",
        "fullPath": "node_modules/types/result",
        "filename": "result",
        "location": {
          "file": "src/ipc/settings-handlers.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
        "isLocal": false,
        "references": [
          {
            "id": "6caee013",
            "typeId": "f90c9e471c87",
            "location": {
              "file": "src/types/result.ts",
              "line": 8,
              "column": 38
            },
            "context": "return",
            "contextDetails": "success",
            "usageType": "imported",
            "sourceText": "Result<T>"
          },
          {
            "id": "a4dd7019",
            "typeId": "f90c9e471c87",
            "location": {
              "file": "src/types/result.ts",
              "line": 12,
              "column": 52
            },
            "context": "return",
            "contextDetails": "failure",
            "usageType": "imported",
            "sourceText": "Result<T>"
          },
          {
            "id": "402b4168",
            "typeId": "f90c9e471c87",
            "location": {
              "file": "src/types/result.ts",
              "line": 16,
              "column": 35
            },
            "context": "parameter",
            "contextDetails": "isSuccess(res)",
            "usageType": "imported",
            "sourceText": "Result<T>"
          }
        ]
      },
      {
        "id": "3ca80c5b482e",
        "name": "success",
        "kind": "import",
        "definition": "import { success } from 'types/result'",
        "fullPath": "node_modules/types/result",
        "filename": "result",
        "location": {
          "file": "src/ipc/settings-handlers.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
        "isLocal": false,
        "references": [
          {
            "id": "7e7fd274",
            "typeId": "3ca80c5b482e",
            "location": {
              "file": "src/components/ui/Toast.tsx",
              "line": 9,
              "column": 9
            },
            "context": "property",
            "contextDetails": "ToastData.type",
            "usageType": "imported",
            "sourceText": "'success' | 'error' | 'info'"
          },
          {
            "id": "aecc8b34",
            "typeId": "3ca80c5b482e",
            "location": {
              "file": "src/contexts/ToastContext.tsx",
              "line": 14,
              "column": 27
            },
            "context": "property",
            "contextDetails": "ToastContextType.showBatchImportResults",
            "usageType": "imported",
            "sourceText": "(success: number, failed: number, errors: string[]) => void"
          },
          {
            "id": "874f53de",
            "typeId": "3ca80c5b482e",
            "location": {
              "file": "src/schemas/AnthropicV1Schema.ts",
              "line": 94,
              "column": 49
            },
            "context": "return",
            "contextDetails": "validateAnthropicV1",
            "usageType": "imported",
            "sourceText": "{ success: boolean; error?: string; data?: AnthropicV1Export }"
          }
        ]
      },
      {
        "id": "b6d2a953fbf7",
        "name": "failure",
        "kind": "import",
        "definition": "import { failure } from 'types/result'",
        "fullPath": "node_modules/types/result",
        "filename": "result",
        "location": {
          "file": "src/ipc/settings-handlers.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "6df7fc9037c7",
        "name": "ApiKey",
        "kind": "import",
        "definition": "import { ApiKey } from 'types/settings'",
        "fullPath": "node_modules/types/settings",
        "filename": "settings",
        "location": {
          "file": "src/ipc/settings-handlers.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
        "isLocal": false,
        "references": [
          {
            "id": "65645606",
            "typeId": "6df7fc9037c7",
            "location": {
              "file": "src/components/Settings/ApiKeyList.tsx",
              "line": 9,
              "column": 14
            },
            "context": "property",
            "contextDetails": "ApiKeyListProps.apiKeys",
            "usageType": "imported",
            "sourceText": "ApiKey[]"
          },
          {
            "id": "6b79fb56",
            "typeId": "6df7fc9037c7",
            "location": {
              "file": "src/types/settings.ts",
              "line": 22,
              "column": 14
            },
            "context": "property",
            "contextDetails": "SettingsConfig.apiKeys",
            "usageType": "imported",
            "sourceText": "ApiKey[]"
          }
        ]
      },
      {
        "id": "8fb349335709",
        "name": "LoggingConfig",
        "kind": "import",
        "definition": "import { LoggingConfig } from 'types/settings'",
        "fullPath": "node_modules/types/settings",
        "filename": "settings",
        "location": {
          "file": "src/ipc/settings-handlers.ts",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/ipc/settings-handlers.ts",
        "isLocal": false,
        "references": [
          {
            "id": "a2591de1",
            "typeId": "8fb349335709",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 106,
              "column": 43
            },
            "context": "parameter",
            "contextDetails": "SettingsService.setLoggingConfig(loggingConfig)",
            "usageType": "imported",
            "sourceText": "LoggingConfig"
          },
          {
            "id": "a4e3997f",
            "typeId": "8fb349335709",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 131,
              "column": 40
            },
            "context": "return",
            "contextDetails": "SettingsService.getDefaultLoggingConfig",
            "usageType": "imported",
            "sourceText": "LoggingConfig"
          },
          {
            "id": "093b5485",
            "typeId": "8fb349335709",
            "location": {
              "file": "src/types/settings.ts",
              "line": 24,
              "column": 15
            },
            "context": "property",
            "contextDetails": "SettingsConfig.logging",
            "usageType": "imported",
            "sourceText": "LoggingConfig"
          }
        ]
      },
      {
        "id": "6c9d167e0043",
        "name": "contextBridge",
        "kind": "import",
        "definition": "import { contextBridge } from 'electron'",
        "fullPath": "node_modules/electron",
        "filename": "electron",
        "location": {
          "file": "src/preload/preload.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "a0b5e457f4a1",
        "name": "ipcRenderer",
        "kind": "import",
        "definition": "import { ipcRenderer } from 'electron'",
        "fullPath": "node_modules/electron",
        "filename": "electron",
        "location": {
          "file": "src/preload/preload.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "28c5a147a213",
        "name": "webUtils",
        "kind": "import",
        "definition": "import { webUtils } from 'electron'",
        "fullPath": "node_modules/electron",
        "filename": "electron",
        "location": {
          "file": "src/preload/preload.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "70b79252caa2",
        "name": "ElectronAPI",
        "kind": "import",
        "definition": "import { ElectronAPI } from '../types/electron.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.js",
        "filename": "electron.js",
        "location": {
          "file": "src/preload/preload.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/preload/preload.ts",
        "isLocal": true,
        "references": [
          {
            "id": "36cf57db",
            "typeId": "70b79252caa2",
            "location": {
              "file": "src/preload/preload.ts",
              "line": 9,
              "column": 20
            },
            "context": "variable",
            "contextDetails": "electronAPI",
            "usageType": "local",
            "sourceText": "ElectronAPI"
          }
        ]
      },
      {
        "id": "75bd38b2bc8b",
        "name": "AnthropicContent",
        "kind": "type",
        "definition": "z.infer<typeof AnthropicContentSchema>",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
        "filename": "AnthropicV1Schema.ts",
        "location": {
          "file": "src/schemas/AnthropicV1Schema.ts",
          "line": 84,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "0de748bfea20",
        "name": "AnthropicMessage",
        "kind": "type",
        "definition": "z.infer<typeof AnthropicMessageSchema>",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
        "filename": "AnthropicV1Schema.ts",
        "location": {
          "file": "src/schemas/AnthropicV1Schema.ts",
          "line": 85,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "e292ccaa",
            "typeId": "0de748bfea20",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 86,
              "column": 32
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.sendMessage(message)",
            "usageType": "local",
            "sourceText": "AnthropicMessage"
          },
          {
            "id": "4bcbe337",
            "typeId": "0de748bfea20",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 359,
              "column": 35
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.restoreMessage(message)",
            "usageType": "local",
            "sourceText": "AnthropicMessage"
          },
          {
            "id": "da4c6a66",
            "typeId": "0de748bfea20",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 23,
              "column": 77
            },
            "context": "return",
            "contextDetails": "AnthropicMessage.fromMessageParam",
            "usageType": "local",
            "sourceText": "AnthropicMessage"
          }
        ]
      },
      {
        "id": "491e4629418c",
        "name": "AnthropicSettings",
        "kind": "type",
        "definition": "z.infer<typeof AnthropicSettingsSchema>",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
        "filename": "AnthropicV1Schema.ts",
        "location": {
          "file": "src/schemas/AnthropicV1Schema.ts",
          "line": 86,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "80d9f1b17c3a",
        "name": "AnthropicV1Export",
        "kind": "type",
        "definition": "z.infer<typeof AnthropicV1Schema>",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.ts",
        "filename": "AnthropicV1Schema.ts",
        "location": {
          "file": "src/schemas/AnthropicV1Schema.ts",
          "line": 87,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "284ed8db4b8b",
        "name": "z",
        "kind": "import",
        "definition": "import { z } from 'zod'",
        "fullPath": "node_modules/zod",
        "filename": "zod",
        "location": {
          "file": "scripts/zod-anthropic-validator-poc.js",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/scripts/zod-anthropic-validator-poc.js",
        "isLocal": false,
        "references": []
      },
      {
        "id": "ac91031f8503",
        "name": "ConversationData",
        "kind": "interface",
        "definition": "interface ConversationData {\n  manager: ConversationManager;\n  vendorName: string;\n  modelId: string;\n  localId: string;\n  createdAt: Date;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "filename": "ConversationService.ts",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 25,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "090b16af00f5",
        "name": "OpenAIConversationManager",
        "kind": "import",
        "definition": "import { OpenAIConversationManager } from '../managers/OpenAIConversationManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/managers/OpenAIConversationManager.js",
        "filename": "OpenAIConversationManager.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3a15f0ec2316",
        "name": "ModelRepository",
        "kind": "import",
        "definition": "import { ModelRepository } from '../repositories/ModelRepository.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.js",
        "filename": "ModelRepository.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 11,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "2cad78f1",
            "typeId": "3a15f0ec2316",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 39,
              "column": 28
            },
            "context": "property",
            "contextDetails": "ConversationService.modelRepository",
            "usageType": "local",
            "sourceText": "ModelRepository"
          }
        ]
      },
      {
        "id": "e08b2357c270",
        "name": "conversations",
        "kind": "import",
        "definition": "import { conversations } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/ConversationRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "b2bb70025740",
        "name": "messages",
        "kind": "import",
        "definition": "import { messages } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/MessageRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "b45861e97438",
        "name": "fileAttachments",
        "kind": "import",
        "definition": "import { fileAttachments } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/MessageRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3b84ad27378d",
        "name": "and",
        "kind": "import",
        "definition": "import { and } from 'drizzle-orm'",
        "fullPath": "node_modules/drizzle-orm",
        "filename": "drizzle-orm",
        "location": {
          "file": "src/repositories/ConversationRepository.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "40f4a2cad4bf",
        "name": "desc",
        "kind": "import",
        "definition": "import { desc } from 'drizzle-orm'",
        "fullPath": "node_modules/drizzle-orm",
        "filename": "drizzle-orm",
        "location": {
          "file": "src/repositories/MessageRepository.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "3b4bfef900c6",
        "name": "sql",
        "kind": "import",
        "definition": "import { sql } from 'drizzle-orm'",
        "fullPath": "node_modules/drizzle-orm",
        "filename": "drizzle-orm",
        "location": {
          "file": "src/repositories/FileAttachmentRepository.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "a9c126025728",
        "name": "SettingsService",
        "kind": "import",
        "definition": "import { SettingsService } from '../SettingsService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/SettingsService.js",
        "filename": "SettingsService.js",
        "location": {
          "file": "src/services/ConversationService.ts",
          "line": 19,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/ConversationService.ts",
        "isLocal": true,
        "references": [
          {
            "id": "e83ecd19",
            "typeId": "a9c126025728",
            "location": {
              "file": "src/services/ConversationService.ts",
              "line": 41,
              "column": 28
            },
            "context": "property",
            "contextDetails": "ConversationService.settingsService",
            "usageType": "local",
            "sourceText": "SettingsService"
          }
        ]
      },
      {
        "id": "d99d10aca44a",
        "name": "BackupInfo",
        "kind": "interface",
        "definition": "interface BackupInfo {\n  filename: string;\n  fullPath: string;\n  timestamp: Date;\n  sizeBytes: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/DatabaseBackupService.ts",
        "filename": "DatabaseBackupService.ts",
        "location": {
          "file": "src/services/DatabaseBackupService.ts",
          "line": 10,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "46d5784f",
            "typeId": "d99d10aca44a",
            "location": {
              "file": "src/services/DatabaseBackupService.ts",
              "line": 96,
              "column": 50
            },
            "context": "return",
            "contextDetails": "DatabaseBackupService.listBackups",
            "usageType": "local",
            "sourceText": "BackupInfo[]"
          }
        ]
      },
      {
        "id": "c085ea81f454",
        "name": "MigrationStats",
        "kind": "interface",
        "definition": "interface MigrationStats {\n  totalFiles: number;\n  migrated: number;\n  skipped: number;\n  failed: number;\n  errors: Array<{ file: string; error: string }>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileMigrationService.ts",
        "filename": "FileMigrationService.ts",
        "location": {
          "file": "src/services/FileMigrationService.ts",
          "line": 15,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "745ab6ef",
            "typeId": "c085ea81f454",
            "location": {
              "file": "src/services/FileMigrationService.ts",
              "line": 28,
              "column": 18
            },
            "context": "property",
            "contextDetails": "FileMigrationService.stats",
            "usageType": "local",
            "sourceText": "MigrationStats"
          },
          {
            "id": "399282d6",
            "typeId": "c085ea81f454",
            "location": {
              "file": "src/services/FileMigrationService.ts",
              "line": 230,
              "column": 24
            },
            "context": "return",
            "contextDetails": "FileMigrationService.getMigrationStats",
            "usageType": "local",
            "sourceText": "MigrationStats"
          }
        ]
      },
      {
        "id": "12e5255d6916",
        "name": "StoredFileResult",
        "kind": "interface",
        "definition": "interface StoredFileResult {\n  storedPath: string;\n  fileName: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
        "filename": "FileStorageService.ts",
        "location": {
          "file": "src/services/FileStorageService.ts",
          "line": 11,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "54f8fd81",
            "typeId": "12e5255d6916",
            "location": {
              "file": "src/services/FileStorageService.ts",
              "line": 16,
              "column": 49
            },
            "context": "extends",
            "contextDetails": "StoredFileWithMetadata",
            "usageType": "local",
            "sourceText": "StoredFileResult"
          }
        ]
      },
      {
        "id": "77a90571765c",
        "name": "StoredFileWithMetadata",
        "kind": "interface",
        "definition": "interface StoredFileWithMetadata extends StoredFileResult {\n  originalPath: string;\n  fileSize: number;\n  lineCount: number;\n  fileExtension: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
        "filename": "FileStorageService.ts",
        "location": {
          "file": "src/services/FileStorageService.ts",
          "line": 16,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "extends": [
          "StoredFileResult"
        ],
        "references": [
          {
            "id": "7a8450d1",
            "typeId": "77a90571765c",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 580,
              "column": 22
            },
            "context": "parameter",
            "contextDetails": "AnthropicConversationManager.sendMessageWithAttachments(attachments)",
            "usageType": "local",
            "sourceText": "StoredFileWithMetadata[]"
          },
          {
            "id": "3f6a17e8",
            "typeId": "77a90571765c",
            "location": {
              "file": "src/managers/ConversationManager.ts",
              "line": 75,
              "column": 18
            },
            "context": "parameter",
            "contextDetails": "ConversationManager.sendMessageWithAttachments(attachments)",
            "usageType": "local",
            "sourceText": "StoredFileWithMetadata[]"
          },
          {
            "id": "91902e23",
            "typeId": "77a90571765c",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 318,
              "column": 22
            },
            "context": "parameter",
            "contextDetails": "GeminiConversationManager.sendMessageWithAttachments(attachments)",
            "usageType": "local",
            "sourceText": "StoredFileWithMetadata[]"
          },
          {
            "id": "fe556e95",
            "typeId": "77a90571765c",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 341,
              "column": 22
            },
            "context": "parameter",
            "contextDetails": "OpenAIConversationManager.sendMessageWithAttachments(attachments)",
            "usageType": "local",
            "sourceText": "StoredFileWithMetadata[]"
          }
        ]
      },
      {
        "id": "3676027b7da2",
        "name": "FileStorageStats",
        "kind": "interface",
        "definition": "interface FileStorageStats {\n  filesDeleted: number;\n  errors: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/FileStorageService.ts",
        "filename": "FileStorageService.ts",
        "location": {
          "file": "src/services/FileStorageService.ts",
          "line": 23,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "0fee3b737e20",
        "name": "UrlEnrichmentOptions",
        "kind": "interface",
        "definition": "interface UrlEnrichmentOptions {\n  timeout?: number;\n  userAgent?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
        "filename": "UrlEnrichmentService.ts",
        "location": {
          "file": "src/services/UrlEnrichmentService.ts",
          "line": 11,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "9271b855",
            "typeId": "0fee3b737e20",
            "location": {
              "file": "src/services/UrlEnrichmentService.ts",
              "line": 32,
              "column": 14
            },
            "context": "parameter",
            "contextDetails": "UrlEnrichmentService.enrichUrl(options)",
            "usageType": "local",
            "sourceText": "UrlEnrichmentOptions"
          },
          {
            "id": "774a8142",
            "typeId": "0fee3b737e20",
            "location": {
              "file": "src/services/UrlEnrichmentService.ts",
              "line": 121,
              "column": 14
            },
            "context": "parameter",
            "contextDetails": "UrlEnrichmentService.enrichUrls(options)",
            "usageType": "local",
            "sourceText": "UrlEnrichmentOptions"
          }
        ]
      },
      {
        "id": "673c8af76ace",
        "name": "fetch",
        "kind": "import",
        "definition": "import fetch from 'node-fetch'",
        "fullPath": "node_modules/node-fetch",
        "filename": "node-fetch",
        "location": {
          "file": "src/services/UrlEnrichmentService.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "9d46bac89174",
        "name": "WebSearchResult",
        "kind": "import",
        "definition": "import { WebSearchResult } from '../components/ui/WebSearchDisplay.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.js",
        "filename": "WebSearchDisplay.js",
        "location": {
          "file": "src/utils/OpenAIContentProcessor.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
        "isLocal": true,
        "references": [
          {
            "id": "de8f9f37",
            "typeId": "9d46bac89174",
            "location": {
              "file": "src/components/ui/WebSearchDisplay.tsx",
              "line": 17,
              "column": 12
            },
            "context": "property",
            "contextDetails": "WebSearchDisplayProps.results",
            "usageType": "local",
            "sourceText": "WebSearchResult[]"
          },
          {
            "id": "345e6f01",
            "typeId": "9d46bac89174",
            "location": {
              "file": "src/services/UrlEnrichmentService.ts",
              "line": 211,
              "column": 69
            },
            "context": "return",
            "contextDetails": "UrlEnrichmentService.createFallbackResult",
            "usageType": "local",
            "sourceText": "WebSearchResult"
          },
          {
            "id": "76b8945a",
            "typeId": "9d46bac89174",
            "location": {
              "file": "src/utils/GeminiContentProcessor.ts",
              "line": 150,
              "column": 23
            },
            "context": "parameter",
            "contextDetails": "GeminiContentProcessor.addInlineCitations(enrichedResults)",
            "usageType": "local",
            "sourceText": "WebSearchResult[]"
          },
          {
            "id": "432f01d8",
            "typeId": "9d46bac89174",
            "location": {
              "file": "src/utils/GeminiContentProcessor.ts",
              "line": 284,
              "column": 14
            },
            "context": "parameter",
            "contextDetails": "GeminiContentProcessor.generateWebSearchHTML(results)",
            "usageType": "local",
            "sourceText": "WebSearchResult[]"
          },
          {
            "id": "89bb0875",
            "typeId": "9d46bac89174",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 362,
              "column": 79
            },
            "context": "return",
            "contextDetails": "OpenAIContentProcessor.transformWebSearchSources",
            "usageType": "local",
            "sourceText": "WebSearchResult[]"
          }
        ]
      },
      {
        "id": "cd2b4a2844fa",
        "name": "count",
        "kind": "import",
        "definition": "import { count } from 'drizzle-orm'",
        "fullPath": "node_modules/drizzle-orm",
        "filename": "drizzle-orm",
        "location": {
          "file": "src/repositories/ConversationRepository.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "b554f79d4d0d",
        "name": "max",
        "kind": "import",
        "definition": "import { max } from 'drizzle-orm'",
        "fullPath": "node_modules/drizzle-orm",
        "filename": "drizzle-orm",
        "location": {
          "file": "src/repositories/MessageRepository.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/MessageRepository.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "95759ce4f8f7",
        "name": "ConversationRecord",
        "kind": "import",
        "definition": "import { ConversationRecord } from '../database/schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/database/schema.js",
        "filename": "schema.js",
        "location": {
          "file": "src/repositories/ConversationRepository.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
        "isLocal": true,
        "references": [
          {
            "id": "7fd2a887",
            "typeId": "95759ce4f8f7",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 101,
              "column": 49
            },
            "context": "parameter",
            "contextDetails": "ConversationRepository.transformToConversation(record)",
            "usageType": "local",
            "sourceText": "ConversationRecord"
          },
          {
            "id": "10fa8586",
            "typeId": "95759ce4f8f7",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 123,
              "column": 47
            },
            "context": "parameter",
            "contextDetails": "ConversationRepository.transformToConversationSync(record)",
            "usageType": "local",
            "sourceText": "ConversationRecord"
          }
        ]
      },
      {
        "id": "25873a9b94c5",
        "name": "STARRED_CHATS_SIDEBAR_LIMIT",
        "kind": "import",
        "definition": "import { STARRED_CHATS_SIDEBAR_LIMIT } from '../config/constants.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/config/constants.js",
        "filename": "constants.js",
        "location": {
          "file": "src/repositories/ConversationRepository.ts",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "c58bf624b82b",
        "name": "RECENT_CHATS_SIDEBAR_LIMIT",
        "kind": "import",
        "definition": "import { RECENT_CHATS_SIDEBAR_LIMIT } from '../config/constants.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/config/constants.js",
        "filename": "constants.js",
        "location": {
          "file": "src/repositories/ConversationRepository.ts",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ConversationRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "c95535e69889",
        "name": "inArray",
        "kind": "import",
        "definition": "import { inArray } from 'drizzle-orm'",
        "fullPath": "node_modules/drizzle-orm",
        "filename": "drizzle-orm",
        "location": {
          "file": "src/repositories/FileAttachmentRepository.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/FileAttachmentRepository.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "852cb973c620",
        "name": "ModelMaxTokensInfo",
        "kind": "interface",
        "definition": "interface ModelMaxTokensInfo {\n  modelName: string;\n  maxTokens: number;\n  source: 'database' | 'fallback';\n  vendorData?: Record<string, any>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "filename": "ModelRepository.ts",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 11,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "0b3b8ee2e1c7",
        "name": "MIN_MAX_TOKENS",
        "kind": "import",
        "definition": "import { MIN_MAX_TOKENS } from '../constants/tokens.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/tokens.js",
        "filename": "tokens.js",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "b46e5ac72178",
        "name": "MAX_MAX_TOKENS",
        "kind": "import",
        "definition": "import { MAX_MAX_TOKENS } from '../constants/tokens.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/tokens.js",
        "filename": "tokens.js",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "5afc17e56365",
        "name": "MAX_TOKENS_CAP_UNTIL_STREAMING",
        "kind": "import",
        "definition": "import { MAX_TOKENS_CAP_UNTIL_STREAMING } from '../constants/tokens.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/constants/tokens.js",
        "filename": "tokens.js",
        "location": {
          "file": "src/repositories/ModelRepository.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/repositories/ModelRepository.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "a0e856294f03",
        "name": "isTextBlock",
        "kind": "import",
        "definition": "import { isTextBlock } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/utils/AnthropicContentBlockProcessor.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "894614b96860",
        "name": "isWebSearchToolUse",
        "kind": "import",
        "definition": "import { isWebSearchToolUse } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/utils/AnthropicContentBlockProcessor.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "09beb1570373",
        "name": "isScrapedWebCitation",
        "kind": "import",
        "definition": "import { isScrapedWebCitation } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/utils/AnthropicContentBlockProcessor.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "ad8cf342ac5e",
        "name": "isToolUse",
        "kind": "import",
        "definition": "import { isToolUse } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/utils/AnthropicContentBlockProcessor.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "6242cdcb8949",
        "name": "isToolResult",
        "kind": "import",
        "definition": "import { isToolResult } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/utils/AnthropicContentBlockProcessor.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "3fd605300251",
        "name": "isScrapedWebSearchToolResultWithArray",
        "kind": "import",
        "definition": "import { isScrapedWebSearchToolResultWithArray } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/utils/AnthropicContentBlockProcessor.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "e6b1a10e26ee",
        "name": "isSdkWebSearchToolResultWithArray",
        "kind": "import",
        "definition": "import { isSdkWebSearchToolResultWithArray } from 'utils/anthropicGuards'",
        "fullPath": "node_modules/utils/anthropicGuards",
        "filename": "anthropicGuards",
        "location": {
          "file": "src/utils/AnthropicContentBlockProcessor.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/AnthropicContentBlockProcessor.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "1b3a72d68f3a",
        "name": "TextCitation",
        "kind": "import",
        "definition": "import { TextCitation } from '@anthropic-ai/sdk/resources/messages'",
        "fullPath": "node_modules/@anthropic-ai/sdk/resources/messages",
        "filename": "messages",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "59b05fe925f6",
        "name": "UrlEnrichmentService",
        "kind": "import",
        "definition": "import { UrlEnrichmentService } from '../services/UrlEnrichmentService.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/services/UrlEnrichmentService.js",
        "filename": "UrlEnrichmentService.js",
        "location": {
          "file": "src/utils/OpenAIContentProcessor.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "48d9ea078651",
        "name": "MarkdownLink",
        "kind": "interface",
        "definition": "interface MarkdownLink {\n  text: string;\n  url: string;\n  fullMatch: string;\n  startIndex: number;\n  endIndex: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/OpenAIContentProcessor.ts",
        "filename": "OpenAIContentProcessor.ts",
        "location": {
          "file": "src/utils/OpenAIContentProcessor.ts",
          "line": 15,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "jsdocDescription": "Processor for handling OpenAI ResponseOutputText content blocks\nand converting URLCitation annotations into inline citation lozenges",
        "references": [
          {
            "id": "5bd8f7dd",
            "typeId": "48d9ea078651",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 30,
              "column": 52
            },
            "context": "return",
            "contextDetails": "OpenAIContentProcessor.parseMarkdownLinks",
            "usageType": "local",
            "sourceText": "MarkdownLink[]"
          },
          {
            "id": "676e0891",
            "typeId": "48d9ea078651",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 55,
              "column": 20
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.findLinksToRemove(markdownLinks)",
            "usageType": "local",
            "sourceText": "MarkdownLink[]"
          },
          {
            "id": "01d67b54",
            "typeId": "48d9ea078651",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 57,
              "column": 6
            },
            "context": "return",
            "contextDetails": "OpenAIContentProcessor.findLinksToRemove",
            "usageType": "local",
            "sourceText": "MarkdownLink[]"
          },
          {
            "id": "8fa37ef9",
            "typeId": "48d9ea078651",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 96,
              "column": 20
            },
            "context": "parameter",
            "contextDetails": "OpenAIContentProcessor.removeMatchedLinksAndAdjustCitations(linksToRemove)",
            "usageType": "local",
            "sourceText": "MarkdownLink[]"
          }
        ]
      },
      {
        "id": "634bd77779f9",
        "name": "VendorDetectionResult",
        "kind": "interface",
        "definition": "interface VendorDetectionResult {\n  isValid: boolean;\n  vendor: string;\n  error?: string;\n  confidence?: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
        "filename": "WebChatJSONValidator.ts",
        "location": {
          "file": "src/utils/WebChatJSONValidator.ts",
          "line": 8,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "b96fbbb1f41d",
        "name": "validateAnthropicV1",
        "kind": "import",
        "definition": "import { validateAnthropicV1 } from '../schemas/AnthropicV1Schema.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/schemas/AnthropicV1Schema.js",
        "filename": "AnthropicV1Schema.js",
        "location": {
          "file": "src/utils/WebChatJSONValidator.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/WebChatJSONValidator.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "58c6faee6d5e",
        "name": "FileDetectionResult",
        "kind": "interface",
        "definition": "interface FileDetectionResult {\n  isBinaryFile: boolean;\n  mimeType: string;\n  confidence: 'high' | 'medium' | 'low';\n  detectionMethod: 'extension' | 'content' | 'fallback';\n  fileSize?: number;\n  encoding?: string;\n  isCode: boolean;\n  languageHint: string;\n  codeConfidence: 'high' | 'medium' | 'low';\n  codeDetectionMethod: 'mime' | 'shebang' | 'modeline' | 'extension' | 'structure';\n  isExecutable: boolean;\n  executableConfidence: 'high' | 'medium' | 'low';\n  executableReason: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
        "filename": "fileTypeDetector.ts",
        "location": {
          "file": "src/utils/fileTypeDetector.ts",
          "line": 6,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "eb005cc8",
            "typeId": "58c6faee6d5e",
            "location": {
              "file": "src/utils/fileTypeDetector.ts",
              "line": 224,
              "column": 48
            },
            "context": "return",
            "contextDetails": "FileTypeDetector.detectByExtension",
            "usageType": "local",
            "sourceText": "FileDetectionResult"
          }
        ]
      },
      {
        "id": "65a3b7519140",
        "name": "mimeTypes",
        "kind": "import",
        "definition": "import mimeTypes from 'mime-types'",
        "fullPath": "node_modules/mime-types",
        "filename": "mime-types",
        "location": {
          "file": "src/utils/fileTypeDetector.ts",
          "line": 1,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "c5989a5a3560",
        "name": "fileTypeFromFile",
        "kind": "import",
        "definition": "import { fileTypeFromFile } from 'file-type'",
        "fullPath": "node_modules/file-type",
        "filename": "file-type",
        "location": {
          "file": "src/utils/fileTypeDetector.ts",
          "line": 2,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "4ad497b7e153",
        "name": "isBinaryFile",
        "kind": "import",
        "definition": "import { isBinaryFile } from 'isbinaryfile'",
        "fullPath": "node_modules/isbinaryfile",
        "filename": "isbinaryfile",
        "location": {
          "file": "src/utils/fileTypeDetector.ts",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "ad27d8833235",
        "name": "FileValidationResult",
        "kind": "interface",
        "definition": "interface FileValidationResult {\n  isValid: boolean;\n  error?: string;\n  fileInfo?: {\n    name: string;\n    size: number;\n    mimeType: string;\n    isText: boolean;\n    languageHint?: string;\n  };\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
        "filename": "fileValidation.ts",
        "location": {
          "file": "src/utils/fileValidation.ts",
          "line": 8,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "03e4eb4e2e45",
        "name": "VendorLimits",
        "kind": "interface",
        "definition": "interface VendorLimits {\n  maxFileSize: number;\n  supportedMimeTypes: string[];\n  allowBinaryFiles: boolean;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
        "filename": "fileValidation.ts",
        "location": {
          "file": "src/utils/fileValidation.ts",
          "line": 20,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "203b06b7",
            "typeId": "03e4eb4e2e45",
            "location": {
              "file": "src/utils/fileValidation.ts",
              "line": 78,
              "column": 23
            },
            "context": "variable",
            "contextDetails": "DEFAULT_LIMITS",
            "usageType": "local",
            "sourceText": "VendorLimits"
          },
          {
            "id": "5ad719f8",
            "typeId": "03e4eb4e2e45",
            "location": {
              "file": "src/utils/fileValidation.ts",
              "line": 197,
              "column": 37
            },
            "context": "return",
            "contextDetails": "FileValidationService.getVendorLimits",
            "usageType": "local",
            "sourceText": "VendorLimits"
          }
        ]
      },
      {
        "id": "abde79cdfd4f",
        "name": "FileTypeDetector",
        "kind": "import",
        "definition": "import { FileTypeDetector } from './fileTypeDetector.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileTypeDetector.js",
        "filename": "fileTypeDetector.js",
        "location": {
          "file": "src/utils/fileValidation.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/utils/fileValidation.ts",
        "isLocal": true,
        "references": [
          {
            "id": "77a368da",
            "typeId": "abde79cdfd4f",
            "location": {
              "file": "src/utils/fileValidation.ts",
              "line": 85,
              "column": 29
            },
            "context": "property",
            "contextDetails": "FileValidationService.fileTypeDetector",
            "usageType": "local",
            "sourceText": "FileTypeDetector"
          }
        ]
      },
      {
        "id": "3e36fe65bfa4",
        "name": "unified",
        "kind": "import",
        "definition": "import { unified } from 'unified'",
        "fullPath": "node_modules/unified",
        "filename": "unified",
        "location": {
          "file": "tests/poc/unified-poc.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "646a01c77b85",
        "name": "remarkParse",
        "kind": "import",
        "definition": "import remarkParse from 'remark-parse'",
        "fullPath": "node_modules/remark-parse",
        "filename": "remark-parse",
        "location": {
          "file": "tests/poc/unified-poc.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "5c950a28c709",
        "name": "remarkGfm",
        "kind": "import",
        "definition": "import remarkGfm from 'remark-gfm'",
        "fullPath": "node_modules/remark-gfm",
        "filename": "remark-gfm",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "cb7de1e45ee2",
        "name": "remarkRehype",
        "kind": "import",
        "definition": "import remarkRehype from 'remark-rehype'",
        "fullPath": "node_modules/remark-rehype",
        "filename": "remark-rehype",
        "location": {
          "file": "tests/poc/unified-poc.ts",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "4ec39257bd50",
        "name": "rehypeRaw",
        "kind": "import",
        "definition": "import rehypeRaw from 'rehype-raw'",
        "fullPath": "node_modules/rehype-raw",
        "filename": "rehype-raw",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "48168d80c404",
        "name": "defaultSchema",
        "kind": "import",
        "definition": "import { defaultSchema } from 'rehype-sanitize'",
        "fullPath": "node_modules/rehype-sanitize",
        "filename": "rehype-sanitize",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "a046fcc6f7ae",
        "name": "rehypeSanitize",
        "kind": "import",
        "definition": "import rehypeSanitize from 'rehype-sanitize'",
        "fullPath": "node_modules/rehype-sanitize",
        "filename": "rehype-sanitize",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "867b33e1735c",
        "name": "rehypeStringify",
        "kind": "import",
        "definition": "import rehypeStringify from 'rehype-stringify'",
        "fullPath": "node_modules/rehype-stringify",
        "filename": "rehype-stringify",
        "location": {
          "file": "tests/poc/unified-poc.ts",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "b5a989c799b8",
        "name": "he",
        "kind": "import",
        "definition": "import he from 'he'",
        "fullPath": "node_modules/he",
        "filename": "he",
        "location": {
          "file": "tests/poc/unified-poc.ts",
          "line": 11,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/tests/poc/unified-poc.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "ec32878eaba8",
        "name": "ScrapedServerToolUseBlock",
        "kind": "interface",
        "definition": "interface ScrapedServerToolUseBlock {\n  type: \"server_tool_use\";\n  name: \"web_search\";\n  id?: string;\n  input?: { query?: string };\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 37,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "e6da9edf094b",
        "name": "ScrapedWebSearchToolResult",
        "kind": "interface",
        "definition": "interface ScrapedWebSearchToolResult {\n  type: \"web_search_tool_result\";\n  id?: string;\n  content?: unknown;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 45,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "f0426884dd1d",
        "name": "ScrapedWebCitationSource",
        "kind": "interface",
        "definition": "interface ScrapedWebCitationSource {\n  title: string;\n  url: string;\n  icon_url: string;\n  source: string;\n  uuid: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 57,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "849aa67b",
            "typeId": "f0426884dd1d",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 88,
              "column": 14
            },
            "context": "property",
            "contextDetails": "ScrapedWebCitation.sources",
            "usageType": "local",
            "sourceText": "ScrapedWebCitationSource[]"
          }
        ]
      },
      {
        "id": "01cdd99c1f15",
        "name": "ScrapedWebCitationMetadata",
        "kind": "interface",
        "definition": "interface ScrapedWebCitationMetadata {\n  type: \"webpage_metadata\";\n  site_domain: string;\n  favicon_url: string;\n  site_name: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 65,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "16ffe818",
            "typeId": "01cdd99c1f15",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 86,
              "column": 15
            },
            "context": "property",
            "contextDetails": "ScrapedWebCitation.metadata",
            "usageType": "local",
            "sourceText": "ScrapedWebCitationMetadata"
          }
        ]
      },
      {
        "id": "2796451e0b04",
        "name": "ScrapedTextBlock",
        "kind": "interface",
        "definition": "interface ScrapedTextBlock {\n  start_timestamp: string;\n  stop_timestamp: string;\n  type: \"text\";\n  text: string;\n  citations: ScrapedCitation[];\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 72,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "3bd39c907c5a",
        "name": "ScrapedWebCitation",
        "kind": "interface",
        "definition": "interface ScrapedWebCitation {\n  uuid: string;\n  title: string;\n  url: string;\n  metadata: ScrapedWebCitationMetadata;\n  origin_tool_name: \"web_search\";\n  sources: ScrapedWebCitationSource[];\n  start_index: number;\n  end_index: number;\n  cited_text: string;\n  encrypted_index: string;\n  type: \"web_search_result_location\";\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 82,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "bed34cc4dc62",
        "name": "WebSearchResultLike",
        "kind": "interface",
        "definition": "interface WebSearchResultLike {\n  type?: string;\n  title?: string;\n  url?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 102,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "67904b4845af",
        "name": "AnthropicWebChatMessage",
        "kind": "interface",
        "definition": "interface AnthropicWebChatMessage {\n  uuid: string;\n  sender: 'human' | 'assistant';\n  content: AnthropicWebContentBlock[];\n  index?: number;\n  parent_message_uuid?: string;\n  created_at: string;\n  updated_at?: string;\n  truncated?: boolean;\n  stop_reason?: string;\n  attachments?: AnthropicWebAttachment[];\n  files?: AnthropicWebFile[];\n  files_v2?: AnthropicWebFileV2[];\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 117,
          "column": 2
        },
        "isLocal": true,
        "genericParameters": [],
        "jsdocDescription": "Raw Anthropic web chat message structure from exported JSON",
        "references": [
          {
            "id": "def883f1",
            "typeId": "67904b4845af",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 232,
              "column": 19
            },
            "context": "property",
            "contextDetails": "AnthropicWebConversation.chat_messages",
            "usageType": "local",
            "sourceText": "AnthropicWebChatMessage[]"
          }
        ]
      },
      {
        "id": "4b64476bfacd",
        "name": "MaybeWebTimedFields",
        "kind": "interface",
        "definition": "interface MaybeWebTimedFields {\n  start_timestamp?: ISODateTimeString | null;\n  stop_timestamp?: ISODateTimeString | null;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 134,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "1d42eaa508ff",
        "name": "AnthropicWebAttachment",
        "kind": "interface",
        "definition": "interface AnthropicWebAttachment {\n  id: string;\n  file_name: string;\n  extracted_content: string;\n  file_size?: number;\n  file_type?: string;\n  created_at?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 152,
          "column": 2
        },
        "isLocal": true,
        "genericParameters": [],
        "jsdocDescription": "Raw attachment structure from Anthropic web export",
        "references": [
          {
            "id": "0b902e90",
            "typeId": "1d42eaa508ff",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 127,
              "column": 18
            },
            "context": "property",
            "contextDetails": "AnthropicWebChatMessage.attachments",
            "usageType": "local",
            "sourceText": "AnthropicWebAttachment[]"
          }
        ]
      },
      {
        "id": "c8acb8b7027a",
        "name": "AnthropicWebFile",
        "kind": "interface",
        "definition": "interface AnthropicWebFile {\n  id?: string;\n  file_id?: string;\n  file_uuid?: string;\n  name?: string;\n  file_name?: string;\n  url?: string;\n  size?: number;\n  file_size?: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 163,
          "column": 2
        },
        "isLocal": true,
        "genericParameters": [],
        "jsdocDescription": "Raw file reference from 'files' array in Anthropic web export",
        "references": [
          {
            "id": "4b183f6b",
            "typeId": "c8acb8b7027a",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 128,
              "column": 12
            },
            "context": "property",
            "contextDetails": "AnthropicWebChatMessage.files",
            "usageType": "local",
            "sourceText": "AnthropicWebFile[]"
          }
        ]
      },
      {
        "id": "072bc62ad83b",
        "name": "AnthropicWebFileV2",
        "kind": "interface",
        "definition": "interface AnthropicWebFileV2 {\n  id?: string;\n  file_id?: string;\n  file_uuid?: string;\n  name?: string;\n  file_name?: string;\n  url?: string;\n  size?: number;\n  file_size?: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 176,
          "column": 2
        },
        "isLocal": true,
        "genericParameters": [],
        "jsdocDescription": "Raw file reference from 'files_v2' array in Anthropic web export",
        "references": [
          {
            "id": "df702aec",
            "typeId": "072bc62ad83b",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 129,
              "column": 15
            },
            "context": "property",
            "contextDetails": "AnthropicWebChatMessage.files_v2",
            "usageType": "local",
            "sourceText": "AnthropicWebFileV2[]"
          }
        ]
      },
      {
        "id": "6cd7a01ba8de",
        "name": "ProcessedFileReference",
        "kind": "interface",
        "definition": "interface ProcessedFileReference {\n  id?: string;\n  file_id?: string;\n  file_uuid?: string;\n  name?: string;\n  file_name?: string;\n  url?: string;\n  size?: number;\n  file_size?: number;\n  source_version: 'files' | 'files_v2';\n  source_index: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 191,
          "column": 2
        },
        "isLocal": true,
        "genericParameters": [],
        "jsdocDescription": "Processed file reference with deduplication metadata",
        "references": []
      },
      {
        "id": "6a324c804f31",
        "name": "ProcessedAttachment",
        "kind": "interface",
        "definition": "interface ProcessedAttachment {\n  anthropicId: string;\n  fileName: string;\n  originalFileName: string;\n  fileSize: number;\n  fileType: string;\n  content: string;\n  createdAt?: string;\n  contentSizeBytes: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 210,
          "column": 2
        },
        "isLocal": true,
        "genericParameters": [],
        "jsdocDescription": "Processed attachment with validation and safety checks",
        "references": []
      },
      {
        "id": "bfbfa032f514",
        "name": "AnthropicWebConversation",
        "kind": "interface",
        "definition": "interface AnthropicWebConversation {\n  uuid: string;\n  name: string;\n  summary?: string;\n  settings?: Record<string, unknown>;\n  current_leaf_message_uuid?: string;\n  created_at: string;\n  updated_at?: string;\n  project_uuid?: string;\n  chat_messages: AnthropicWebChatMessage[];\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 223,
          "column": 2
        },
        "isLocal": true,
        "genericParameters": [],
        "jsdocDescription": "Raw Anthropic conversation structure from exported JSON",
        "references": []
      },
      {
        "id": "112f670bc20b",
        "name": "AnthMessage",
        "kind": "type",
        "definition": "Message",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 14,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "1ecb0b1e5c95",
        "name": "AnthContentBlock",
        "kind": "type",
        "definition": "ContentBlock",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 15,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "a5fd47ad7feb",
        "name": "AnthContentBlockParam",
        "kind": "type",
        "definition": "ContentBlockParam",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 18,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "306ac581c6ee",
        "name": "AnthStopReason",
        "kind": "type",
        "definition": "StopReason",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 21,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "4497a35d40f7",
        "name": "MaybeStop",
        "kind": "type",
        "definition": "AnthStopReason | null | undefined",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 22,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "AnthStopReason",
          "null",
          "undefined"
        ],
        "references": []
      },
      {
        "id": "1bdf5955de37",
        "name": "ReqOrResBlock",
        "kind": "type",
        "definition": "AnthContentBlock | AnthContentBlockParam  | ScrapedServerToolUseBlock\n  | ScrapedWebSearchToolResult",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 25,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "AnthContentBlock",
          "AnthContentBlockParam",
          "ScrapedServerToolUseBlock",
          "ScrapedWebSearchToolResult"
        ],
        "references": []
      },
      {
        "id": "aba1aa3bdd3c",
        "name": "ResToolResult",
        "kind": "type",
        "definition": "Extract<ContentBlock, { type: \"tool_result\" }>",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 28,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "f052fdc52c3a",
        "name": "ReqToolResult",
        "kind": "type",
        "definition": "Extract<ContentBlockParam, { type: \"tool_result\" }>",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 29,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "bf3266c5ca20",
        "name": "AnyToolResult",
        "kind": "type",
        "definition": "ResToolResult | ReqToolResult",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 30,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "ResToolResult",
          "ReqToolResult"
        ],
        "references": []
      },
      {
        "id": "29725695246d",
        "name": "ResToolUse",
        "kind": "type",
        "definition": "Extract<ContentBlock, { type: \"tool_use\" }>",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 32,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "089d49045902",
        "name": "ReqToolUse",
        "kind": "type",
        "definition": "Extract<ContentBlockParam, { type: \"tool_use\" }>",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 33,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "f260eb7ddf67",
        "name": "AnyToolUse",
        "kind": "type",
        "definition": "ResToolUse | ReqToolUse",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 34,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "ResToolUse",
          "ReqToolUse"
        ],
        "references": []
      },
      {
        "id": "ffd9e13df0b7",
        "name": "AnyWebSearchToolUse",
        "kind": "type",
        "definition": "(ResToolUse | ReqToolUse) & { name: \"web_search\"; input: { query?: string } }",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 52,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "(ResToolUse",
          "ReqToolUse)",
          "{ name: \"web_search\"; input: { query?: string } }"
        ],
        "intersectionTypes": [
          "(ResToolUse",
          "ReqToolUse)",
          "{ name: \"web_search\"; input: { query?: string } }"
        ],
        "references": []
      },
      {
        "id": "e8295013aa0e",
        "name": "WebSearchToolUseAny",
        "kind": "type",
        "definition": "AnyWebSearchToolUse | ScrapedServerToolUseBlock",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 55,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "AnyWebSearchToolUse",
          "ScrapedServerToolUseBlock"
        ],
        "references": []
      },
      {
        "id": "4f4620311a4f",
        "name": "ScrapedCitation",
        "kind": "type",
        "definition": "| ScrapedWebCitation",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 80,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "ScrapedWebCitation"
        ],
        "references": [
          {
            "id": "fe741e11",
            "typeId": "4f4620311a4f",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 77,
              "column": 16
            },
            "context": "property",
            "contextDetails": "ScrapedTextBlock.citations",
            "usageType": "local",
            "sourceText": "ScrapedCitation[]"
          }
        ]
      },
      {
        "id": "36f1f263728a",
        "name": "AnthropicTextishBlock",
        "kind": "type",
        "definition": "TextBlock | ScrapedTextBlock",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 99,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "TextBlock",
          "ScrapedTextBlock"
        ],
        "references": []
      },
      {
        "id": "48247286a9a2",
        "name": "AnthropicCitationish",
        "kind": "type",
        "definition": "TextCitation | ScrapedWebCitation",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 100,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "TextCitation",
          "ScrapedWebCitation"
        ],
        "references": []
      },
      {
        "id": "4717b0b3ba60",
        "name": "ScrapedWebSearchToolResultWithArray",
        "kind": "type",
        "definition": "ScrapedWebSearchToolResult & { content: WebSearchResultLike[] }",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 108,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "intersectionTypes": [
          "ScrapedWebSearchToolResult",
          "{ content: WebSearchResultLike[] }"
        ],
        "references": []
      },
      {
        "id": "d4e746d881c1",
        "name": "ISODateTimeString",
        "kind": "type",
        "definition": "string",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 132,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "eca313ac",
            "typeId": "d4e746d881c1",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 135,
              "column": 21
            },
            "context": "property",
            "contextDetails": "MaybeWebTimedFields.start_timestamp",
            "usageType": "local",
            "sourceText": "ISODateTimeString | null"
          },
          {
            "id": "8b2430aa",
            "typeId": "d4e746d881c1",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 136,
              "column": 20
            },
            "context": "property",
            "contextDetails": "MaybeWebTimedFields.stop_timestamp",
            "usageType": "local",
            "sourceText": "ISODateTimeString | null"
          }
        ]
      },
      {
        "id": "7b10071ba178",
        "name": "AnthropicWebContentBlock",
        "kind": "type",
        "definition": "( | AnthropicTextishBlock\n   | ScrapedServerToolUseBlock\n   | ScrapedWebSearchToolResult\n   | AnthContentBlock\n   | AnthContentBlockParam ) & MaybeWebTimedFields",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "filename": "anthropic.ts",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 142,
          "column": 2
        },
        "isLocal": true,
        "genericParameters": [],
        "unionTypes": [
          "(",
          "AnthropicTextishBlock",
          "ScrapedServerToolUseBlock",
          "ScrapedWebSearchToolResult",
          "AnthContentBlock",
          "AnthContentBlockParam )",
          "MaybeWebTimedFields"
        ],
        "intersectionTypes": [
          "(",
          "AnthropicTextishBlock",
          "ScrapedServerToolUseBlock",
          "ScrapedWebSearchToolResult",
          "AnthContentBlock",
          "AnthContentBlockParam )",
          "MaybeWebTimedFields"
        ],
        "jsdocDescription": "Content block structure from Anthropic web exports\nCan be either SDK-like or scraped content",
        "references": [
          {
            "id": "ed1a30f6",
            "typeId": "7b10071ba178",
            "location": {
              "file": "src/types/anthropic.ts",
              "line": 120,
              "column": 13
            },
            "context": "property",
            "contextDetails": "AnthropicWebChatMessage.content",
            "usageType": "local",
            "sourceText": "AnthropicWebContentBlock[]"
          }
        ]
      },
      {
        "id": "399c02e7dd9d",
        "name": "Message",
        "kind": "import",
        "definition": "import { Message } from '@anthropic-ai/sdk/resources/messages'",
        "fullPath": "node_modules/@anthropic-ai/sdk/resources/messages",
        "filename": "messages",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "isLocal": false,
        "references": [
          {
            "id": "3854ee50",
            "typeId": "399c02e7dd9d",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 279,
              "column": 20
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.getMessages",
            "usageType": "imported",
            "sourceText": "Message[]"
          },
          {
            "id": "5fe409ec",
            "typeId": "399c02e7dd9d",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 200,
              "column": 20
            },
            "context": "return",
            "contextDetails": "GeminiConversationManager.getMessages",
            "usageType": "imported",
            "sourceText": "Message[]"
          },
          {
            "id": "4290cfdf",
            "typeId": "399c02e7dd9d",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 209,
              "column": 20
            },
            "context": "return",
            "contextDetails": "OpenAIConversationManager.getMessages",
            "usageType": "imported",
            "sourceText": "Message[]"
          },
          {
            "id": "8da1bd85",
            "typeId": "399c02e7dd9d",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 11,
              "column": 39
            },
            "context": "extends",
            "contextDetails": "AnthropicMessage",
            "usageType": "imported",
            "sourceText": "Message<Anthropic.Messages.MessageParam>"
          },
          {
            "id": "5ada114a",
            "typeId": "399c02e7dd9d",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "GeminiMessage",
            "usageType": "imported",
            "sourceText": "Message<Content>"
          },
          {
            "id": "8ce9b020",
            "typeId": "399c02e7dd9d",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "OpenAIMessage",
            "usageType": "imported",
            "sourceText": "Message<OpenAI.Responses.EasyInputMessage>"
          },
          {
            "id": "777de757",
            "typeId": "399c02e7dd9d",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 32,
              "column": 15
            },
            "context": "property",
            "contextDetails": "Conversation.messages",
            "usageType": "imported",
            "sourceText": "Message[]"
          }
        ]
      },
      {
        "id": "bc0e1e0a481d",
        "name": "ContentBlock",
        "kind": "import",
        "definition": "import { ContentBlock } from '@anthropic-ai/sdk/resources/messages'",
        "fullPath": "node_modules/@anthropic-ai/sdk/resources/messages",
        "filename": "messages",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "e250b63ea6e8",
        "name": "ContentBlockParam",
        "kind": "import",
        "definition": "import { ContentBlockParam } from '@anthropic-ai/sdk/resources/messages'",
        "fullPath": "node_modules/@anthropic-ai/sdk/resources/messages",
        "filename": "messages",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "c8779d347567",
        "name": "TextBlock",
        "kind": "import",
        "definition": "import { TextBlock } from '@anthropic-ai/sdk/resources/messages'",
        "fullPath": "node_modules/@anthropic-ai/sdk/resources/messages",
        "filename": "messages",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "d34e07b943ee",
        "name": "StopReason",
        "kind": "import",
        "definition": "import { StopReason } from '@anthropic-ai/sdk/resources/messages'",
        "fullPath": "node_modules/@anthropic-ai/sdk/resources/messages",
        "filename": "messages",
        "location": {
          "file": "src/types/anthropic.ts",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/anthropic.ts",
        "isLocal": false,
        "references": []
      },
      {
        "id": "752d654bffb5",
        "name": "Message",
        "kind": "interface",
        "definition": "interface Message {\n  id: string;\n  role: string;\n  content: string;\n  timestamp: Date;\n  inputTokens?: number;\n  outputTokens?: number;\n  totalTokens?: number;\n  fileAttachments?: FileAttachmentRecord[];\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
        "filename": "conversation.ts",
        "location": {
          "file": "src/types/conversation.ts",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "c6858441",
            "typeId": "752d654bffb5",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 279,
              "column": 20
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "25d351ca",
            "typeId": "752d654bffb5",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 200,
              "column": 20
            },
            "context": "return",
            "contextDetails": "GeminiConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "5d714d53",
            "typeId": "752d654bffb5",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 209,
              "column": 20
            },
            "context": "return",
            "contextDetails": "OpenAIConversationManager.getMessages",
            "usageType": "local",
            "sourceText": "Message[]"
          },
          {
            "id": "95e666ce",
            "typeId": "752d654bffb5",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 11,
              "column": 39
            },
            "context": "extends",
            "contextDetails": "AnthropicMessage",
            "usageType": "local",
            "sourceText": "Message<Anthropic.Messages.MessageParam>"
          },
          {
            "id": "5acb55f6",
            "typeId": "752d654bffb5",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "GeminiMessage",
            "usageType": "local",
            "sourceText": "Message<Content>"
          },
          {
            "id": "ac2bad78",
            "typeId": "752d654bffb5",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "OpenAIMessage",
            "usageType": "local",
            "sourceText": "Message<OpenAI.Responses.EasyInputMessage>"
          },
          {
            "id": "744f263a",
            "typeId": "752d654bffb5",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 32,
              "column": 15
            },
            "context": "property",
            "contextDetails": "Conversation.messages",
            "usageType": "local",
            "sourceText": "Message[]"
          }
        ]
      },
      {
        "id": "bcfbd947a185",
        "name": "Conversation",
        "kind": "interface",
        "definition": "interface Conversation {\n  localId: string;\n  vendorId: string;\n  modelId: string;\n  name: string;\n  vendorData?: object;\n  createdAt: Date;\n  updatedAt: Date;\n  modelMaxTokens?: number;\n  isStarred: boolean;\n  vendorConversationId?: string;\n  vendorProjectId?: string;\n  localProjectId?: string;\n  vendorName: string;\n  messages: Message[];\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
        "filename": "conversation.ts",
        "location": {
          "file": "src/types/conversation.ts",
          "line": 18,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "f349021f",
            "typeId": "bcfbd947a185",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 123,
              "column": 68
            },
            "context": "return",
            "contextDetails": "ConversationRepository.transformToConversationSync",
            "usageType": "local",
            "sourceText": "Conversation"
          },
          {
            "id": "1c2a34c6",
            "typeId": "bcfbd947a185",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 145,
              "column": 42
            },
            "context": "return",
            "contextDetails": "ConversationRepository.create",
            "usageType": "local",
            "sourceText": "Conversation"
          },
          {
            "id": "014c5a19",
            "typeId": "bcfbd947a185",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 44,
              "column": 26
            },
            "context": "property",
            "contextDetails": "ConversationState.currentConversation",
            "usageType": "local",
            "sourceText": "Conversation | null"
          }
        ]
      },
      {
        "id": "fdd522975b80",
        "name": "ConversationAggregates",
        "kind": "interface",
        "definition": "interface ConversationAggregates {\n  messageCount: number;\n  totalTokens: number;\n  fileCount: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
        "filename": "conversation.ts",
        "location": {
          "file": "src/types/conversation.ts",
          "line": 35,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "e216d112bfa5",
        "name": "ConversationState",
        "kind": "interface",
        "definition": "interface ConversationState {\n  currentConversation: Conversation | null;\n  selectedModel: Model;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
        "filename": "conversation.ts",
        "location": {
          "file": "src/types/conversation.ts",
          "line": 43,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "e31b490c4428",
        "name": "ConversationWithAggregates",
        "kind": "type",
        "definition": "Conversation & ConversationAggregates",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation.ts",
        "filename": "conversation.ts",
        "location": {
          "file": "src/types/conversation.ts",
          "line": 41,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "intersectionTypes": [
          "Conversation",
          "ConversationAggregates"
        ],
        "references": []
      },
      {
        "id": "4e63f27a2d03",
        "name": "ConversationAPI",
        "kind": "interface",
        "definition": "interface ConversationAPI {\n  create: (modelId: string) => Promise<Conversation>;\n  sendMessage: (conversationId: string, messageText: string, filePaths?: string[]) => Promise<{\n    success: boolean;\n    response?: string;\n    error?: string;\n    fileResults?: {\n      validFiles: string[];\n      invalidFiles: Array<{ path: string; name: string; error: string }>;\n    };\n  }>;\n  getHistory: (conversationId: string) => Promise<{ success: boolean; history?: any[]; error?: string }>;\n  clear: (conversationId: string) => Promise<{ success: boolean; error?: string }>;\n  delete: (conversationId: string) => Promise<{ success: boolean; error?: string }>;\n  deleteMultiple: (conversationIds: string[]) => Promise<{ success: boolean; error?: string; deletedCount?: number }>;\n  updateName: (conversationId: string, name: string) => Promise<{ success: boolean; error?: string }>;\n  getAll: (limit?: number, offset?: number) => Promise<{ success: boolean; conversations?: any[]; total?: number; error?: string }>;\n  getById: (conversationId: string) => Promise<Conversation>;\n  getTokens: (conversationId: string) => Promise<{ success: boolean; tokens?: { inputTokens: number; outputTokens: number; totalTokens: number }; error?: string }>;\n  toggleStar: (conversationId: string) => Promise<{ success: boolean; isStarred?: boolean; error?: string }>;\n  getStarred: (limit?: number) => Promise<{ success: boolean; conversations?: any[]; error?: string }>;\n  getRecent: (limit?: number) => Promise<{ success: boolean; conversations?: any[]; error?: string }>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
        "filename": "electron.ts",
        "location": {
          "file": "src/types/electron.ts",
          "line": 8,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "2419dd8d",
            "typeId": "4e63f27a2d03",
            "location": {
              "file": "src/types/electron.ts",
              "line": 52,
              "column": 17
            },
            "context": "property",
            "contextDetails": "ElectronAPI.conversation",
            "usageType": "local",
            "sourceText": "ConversationAPI"
          }
        ]
      },
      {
        "id": "a3415e6dde6a",
        "name": "ElectronAPI",
        "kind": "interface",
        "definition": "interface ElectronAPI {\n  getSupportedVendors: () => Promise<string[]>;\n  addApiKey: (apiKey: { name: string; vendor: string; key: string }) => Promise<Result<ApiKey>>;\n  getApiKeys: () => Promise<Result<ApiKey[]>>;\n  removeApiKey: (id: string) => Promise<Result<void>>;\n  getApiKeyById: (id: string) => Promise<Result<ApiKey | undefined>>;\n  getShowTurnCounter: () => Promise<Result<boolean>>;\n  setShowTurnCounter: (show: boolean) => Promise<Result<void>>;\n  getLoggingConfig: () => Promise<Result<LoggingConfig>>;\n  setLoggingConfig: (loggingConfig: LoggingConfig) => Promise<Result<void>>;\n  getApiLoggingEnabled: () => Promise<Result<boolean>>;\n  setApiLoggingEnabled: (enabled: boolean) => Promise<Result<void>>;\n  getLogContent: (logKey: string) => Promise<Result<string>>;\n  getLogStats: (logKey: string) => Promise<Result<{ entryCount: number; fileSize: number }>>;\n  getAvailableLogKeys: () => Promise<Result<string[]>>;\n  conversation: ConversationAPI;\n  showOpenDialog: () => Promise<any>;\n  getFileStats: (filePath: string) => Promise<any>;\n  getPathForFile: (file: File) => string;\n  import: {\n    webChat: (filePath: string) => Promise<any>;\n  };\n  shell?: {\n    openExternal: (url: string) => Promise<void>;\n  };\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
        "filename": "electron.ts",
        "location": {
          "file": "src/types/electron.ts",
          "line": 32,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "36678f05",
            "typeId": "a3415e6dde6a",
            "location": {
              "file": "src/preload/preload.ts",
              "line": 9,
              "column": 20
            },
            "context": "variable",
            "contextDetails": "electronAPI",
            "usageType": "local",
            "sourceText": "ElectronAPI"
          }
        ]
      },
      {
        "id": "45bf93105ac6",
        "name": "Result",
        "kind": "import",
        "definition": "import { Result } from '../../types/result'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/result",
        "filename": "result",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": [
          {
            "id": "36428c1d",
            "typeId": "45bf93105ac6",
            "location": {
              "file": "src/types/result.ts",
              "line": 8,
              "column": 38
            },
            "context": "return",
            "contextDetails": "success",
            "usageType": "local",
            "sourceText": "Result<T>"
          },
          {
            "id": "879688a7",
            "typeId": "45bf93105ac6",
            "location": {
              "file": "src/types/result.ts",
              "line": 12,
              "column": 52
            },
            "context": "return",
            "contextDetails": "failure",
            "usageType": "local",
            "sourceText": "Result<T>"
          },
          {
            "id": "c17c93b8",
            "typeId": "45bf93105ac6",
            "location": {
              "file": "src/types/result.ts",
              "line": 16,
              "column": 35
            },
            "context": "parameter",
            "contextDetails": "isSuccess(res)",
            "usageType": "local",
            "sourceText": "Result<T>"
          }
        ]
      },
      {
        "id": "e6c7d15026e6",
        "name": "ApiKey",
        "kind": "import",
        "definition": "import { ApiKey } from '../../types/settings'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings",
        "filename": "settings",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": [
          {
            "id": "37aee549",
            "typeId": "e6c7d15026e6",
            "location": {
              "file": "src/components/Settings/ApiKeyList.tsx",
              "line": 9,
              "column": 14
            },
            "context": "property",
            "contextDetails": "ApiKeyListProps.apiKeys",
            "usageType": "local",
            "sourceText": "ApiKey[]"
          },
          {
            "id": "539fd51e",
            "typeId": "e6c7d15026e6",
            "location": {
              "file": "src/types/settings.ts",
              "line": 22,
              "column": 14
            },
            "context": "property",
            "contextDetails": "SettingsConfig.apiKeys",
            "usageType": "local",
            "sourceText": "ApiKey[]"
          }
        ]
      },
      {
        "id": "fe119e194055",
        "name": "LoggingConfig",
        "kind": "import",
        "definition": "import { LoggingConfig } from './settings'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings",
        "filename": "settings",
        "location": {
          "file": "src/types/electron.ts",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
        "isLocal": true,
        "references": [
          {
            "id": "2617111d",
            "typeId": "fe119e194055",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 106,
              "column": 43
            },
            "context": "parameter",
            "contextDetails": "SettingsService.setLoggingConfig(loggingConfig)",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          },
          {
            "id": "d125b4a3",
            "typeId": "fe119e194055",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 131,
              "column": 40
            },
            "context": "return",
            "contextDetails": "SettingsService.getDefaultLoggingConfig",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          },
          {
            "id": "f580a6b7",
            "typeId": "fe119e194055",
            "location": {
              "file": "src/types/settings.ts",
              "line": 24,
              "column": 15
            },
            "context": "property",
            "contextDetails": "SettingsConfig.logging",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          }
        ]
      },
      {
        "id": "7b0d92413a93",
        "name": "Conversation",
        "kind": "import",
        "definition": "import { Conversation } from './conversation'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation",
        "filename": "conversation",
        "location": {
          "file": "src/types/electron.ts",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/types/electron.ts",
        "isLocal": true,
        "references": [
          {
            "id": "83997826",
            "typeId": "7b0d92413a93",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 123,
              "column": 68
            },
            "context": "return",
            "contextDetails": "ConversationRepository.transformToConversationSync",
            "usageType": "local",
            "sourceText": "Conversation"
          },
          {
            "id": "3f6cbeb1",
            "typeId": "7b0d92413a93",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 145,
              "column": 42
            },
            "context": "return",
            "contextDetails": "ConversationRepository.create",
            "usageType": "local",
            "sourceText": "Conversation"
          },
          {
            "id": "be6408dd",
            "typeId": "7b0d92413a93",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 44,
              "column": 26
            },
            "context": "property",
            "contextDetails": "ConversationState.currentConversation",
            "usageType": "local",
            "sourceText": "Conversation | null"
          }
        ]
      },
      {
        "id": "b896e54c5aba",
        "name": "Result",
        "kind": "type",
        "definition": "| { success: true; data: T }\n  | { success: false; error: string }",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/result.ts",
        "filename": "result.ts",
        "location": {
          "file": "src/types/result.ts",
          "line": 4,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [
          {
            "name": "T"
          }
        ],
        "unionTypes": [
          "{ success: true; data: T }",
          "{ success: false; error: string }"
        ],
        "references": [
          {
            "id": "b4411c66",
            "typeId": "b896e54c5aba",
            "location": {
              "file": "src/types/result.ts",
              "line": 8,
              "column": 38
            },
            "context": "return",
            "contextDetails": "success",
            "usageType": "local",
            "sourceText": "Result<T>"
          },
          {
            "id": "c4e3d62b",
            "typeId": "b896e54c5aba",
            "location": {
              "file": "src/types/result.ts",
              "line": 12,
              "column": 52
            },
            "context": "return",
            "contextDetails": "failure",
            "usageType": "local",
            "sourceText": "Result<T>"
          },
          {
            "id": "0ef8e5e3",
            "typeId": "b896e54c5aba",
            "location": {
              "file": "src/types/result.ts",
              "line": 16,
              "column": 35
            },
            "context": "parameter",
            "contextDetails": "isSuccess(res)",
            "usageType": "local",
            "sourceText": "Result<T>"
          }
        ]
      },
      {
        "id": "2fe78801cfad",
        "name": "ApiKey",
        "kind": "interface",
        "definition": "interface ApiKey {\n  id: string;\n  name: string;\n  vendor: string;\n  key: string;\n  keyPreview: string;\n  createdAt: Date;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
        "filename": "settings.ts",
        "location": {
          "file": "src/types/settings.ts",
          "line": 4,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "e3b02bce",
            "typeId": "2fe78801cfad",
            "location": {
              "file": "src/components/Settings/ApiKeyList.tsx",
              "line": 9,
              "column": 14
            },
            "context": "property",
            "contextDetails": "ApiKeyListProps.apiKeys",
            "usageType": "local",
            "sourceText": "ApiKey[]"
          },
          {
            "id": "ffa330f6",
            "typeId": "2fe78801cfad",
            "location": {
              "file": "src/types/settings.ts",
              "line": 22,
              "column": 14
            },
            "context": "property",
            "contextDetails": "SettingsConfig.apiKeys",
            "usageType": "local",
            "sourceText": "ApiKey[]"
          }
        ]
      },
      {
        "id": "16a5d59c1306",
        "name": "LoggingConfig",
        "kind": "interface",
        "definition": "interface LoggingConfig {\n  apiEnabled?: boolean;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
        "filename": "settings.ts",
        "location": {
          "file": "src/types/settings.ts",
          "line": 13,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "4fdf2908",
            "typeId": "16a5d59c1306",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 106,
              "column": 43
            },
            "context": "parameter",
            "contextDetails": "SettingsService.setLoggingConfig(loggingConfig)",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          },
          {
            "id": "b267d121",
            "typeId": "16a5d59c1306",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 131,
              "column": 40
            },
            "context": "return",
            "contextDetails": "SettingsService.getDefaultLoggingConfig",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          },
          {
            "id": "aa8cc8a0",
            "typeId": "16a5d59c1306",
            "location": {
              "file": "src/types/settings.ts",
              "line": 24,
              "column": 15
            },
            "context": "property",
            "contextDetails": "SettingsConfig.logging",
            "usageType": "local",
            "sourceText": "LoggingConfig"
          }
        ]
      },
      {
        "id": "1527ece308b8",
        "name": "SettingsConfig",
        "kind": "interface",
        "definition": "interface SettingsConfig {\n  apiKeys: ApiKey[];\n  showTurnCounter?: boolean;\n  logging?: LoggingConfig;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/settings.ts",
        "filename": "settings.ts",
        "location": {
          "file": "src/types/settings.ts",
          "line": 21,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "16cf6b48",
            "typeId": "1527ece308b8",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 41,
              "column": 32
            },
            "context": "parameter",
            "contextDetails": "SettingsService.saveSettings(config)",
            "usageType": "local",
            "sourceText": "SettingsConfig"
          },
          {
            "id": "9d09c44f",
            "typeId": "1527ece308b8",
            "location": {
              "file": "src/SettingsService.ts",
              "line": 123,
              "column": 38
            },
            "context": "return",
            "contextDetails": "SettingsService.createDefaultSettings",
            "usageType": "local",
            "sourceText": "SettingsConfig"
          }
        ]
      },
      {
        "id": "ba8b283f5a2a",
        "name": "MaybeList",
        "kind": "type",
        "definition": "ReadonlyArray<T> | undefined | null",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/utilityTypes.ts",
        "filename": "utilityTypes.ts",
        "location": {
          "file": "src/types/utilityTypes.ts",
          "line": 1,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [
          {
            "name": "T"
          }
        ],
        "unionTypes": [
          "ReadonlyArray<T>",
          "undefined",
          "null"
        ],
        "references": [
          {
            "id": "dc441f49",
            "typeId": "ba8b283f5a2a",
            "location": {
              "file": "src/types/utilityTypes.ts",
              "line": 3,
              "column": 31
            },
            "context": "parameter",
            "contextDetails": "asList(xs)",
            "usageType": "local",
            "sourceText": "MaybeList<T>"
          }
        ]
      },
      {
        "id": "a5c30e35e6c9",
        "name": "registerSettingsHandlers",
        "kind": "import",
        "definition": "import { registerSettingsHandlers } from './src/ipc/settings-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/src/ipc/settings-handlers.js",
        "filename": "settings-handlers.js",
        "location": {
          "file": "data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "910050c25411",
        "name": "setupConversationHandlers",
        "kind": "import",
        "definition": "import { setupConversationHandlers } from './src/ipc/conversation-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/src/ipc/conversation-handlers.js",
        "filename": "conversation-handlers.js",
        "location": {
          "file": "data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "df5c1940b86e",
        "name": "setupDialogHandlers",
        "kind": "import",
        "definition": "import { setupDialogHandlers } from './src/ipc/dialog-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/src/ipc/dialog-handlers.js",
        "filename": "dialog-handlers.js",
        "location": {
          "file": "data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
          "line": 11,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "1b19680829c8",
        "name": "registerImportHandlers",
        "kind": "import",
        "definition": "import { registerImportHandlers } from './src/ipc/import-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/src/ipc/import-handlers.js",
        "filename": "import-handlers.js",
        "location": {
          "file": "data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
          "line": 12,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/0a11df2f-edd9-4023-a12b-66b2fa73dfca/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "6f989b31ee88",
        "name": "registerSettingsHandlers",
        "kind": "import",
        "definition": "import { registerSettingsHandlers } from './src/ipc/settings-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/src/ipc/settings-handlers.js",
        "filename": "settings-handlers.js",
        "location": {
          "file": "data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3b47193a1333",
        "name": "setupConversationHandlers",
        "kind": "import",
        "definition": "import { setupConversationHandlers } from './src/ipc/conversation-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/src/ipc/conversation-handlers.js",
        "filename": "conversation-handlers.js",
        "location": {
          "file": "data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "047a0c909ec2",
        "name": "setupDialogHandlers",
        "kind": "import",
        "definition": "import { setupDialogHandlers } from './src/ipc/dialog-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/src/ipc/dialog-handlers.js",
        "filename": "dialog-handlers.js",
        "location": {
          "file": "data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
          "line": 11,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3aea05b8e543",
        "name": "registerImportHandlers",
        "kind": "import",
        "definition": "import { registerImportHandlers } from './src/ipc/import-handlers.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/src/ipc/import-handlers.js",
        "filename": "import-handlers.js",
        "location": {
          "file": "data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
          "line": 12,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/09/22/e0f73b37-6b4d-4cbd-929a-13906fe206c6/main.ts",
        "isLocal": true,
        "references": []
      },
      {
        "id": "21e87a09dfe9",
        "name": "React",
        "kind": "import",
        "definition": "import React from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/components/ui/WebSearchDisplay.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
        "isLocal": false,
        "references": [
          {
            "id": "97256522",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/App.tsx",
              "line": 18,
              "column": 19
            },
            "context": "variable",
            "contextDetails": "AppContent",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "aa05f1b0",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/App.tsx",
              "line": 43,
              "column": 12
            },
            "context": "variable",
            "contextDetails": "App",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "73468120",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/Chat/index.tsx",
              "line": 19,
              "column": 13
            },
            "context": "variable",
            "contextDetails": "Chat",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "d266df7b",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/Home/index.tsx",
              "line": 6,
              "column": 13
            },
            "context": "variable",
            "contextDetails": "Home",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "0a321ca8",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/Layout/index.tsx",
              "line": 11,
              "column": 13
            },
            "context": "property",
            "contextDetails": "LayoutProps.children",
            "usageType": "imported",
            "sourceText": "React.ReactNode"
          },
          {
            "id": "4e0df7c0",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/Layout/index.tsx",
              "line": 14,
              "column": 15
            },
            "context": "variable",
            "contextDetails": "Layout",
            "usageType": "imported",
            "sourceText": "React.FC<LayoutProps>"
          },
          {
            "id": "24a55ed6",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/LogViewer/index.tsx",
              "line": 10,
              "column": 18
            },
            "context": "variable",
            "contextDetails": "LogViewer",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "18ef37d8",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/RecentChats/index.tsx",
              "line": 11,
              "column": 20
            },
            "context": "variable",
            "contextDetails": "RecentChats",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "aee5c8cb",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/Settings/ApiKeyList.tsx",
              "line": 14,
              "column": 19
            },
            "context": "variable",
            "contextDetails": "ApiKeyList",
            "usageType": "imported",
            "sourceText": "React.FC<ApiKeyListProps>"
          },
          {
            "id": "d25532c5",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/Settings/ApiKeyModal.tsx",
              "line": 30,
              "column": 20
            },
            "context": "variable",
            "contextDetails": "ApiKeyModal",
            "usageType": "imported",
            "sourceText": "React.FC<ApiKeyModalProps>"
          },
          {
            "id": "8568704d",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/Settings/index.tsx",
              "line": 15,
              "column": 17
            },
            "context": "variable",
            "contextDetails": "Settings",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "79ab4035",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/StarredChats/index.tsx",
              "line": 11,
              "column": 21
            },
            "context": "variable",
            "contextDetails": "StarredChats",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "d8096e4a",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/button.tsx",
              "line": 44,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }"
          },
          {
            "id": "6c31994c",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/card.tsx",
              "line": 5,
              "column": 40
            },
            "context": "parameter",
            "contextDetails": "Card({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "b2e66ef1",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/card.tsx",
              "line": 18,
              "column": 46
            },
            "context": "parameter",
            "contextDetails": "CardHeader({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "f837f18e",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/card.tsx",
              "line": 31,
              "column": 45
            },
            "context": "parameter",
            "contextDetails": "CardTitle({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "3f864c94",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/card.tsx",
              "line": 41,
              "column": 51
            },
            "context": "parameter",
            "contextDetails": "CardDescription({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "8fa24739",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/card.tsx",
              "line": 51,
              "column": 46
            },
            "context": "parameter",
            "contextDetails": "CardAction({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "357c6e8f",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/card.tsx",
              "line": 64,
              "column": 47
            },
            "context": "parameter",
            "contextDetails": "CardContent({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "5f7cf2e6",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/card.tsx",
              "line": 74,
              "column": 46
            },
            "context": "parameter",
            "contextDetails": "CardFooter({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "47c99980",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/ChatActionMenu.tsx",
              "line": 20,
              "column": 23
            },
            "context": "variable",
            "contextDetails": "ChatActionMenu",
            "usageType": "imported",
            "sourceText": "React.FC<ChatActionMenuProps>"
          },
          {
            "id": "289be172",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/ChatSettings.tsx",
              "line": 22,
              "column": 21
            },
            "context": "variable",
            "contextDetails": "ChatSettings",
            "usageType": "imported",
            "sourceText": "React.FC<ChatSettingsProps>"
          },
          {
            "id": "bb15d428",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/CitationLozenge.tsx",
              "line": 16,
              "column": 24
            },
            "context": "variable",
            "contextDetails": "CitationLozenge",
            "usageType": "imported",
            "sourceText": "React.FC<CitationLozengeProps>"
          },
          {
            "id": "70538d11",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/ContentRenderer.tsx",
              "line": 29,
              "column": 24
            },
            "context": "variable",
            "contextDetails": "ContentRenderer",
            "usageType": "imported",
            "sourceText": "React.FC<ContentRendererProps>"
          },
          {
            "id": "40d27f3a",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/ConversationTooltip.tsx",
              "line": 8,
              "column": 13
            },
            "context": "property",
            "contextDetails": "ConversationTooltipProps.children",
            "usageType": "imported",
            "sourceText": "React.ReactNode"
          },
          {
            "id": "926f101f",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/ConversationTooltip.tsx",
              "line": 12,
              "column": 28
            },
            "context": "variable",
            "contextDetails": "ConversationTooltip",
            "usageType": "imported",
            "sourceText": "React.FC<ConversationTooltipProps>"
          },
          {
            "id": "aee12a06",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/DeleteChatModal.tsx",
              "line": 13,
              "column": 31
            },
            "context": "variable",
            "contextDetails": "DeleteChatModal",
            "usageType": "imported",
            "sourceText": "React.FC<DeleteChatModalProps>"
          },
          {
            "id": "f45db131",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/DeleteMultipleChatsModal.tsx",
              "line": 15,
              "column": 40
            },
            "context": "variable",
            "contextDetails": "DeleteMultipleChatsModal",
            "usageType": "imported",
            "sourceText": "React.FC<DeleteMultipleChatsModalProps>"
          },
          {
            "id": "467c4e10",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 9,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "Dialog({\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof DialogPrimitive.Root>"
          },
          {
            "id": "fd923ffb",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 15,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "DialogTrigger({\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof DialogPrimitive.Trigger>"
          },
          {
            "id": "f5cf8abe",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 21,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "DialogPortal({\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof DialogPrimitive.Portal>"
          },
          {
            "id": "34978d03",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 27,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "DialogClose({\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof DialogPrimitive.Close>"
          },
          {
            "id": "5e5fae9b",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 34,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "DialogOverlay({\n  className,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof DialogPrimitive.Overlay>"
          },
          {
            "id": "5df0f577",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 52,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}"
          },
          {
            "id": "3db5aa2a",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 81,
              "column": 48
            },
            "context": "parameter",
            "contextDetails": "DialogHeader({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "cfa75736",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 91,
              "column": 48
            },
            "context": "parameter",
            "contextDetails": "DialogFooter({ className, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"div\">"
          },
          {
            "id": "f92f1585",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 107,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "DialogTitle({\n  className,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof DialogPrimitive.Title>"
          },
          {
            "id": "531faf1e",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/dialog.tsx",
              "line": 120,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "DialogDescription({\n  className,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof DialogPrimitive.Description>"
          },
          {
            "id": "0325dd15",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/FileLozenge.tsx",
              "line": 38,
              "column": 20
            },
            "context": "variable",
            "contextDetails": "FileLozenge",
            "usageType": "imported",
            "sourceText": "React.FC<FileLozengeProps>"
          },
          {
            "id": "00bc87cd",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/ImportWebChatModal.tsx",
              "line": 15,
              "column": 34
            },
            "context": "variable",
            "contextDetails": "ImportWebChatModal",
            "usageType": "imported",
            "sourceText": "React.FC<ImportWebChatModalProps>"
          },
          {
            "id": "aec275d2",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/input.tsx",
              "line": 5,
              "column": 47
            },
            "context": "parameter",
            "contextDetails": "Input({ className, type, ...props })",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<\"input\">"
          },
          {
            "id": "13e2173a",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/label.tsx",
              "line": 11,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "Label({\n  className,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof LabelPrimitive.Root>"
          },
          {
            "id": "2ec311e9",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/RenameChatModal.tsx",
              "line": 13,
              "column": 31
            },
            "context": "variable",
            "contextDetails": "RenameChatModal",
            "usageType": "imported",
            "sourceText": "React.FC<RenameChatModalProps>"
          },
          {
            "id": "1b9a3f98",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 9,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "Select({\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.Root>"
          },
          {
            "id": "5fa5dd56",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 15,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectGroup({\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.Group>"
          },
          {
            "id": "678dabd1",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 21,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectValue({\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.Value>"
          },
          {
            "id": "b2472bc4",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 30,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}"
          },
          {
            "id": "6246b8aa",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 56,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.Content>"
          },
          {
            "id": "7e9a5d08",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 89,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectLabel({\n  className,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.Label>"
          },
          {
            "id": "4cb3b8b2",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 103,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectItem({\n  className,\n  children,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.Item>"
          },
          {
            "id": "dcb47efe",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 126,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectSeparator({\n  className,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.Separator>"
          },
          {
            "id": "affb4e67",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 139,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectScrollUpButton({\n  className,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>"
          },
          {
            "id": "53ea5822",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/select.tsx",
              "line": 157,
              "column": 4
            },
            "context": "parameter",
            "contextDetails": "SelectScrollDownButton({\n  className,\n  ...props\n})",
            "usageType": "imported",
            "sourceText": "React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>"
          },
          {
            "id": "2251426d",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/Toast.tsx",
              "line": 22,
              "column": 21
            },
            "context": "variable",
            "contextDetails": "Toast",
            "usageType": "imported",
            "sourceText": "React.FC<ToastProps>"
          },
          {
            "id": "0433c0d2",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/ToastContainer.tsx",
              "line": 12,
              "column": 30
            },
            "context": "variable",
            "contextDetails": "ToastContainer",
            "usageType": "imported",
            "sourceText": "React.FC<ToastContainerProps>"
          },
          {
            "id": "adf30bb1",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/TokenDisplay.tsx",
              "line": 14,
              "column": 21
            },
            "context": "variable",
            "contextDetails": "TokenDisplay",
            "usageType": "imported",
            "sourceText": "React.FC<TokenDisplayProps>"
          },
          {
            "id": "521ff792",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ui/WebSearchDisplay.tsx",
              "line": 22,
              "column": 25
            },
            "context": "variable",
            "contextDetails": "WebSearchDisplay",
            "usageType": "imported",
            "sourceText": "React.FC<WebSearchDisplayProps>"
          },
          {
            "id": "b1c39a7f",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/components/ViewChats/index.tsx",
              "line": 58,
              "column": 18
            },
            "context": "variable",
            "contextDetails": "ViewChats",
            "usageType": "imported",
            "sourceText": "React.FC"
          },
          {
            "id": "dc198b7b",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/contexts/RecentChatsContext.tsx",
              "line": 17,
              "column": 13
            },
            "context": "property",
            "contextDetails": "RecentChatsProviderProps.children",
            "usageType": "imported",
            "sourceText": "React.ReactNode"
          },
          {
            "id": "1dead7d6",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/contexts/RecentChatsContext.tsx",
              "line": 20,
              "column": 35
            },
            "context": "variable",
            "contextDetails": "RecentChatsProvider",
            "usageType": "imported",
            "sourceText": "React.FC<RecentChatsProviderProps>"
          },
          {
            "id": "a3e57856",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/contexts/StarredChatsContext.tsx",
              "line": 17,
              "column": 13
            },
            "context": "property",
            "contextDetails": "StarredChatsProviderProps.children",
            "usageType": "imported",
            "sourceText": "React.ReactNode"
          },
          {
            "id": "6ce58634",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/contexts/StarredChatsContext.tsx",
              "line": 20,
              "column": 36
            },
            "context": "variable",
            "contextDetails": "StarredChatsProvider",
            "usageType": "imported",
            "sourceText": "React.FC<StarredChatsProviderProps>"
          },
          {
            "id": "a965d7e1",
            "typeId": "21e87a09dfe9",
            "location": {
              "file": "src/contexts/ToastContext.tsx",
              "line": 23,
              "column": 29
            },
            "context": "variable",
            "contextDetails": "ToastProvider",
            "usageType": "imported",
            "sourceText": "React.FC<ToastProviderProps>"
          }
        ]
      },
      {
        "id": "757ed3ae4648",
        "name": "HashRouter",
        "kind": "import",
        "definition": "import { HashRouter } from 'react-router-dom'",
        "fullPath": "node_modules/react-router-dom",
        "filename": "react-router-dom",
        "location": {
          "file": "src/App.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "e9cf08e26d95",
        "name": "Routes",
        "kind": "import",
        "definition": "import { Routes } from 'react-router-dom'",
        "fullPath": "node_modules/react-router-dom",
        "filename": "react-router-dom",
        "location": {
          "file": "src/App.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "6f24be2b0f08",
        "name": "Route",
        "kind": "import",
        "definition": "import { Route } from 'react-router-dom'",
        "fullPath": "node_modules/react-router-dom",
        "filename": "react-router-dom",
        "location": {
          "file": "src/App.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "bad901d6ec64",
        "name": "Layout",
        "kind": "import",
        "definition": "import Layout from './components/Layout'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout",
        "filename": "Layout",
        "location": {
          "file": "src/App.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "b0d25a55181c",
        "name": "Home",
        "kind": "import",
        "definition": "import Home from './components/Home'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Home",
        "filename": "Home",
        "location": {
          "file": "src/App.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "f22963a40202",
        "name": "Chat",
        "kind": "import",
        "definition": "import Chat from './components/Chat'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat",
        "filename": "Chat",
        "location": {
          "file": "src/App.tsx",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": [
          {
            "id": "8d7a0b4e",
            "typeId": "f22963a40202",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 29,
              "column": 19
            },
            "context": "property",
            "contextDetails": "GeminiConversationManager.chat",
            "usageType": "local",
            "sourceText": "Chat"
          }
        ]
      },
      {
        "id": "7861860f1773",
        "name": "ViewChats",
        "kind": "import",
        "definition": "import ViewChats from './components/ViewChats'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats",
        "filename": "ViewChats",
        "location": {
          "file": "src/App.tsx",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "e0673e1ee212",
        "name": "Settings",
        "kind": "import",
        "definition": "import Settings from './components/Settings'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings",
        "filename": "Settings",
        "location": {
          "file": "src/App.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "726dce01c965",
        "name": "LogViewer",
        "kind": "import",
        "definition": "import LogViewer from './components/LogViewer'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer",
        "filename": "LogViewer",
        "location": {
          "file": "src/App.tsx",
          "line": 11,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "7ca852a4cb61",
        "name": "ToastProvider",
        "kind": "import",
        "definition": "import { ToastProvider } from './contexts/ToastContext'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext",
        "filename": "ToastContext",
        "location": {
          "file": "src/App.tsx",
          "line": 12,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "49dc9f25c663",
        "name": "StarredChatsProvider",
        "kind": "import",
        "definition": "import { StarredChatsProvider } from './contexts/StarredChatsContext'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext",
        "filename": "StarredChatsContext",
        "location": {
          "file": "src/App.tsx",
          "line": 13,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "2b5634d600f0",
        "name": "RecentChatsProvider",
        "kind": "import",
        "definition": "import { RecentChatsProvider } from './contexts/RecentChatsContext'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext",
        "filename": "RecentChatsContext",
        "location": {
          "file": "src/App.tsx",
          "line": 14,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "f9b602122602",
        "name": "ToastContainer",
        "kind": "import",
        "definition": "import { ToastContainer } from './components/ui/ToastContainer'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer",
        "filename": "ToastContainer",
        "location": {
          "file": "src/App.tsx",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/App.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "25192843b7e8",
        "name": "useToast",
        "kind": "import",
        "definition": "import { useToast } from '../../contexts/ToastContext'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext",
        "filename": "ToastContext",
        "location": {
          "file": "src/components/ui/ImportWebChatModal.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "cd60e0edcb0d",
        "name": "createRoot",
        "kind": "import",
        "definition": "import { createRoot } from 'react-dom/client'",
        "fullPath": "node_modules/react-dom/client",
        "filename": "client",
        "location": {
          "file": "src/index.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "9877d7f0420c",
        "name": "App",
        "kind": "import",
        "definition": "import App from './App'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/App",
        "filename": "App",
        "location": {
          "file": "src/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3c4d68f25189",
        "name": "RecentChatsContextType",
        "kind": "interface",
        "definition": "interface RecentChatsContextType {\n  recentChats: any[];\n  isLoading: boolean;\n  error: string | null;\n  refreshRecentChats: () => Promise<void>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
        "filename": "RecentChatsContext.tsx",
        "location": {
          "file": "src/contexts/RecentChatsContext.tsx",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "29d63132c69c",
        "name": "RecentChatsProviderProps",
        "kind": "interface",
        "definition": "interface RecentChatsProviderProps {\n  children: React.ReactNode;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
        "filename": "RecentChatsContext.tsx",
        "location": {
          "file": "src/contexts/RecentChatsContext.tsx",
          "line": 16,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "7736ac2a2aec",
        "name": "createContext",
        "kind": "import",
        "definition": "import { createContext } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/contexts/ToastContext.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "c5cf26987691",
        "name": "useContext",
        "kind": "import",
        "definition": "import { useContext } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/contexts/ToastContext.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "0f78b00ff929",
        "name": "useRecentChats",
        "kind": "import",
        "definition": "import { useRecentChats } from '../hooks/useRecentChats'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useRecentChats",
        "filename": "useRecentChats",
        "location": {
          "file": "src/contexts/RecentChatsContext.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "4916ba198ac4",
        "name": "StarredChatsContextType",
        "kind": "interface",
        "definition": "interface StarredChatsContextType {\n  starredChats: any[];\n  isLoading: boolean;\n  error: string | null;\n  refreshStarredChats: () => Promise<void>;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
        "filename": "StarredChatsContext.tsx",
        "location": {
          "file": "src/contexts/StarredChatsContext.tsx",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "b9ad431dc2d6",
        "name": "StarredChatsProviderProps",
        "kind": "interface",
        "definition": "interface StarredChatsProviderProps {\n  children: React.ReactNode;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
        "filename": "StarredChatsContext.tsx",
        "location": {
          "file": "src/contexts/StarredChatsContext.tsx",
          "line": 16,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "11f7dcded401",
        "name": "useStarredChats",
        "kind": "import",
        "definition": "import { useStarredChats } from '../hooks/useStarredChats'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/hooks/useStarredChats",
        "filename": "useStarredChats",
        "location": {
          "file": "src/contexts/StarredChatsContext.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "871ef210b5a7",
        "name": "ToastContextType",
        "kind": "interface",
        "definition": "interface ToastContextType {\n  toasts: ToastData[];\n  showToast: (toast: Omit<ToastData, 'id'>) => void;\n  dismissToast: (id: string) => void;\n  showSuccess: (title: string, message?: string, details?: string[]) => void;\n  showError: (title: string, message?: string, details?: string[]) => void;\n  showInfo: (title: string, message?: string, details?: string[]) => void;\n  showBatchImportResults: (success: number, failed: number, errors: string[]) => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
        "filename": "ToastContext.tsx",
        "location": {
          "file": "src/contexts/ToastContext.tsx",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "32414a94fc9f",
        "name": "ToastProviderProps",
        "kind": "interface",
        "definition": "interface ToastProviderProps {\n  children: ReactNode;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
        "filename": "ToastContext.tsx",
        "location": {
          "file": "src/contexts/ToastContext.tsx",
          "line": 19,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "deb37d1eb961",
        "name": "ReactNode",
        "kind": "import",
        "definition": "import { ReactNode } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/contexts/ToastContext.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/ToastContext.tsx",
        "isLocal": false,
        "references": [
          {
            "id": "37b6e533",
            "typeId": "deb37d1eb961",
            "location": {
              "file": "src/contexts/ToastContext.tsx",
              "line": 20,
              "column": 13
            },
            "context": "property",
            "contextDetails": "ToastProviderProps.children",
            "usageType": "imported",
            "sourceText": "ReactNode"
          }
        ]
      },
      {
        "id": "4de9f684b079",
        "name": "ToastData",
        "kind": "import",
        "definition": "import { ToastData } from './Toast'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast",
        "filename": "Toast",
        "location": {
          "file": "src/components/ui/ToastContainer.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer.tsx",
        "isLocal": true,
        "references": [
          {
            "id": "a27d520c",
            "typeId": "4de9f684b079",
            "location": {
              "file": "src/components/ui/Toast.tsx",
              "line": 18,
              "column": 10
            },
            "context": "property",
            "contextDetails": "ToastProps.toast",
            "usageType": "local",
            "sourceText": "ToastData"
          },
          {
            "id": "94366797",
            "typeId": "4de9f684b079",
            "location": {
              "file": "src/components/ui/ToastContainer.tsx",
              "line": 8,
              "column": 11
            },
            "context": "property",
            "contextDetails": "ToastContainerProps.toasts",
            "usageType": "local",
            "sourceText": "ToastData[]"
          },
          {
            "id": "44599005",
            "typeId": "4de9f684b079",
            "location": {
              "file": "src/contexts/ToastContext.tsx",
              "line": 8,
              "column": 11
            },
            "context": "property",
            "contextDetails": "ToastContextType.toasts",
            "usageType": "local",
            "sourceText": "ToastData[]"
          }
        ]
      },
      {
        "id": "243fdb52fb7a",
        "name": "render",
        "kind": "import",
        "definition": "import { render } from '@testing-library/react'",
        "fullPath": "node_modules/@testing-library/react",
        "filename": "react",
        "location": {
          "file": "tests/utils/render.tsx",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/tests/utils/render.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "144b757e174a",
        "name": "KeyboardEvent",
        "kind": "import",
        "definition": "import { KeyboardEvent } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "55e7ea756324",
        "name": "useRef",
        "kind": "import",
        "definition": "import { useRef } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/components/ui/RenameChatModal.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "93a9e059efb3",
        "name": "ChevronDown",
        "kind": "import",
        "definition": "import { ChevronDown } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/WebSearchDisplay.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "bf4f0fe1b19f",
        "name": "Check",
        "kind": "import",
        "definition": "import { Check } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "32fbb6cfe6db",
        "name": "Send",
        "kind": "import",
        "definition": "import { Send } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "e54d22c4c2aa",
        "name": "Loader2",
        "kind": "import",
        "definition": "import { Loader2 } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/DeleteMultipleChatsModal.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "843be783a558",
        "name": "Plus",
        "kind": "import",
        "definition": "import { Plus } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "4df82f794a3a",
        "name": "X",
        "kind": "import",
        "definition": "import { X } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/Toast.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "d4e670d3be7a",
        "name": "useParams",
        "kind": "import",
        "definition": "import { useParams } from 'react-router-dom'",
        "fullPath": "node_modules/react-router-dom",
        "filename": "react-router-dom",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "33762746df88",
        "name": "useLocation",
        "kind": "import",
        "definition": "import { useLocation } from 'react-router-dom'",
        "fullPath": "node_modules/react-router-dom",
        "filename": "react-router-dom",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "749db62cafa7",
        "name": "Button",
        "kind": "import",
        "definition": "import { Button } from './button'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/button",
        "filename": "button",
        "location": {
          "file": "src/components/ui/FileLozenge.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "f8effe404ee1",
        "name": "Select",
        "kind": "import",
        "definition": "import { Select } from '../ui/select'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select",
        "filename": "select",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "3b75d3fc08f4",
        "name": "SelectContent",
        "kind": "import",
        "definition": "import { SelectContent } from '../ui/select'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select",
        "filename": "select",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "bb07762ab6f9",
        "name": "SelectItem",
        "kind": "import",
        "definition": "import { SelectItem } from '../ui/select'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select",
        "filename": "select",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "91b7333fe3fa",
        "name": "SelectTrigger",
        "kind": "import",
        "definition": "import { SelectTrigger } from '../ui/select'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select",
        "filename": "select",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "dce8bc7ac653",
        "name": "SelectValue",
        "kind": "import",
        "definition": "import { SelectValue } from '../ui/select'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select",
        "filename": "select",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "6d8e801594c5",
        "name": "Conversation",
        "kind": "import",
        "definition": "import { Conversation } from 'types/conversation'",
        "fullPath": "node_modules/types/conversation",
        "filename": "conversation",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": [
          {
            "id": "226d20d4",
            "typeId": "6d8e801594c5",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 123,
              "column": 68
            },
            "context": "return",
            "contextDetails": "ConversationRepository.transformToConversationSync",
            "usageType": "imported",
            "sourceText": "Conversation"
          },
          {
            "id": "58d214bd",
            "typeId": "6d8e801594c5",
            "location": {
              "file": "src/repositories/ConversationRepository.ts",
              "line": 145,
              "column": 42
            },
            "context": "return",
            "contextDetails": "ConversationRepository.create",
            "usageType": "imported",
            "sourceText": "Conversation"
          },
          {
            "id": "20551a0d",
            "typeId": "6d8e801594c5",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 44,
              "column": 26
            },
            "context": "property",
            "contextDetails": "ConversationState.currentConversation",
            "usageType": "imported",
            "sourceText": "Conversation | null"
          }
        ]
      },
      {
        "id": "096448d979e2",
        "name": "Message",
        "kind": "import",
        "definition": "import { Message } from 'types/conversation'",
        "fullPath": "node_modules/types/conversation",
        "filename": "conversation",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": [
          {
            "id": "768e3b37",
            "typeId": "096448d979e2",
            "location": {
              "file": "src/managers/AnthropicConversationManager.ts",
              "line": 279,
              "column": 20
            },
            "context": "return",
            "contextDetails": "AnthropicConversationManager.getMessages",
            "usageType": "imported",
            "sourceText": "Message[]"
          },
          {
            "id": "5c69dfb9",
            "typeId": "096448d979e2",
            "location": {
              "file": "src/managers/GeminiConversationManager.ts",
              "line": 200,
              "column": 20
            },
            "context": "return",
            "contextDetails": "GeminiConversationManager.getMessages",
            "usageType": "imported",
            "sourceText": "Message[]"
          },
          {
            "id": "c767c179",
            "typeId": "096448d979e2",
            "location": {
              "file": "src/managers/OpenAIConversationManager.ts",
              "line": 209,
              "column": 20
            },
            "context": "return",
            "contextDetails": "OpenAIConversationManager.getMessages",
            "usageType": "imported",
            "sourceText": "Message[]"
          },
          {
            "id": "c29aac38",
            "typeId": "096448d979e2",
            "location": {
              "file": "src/messages/AnthropicMessage.ts",
              "line": 11,
              "column": 39
            },
            "context": "extends",
            "contextDetails": "AnthropicMessage",
            "usageType": "imported",
            "sourceText": "Message<Anthropic.Messages.MessageParam>"
          },
          {
            "id": "a9936fed",
            "typeId": "096448d979e2",
            "location": {
              "file": "src/messages/GeminiMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "GeminiMessage",
            "usageType": "imported",
            "sourceText": "Message<Content>"
          },
          {
            "id": "883c1c58",
            "typeId": "096448d979e2",
            "location": {
              "file": "src/messages/OpenAIMessage.ts",
              "line": 11,
              "column": 36
            },
            "context": "extends",
            "contextDetails": "OpenAIMessage",
            "usageType": "imported",
            "sourceText": "Message<OpenAI.Responses.EasyInputMessage>"
          },
          {
            "id": "5355c34f",
            "typeId": "096448d979e2",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 32,
              "column": 15
            },
            "context": "property",
            "contextDetails": "Conversation.messages",
            "usageType": "imported",
            "sourceText": "Message[]"
          }
        ]
      },
      {
        "id": "c83c2af15f9e",
        "name": "generateConversationName",
        "kind": "import",
        "definition": "import { generateConversationName } from 'types/conversation'",
        "fullPath": "node_modules/types/conversation",
        "filename": "conversation",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "30a076042365",
        "name": "sanitizeMessageForDisplay",
        "kind": "import",
        "definition": "import { sanitizeMessageForDisplay } from 'types/conversation'",
        "fullPath": "node_modules/types/conversation",
        "filename": "conversation",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "e06016c997ea",
        "name": "sanitizeUserMessageForDisplay",
        "kind": "import",
        "definition": "import { sanitizeUserMessageForDisplay } from 'types/conversation'",
        "fullPath": "node_modules/types/conversation",
        "filename": "conversation",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "c9eaad3baa23",
        "name": "ReactMarkdown",
        "kind": "import",
        "definition": "import ReactMarkdown from 'react-markdown'",
        "fullPath": "node_modules/react-markdown",
        "filename": "react-markdown",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "f60673565c38",
        "name": "TokenDisplay",
        "kind": "import",
        "definition": "import TokenDisplay from '../ui/TokenDisplay'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay",
        "filename": "TokenDisplay",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 14,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "fca76d7ab58d",
        "name": "ChatSettings",
        "kind": "import",
        "definition": "import ChatSettings from '../ui/ChatSettings'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings",
        "filename": "ChatSettings",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 15,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "01c8e7754261",
        "name": "FileLozenge",
        "kind": "import",
        "definition": "import FileLozenge from '../ui/FileLozenge'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge",
        "filename": "FileLozenge",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 16,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "989d7d5c5016",
        "name": "ContentRenderer",
        "kind": "import",
        "definition": "import ContentRenderer from '../ui/ContentRenderer'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer",
        "filename": "ContentRenderer",
        "location": {
          "file": "src/components/Chat/index.tsx",
          "line": 17,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Chat/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "1c296e7e7282",
        "name": "LayoutProps",
        "kind": "interface",
        "definition": "interface LayoutProps {\n  children: React.ReactNode;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "filename": "index.tsx",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 10,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "e6f6aa4c4e13",
        "name": "NavLink",
        "kind": "import",
        "definition": "import { NavLink } from 'react-router-dom'",
        "fullPath": "node_modules/react-router-dom",
        "filename": "react-router-dom",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "460871e1f2b7",
        "name": "useNavigate",
        "kind": "import",
        "definition": "import { useNavigate } from 'react-router-dom'",
        "fullPath": "node_modules/react-router-dom",
        "filename": "react-router-dom",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "cf9bbf7b2bd3",
        "name": "Home",
        "kind": "import",
        "definition": "import { Home } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "4b92914bf78f",
        "name": "MessageCircle",
        "kind": "import",
        "definition": "import { MessageCircle } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "436bea6ef374",
        "name": "Folder",
        "kind": "import",
        "definition": "import { Folder } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "ff58d2a5f2a4",
        "name": "Settings",
        "kind": "import",
        "definition": "import { Settings } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "4645a5b2495c",
        "name": "StarredChats",
        "kind": "import",
        "definition": "import StarredChats from '../StarredChats'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/StarredChats",
        "filename": "StarredChats",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "bb40637697f6",
        "name": "RecentChats",
        "kind": "import",
        "definition": "import RecentChats from '../RecentChats'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/RecentChats",
        "filename": "RecentChats",
        "location": {
          "file": "src/components/Layout/index.tsx",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Layout/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "2f0d5e52edb4",
        "name": "ArrowLeft",
        "kind": "import",
        "definition": "import { ArrowLeft } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/LogViewer/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "9bce8526cecd",
        "name": "Tabs",
        "kind": "import",
        "definition": "import { Tabs } from '../ui/tabs'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/tabs",
        "filename": "tabs",
        "location": {
          "file": "src/components/LogViewer/index.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "accf170232bc",
        "name": "TabsContent",
        "kind": "import",
        "definition": "import { TabsContent } from '../ui/tabs'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/tabs",
        "filename": "tabs",
        "location": {
          "file": "src/components/LogViewer/index.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "44ebc0e3bc0a",
        "name": "TabsList",
        "kind": "import",
        "definition": "import { TabsList } from '../ui/tabs'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/tabs",
        "filename": "tabs",
        "location": {
          "file": "src/components/LogViewer/index.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "ac96ce5df498",
        "name": "TabsTrigger",
        "kind": "import",
        "definition": "import { TabsTrigger } from '../ui/tabs'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/tabs",
        "filename": "tabs",
        "location": {
          "file": "src/components/LogViewer/index.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/LogViewer/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "1ece4b824ec7",
        "name": "Clock",
        "kind": "import",
        "definition": "import { Clock } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/RecentChats/index.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/RecentChats/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "220b04e32d23",
        "name": "useRecentChatsContext",
        "kind": "import",
        "definition": "import { useRecentChatsContext } from '../../contexts/RecentChatsContext'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/RecentChatsContext",
        "filename": "RecentChatsContext",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "181ec0458b35",
        "name": "ChatActionMenu",
        "kind": "import",
        "definition": "import ChatActionMenu from '../ui/ChatActionMenu'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu",
        "filename": "ChatActionMenu",
        "location": {
          "file": "src/components/StarredChats/index.tsx",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/StarredChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "b28fbcb31691",
        "name": "getVendorFavicon",
        "kind": "import",
        "definition": "import { getVendorFavicon } from '../../utils/vendorFavicons'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/vendorFavicons",
        "filename": "vendorFavicons",
        "location": {
          "file": "src/components/StarredChats/index.tsx",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/StarredChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "9e200b874f72",
        "name": "getVendorName",
        "kind": "import",
        "definition": "import { getVendorName } from '../../utils/vendorFavicons'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/utils/vendorFavicons",
        "filename": "vendorFavicons",
        "location": {
          "file": "src/components/StarredChats/index.tsx",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/StarredChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "95989eecc5ef",
        "name": "ApiKeyListProps",
        "kind": "interface",
        "definition": "interface ApiKeyListProps {\n  apiKeys: ApiKey[];\n  onRemoveKey: (id: string) => void;\n  onAddKey: () => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyList.tsx",
        "filename": "ApiKeyList.tsx",
        "location": {
          "file": "src/components/Settings/ApiKeyList.tsx",
          "line": 8,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "d97af366185a",
        "name": "ApiKeyModalProps",
        "kind": "interface",
        "definition": "interface ApiKeyModalProps {\n  vendors: string[];\n  onSubmit: (keyData: { name: string; vendor: string; key: string }) => void;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "filename": "ApiKeyModal.tsx",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 23,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "0bb7ffea25d2",
        "name": "Eye",
        "kind": "import",
        "definition": "import { Eye } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "25d14b9d7a4b",
        "name": "EyeOff",
        "kind": "import",
        "definition": "import { EyeOff } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "aef147bcec14",
        "name": "Dialog",
        "kind": "import",
        "definition": "import { Dialog } from '../ui/dialog'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog",
        "filename": "dialog",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "b6a45d1cc6e6",
        "name": "DialogContent",
        "kind": "import",
        "definition": "import { DialogContent } from '../ui/dialog'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog",
        "filename": "dialog",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "71321ddd1903",
        "name": "DialogHeader",
        "kind": "import",
        "definition": "import { DialogHeader } from '../ui/dialog'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog",
        "filename": "dialog",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "59864a88dbb8",
        "name": "DialogTitle",
        "kind": "import",
        "definition": "import { DialogTitle } from '../ui/dialog'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog",
        "filename": "dialog",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "ee46b2f459d1",
        "name": "Input",
        "kind": "import",
        "definition": "import { Input } from '../ui/input'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/input",
        "filename": "input",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 13,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "1911ee250efe",
        "name": "Label",
        "kind": "import",
        "definition": "import { Label } from '../ui/label'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/label",
        "filename": "label",
        "location": {
          "file": "src/components/Settings/ApiKeyModal.tsx",
          "line": 14,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "4cdb75b90ac6",
        "name": "isSuccess",
        "kind": "import",
        "definition": "import { isSuccess } from '../../types/result'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/result",
        "filename": "result",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "42e65512275a",
        "name": "ApiKeyList",
        "kind": "import",
        "definition": "import ApiKeyList from './ApiKeyList'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyList",
        "filename": "ApiKeyList",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "fc7fb50c14ca",
        "name": "ApiKeyModal",
        "kind": "import",
        "definition": "import ApiKeyModal from './ApiKeyModal'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/ApiKeyModal",
        "filename": "ApiKeyModal",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "9f876ea0919b",
        "name": "Card",
        "kind": "import",
        "definition": "import { Card } from '../ui/card'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card",
        "filename": "card",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "0a2c1b805515",
        "name": "CardContent",
        "kind": "import",
        "definition": "import { CardContent } from '../ui/card'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card",
        "filename": "card",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "e816eb834e8b",
        "name": "CardHeader",
        "kind": "import",
        "definition": "import { CardHeader } from '../ui/card'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card",
        "filename": "card",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "7a2819ac9eac",
        "name": "CardTitle",
        "kind": "import",
        "definition": "import { CardTitle } from '../ui/card'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/card",
        "filename": "card",
        "location": {
          "file": "src/components/Settings/index.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/Settings/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "bad01662a95a",
        "name": "Star",
        "kind": "import",
        "definition": "import { Star } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "f741a08d7090",
        "name": "useStarredChatsContext",
        "kind": "import",
        "definition": "import { useStarredChatsContext } from '../../contexts/StarredChatsContext'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/contexts/StarredChatsContext",
        "filename": "StarredChatsContext",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "6a2f1212aad2",
        "name": "useMemo",
        "kind": "import",
        "definition": "import { useMemo } from 'react'",
        "fullPath": "node_modules/react",
        "filename": "react",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "47abc1b29dd8",
        "name": "Search",
        "kind": "import",
        "definition": "import { Search } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "a84c7af58540",
        "name": "Edit3",
        "kind": "import",
        "definition": "import { Edit3 } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "0580ac5dee36",
        "name": "Trash2",
        "kind": "import",
        "definition": "import { Trash2 } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "7bebd60ef3f8",
        "name": "MoreHorizontal",
        "kind": "import",
        "definition": "import { MoreHorizontal } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "a5466c495d42",
        "name": "Upload",
        "kind": "import",
        "definition": "import { Upload } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/ImportWebChatModal.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "25157e270d18",
        "name": "Copy",
        "kind": "import",
        "definition": "import { Copy } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "c466e37f4b8d",
        "name": "formatRelativeTime",
        "kind": "import",
        "definition": "import { formatRelativeTime } from '../../lib/time-utils'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/lib/time-utils",
        "filename": "time-utils",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "0b984fbbdf5a",
        "name": "useDebounce",
        "kind": "import",
        "definition": "import { useDebounce } from '../../lib/utils'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/lib/utils",
        "filename": "utils",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "4a2d2d08fc2d",
        "name": "Model",
        "kind": "import",
        "definition": "import { Model } from '../../Models'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/Models",
        "filename": "Models",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": true,
        "references": [
          {
            "id": "4448fc2c",
            "typeId": "4a2d2d08fc2d",
            "location": {
              "file": "src/Models.ts",
              "line": 6,
              "column": 13
            },
            "context": "property",
            "contextDetails": "Vendor.models",
            "usageType": "local",
            "sourceText": "Model[]"
          },
          {
            "id": "522c1b52",
            "typeId": "4a2d2d08fc2d",
            "location": {
              "file": "src/Models.ts",
              "line": 65,
              "column": 38
            },
            "context": "return",
            "contextDetails": "Model.getModelById",
            "usageType": "local",
            "sourceText": "Model | undefined"
          },
          {
            "id": "78d3ded0",
            "typeId": "4a2d2d08fc2d",
            "location": {
              "file": "src/Models.ts",
              "line": 73,
              "column": 51
            },
            "context": "return",
            "contextDetails": "Model.getModelsByVendor",
            "usageType": "local",
            "sourceText": "Model[]"
          },
          {
            "id": "190661eb",
            "typeId": "4a2d2d08fc2d",
            "location": {
              "file": "src/Models.ts",
              "line": 78,
              "column": 28
            },
            "context": "return",
            "contextDetails": "Model.getAllModels",
            "usageType": "local",
            "sourceText": "Model[]"
          },
          {
            "id": "b33bc4c9",
            "typeId": "4a2d2d08fc2d",
            "location": {
              "file": "src/types/conversation.ts",
              "line": 45,
              "column": 20
            },
            "context": "property",
            "contextDetails": "ConversationState.selectedModel",
            "usageType": "local",
            "sourceText": "Model"
          }
        ]
      },
      {
        "id": "6a7f71cc92be",
        "name": "RenameChatModal",
        "kind": "import",
        "definition": "import { RenameChatModal } from './RenameChatModal'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal",
        "filename": "RenameChatModal",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "f6446dd1dc7f",
        "name": "DeleteChatModal",
        "kind": "import",
        "definition": "import { DeleteChatModal } from './DeleteChatModal'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal",
        "filename": "DeleteChatModal",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 8,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "68ec32363a97",
        "name": "DeleteMultipleChatsModal",
        "kind": "import",
        "definition": "import { DeleteMultipleChatsModal } from '../ui/DeleteMultipleChatsModal'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal",
        "filename": "DeleteMultipleChatsModal",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 12,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "db07a7a86038",
        "name": "ImportWebChatModal",
        "kind": "import",
        "definition": "import { ImportWebChatModal } from '../ui/ImportWebChatModal'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal",
        "filename": "ImportWebChatModal",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 13,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "69717c667e0f",
        "name": "ConversationTooltip",
        "kind": "import",
        "definition": "import ConversationTooltip from '../ui/ConversationTooltip'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ConversationTooltip",
        "filename": "ConversationTooltip",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 14,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "75b8fb351374",
        "name": "ConversationWithAggregates",
        "kind": "import",
        "definition": "import { ConversationWithAggregates } from '../../types/conversation'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/types/conversation",
        "filename": "conversation",
        "location": {
          "file": "src/components/ViewChats/index.tsx",
          "line": 17,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ViewChats/index.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "d768ddcbace7",
        "name": "ChatActionMenuProps",
        "kind": "interface",
        "definition": "interface ChatActionMenuProps {\n  conversationId: string;\n  conversationName: string;\n  isStarred: boolean;\n  onConversationUpdate?: () => void;\n  className?: string;\n  menuPosition?: 'left' | 'right';\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatActionMenu.tsx",
        "filename": "ChatActionMenu.tsx",
        "location": {
          "file": "src/components/ui/ChatActionMenu.tsx",
          "line": 11,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "159fbad19bc7",
        "name": "ChatSettingsProps",
        "kind": "interface",
        "definition": "interface ChatSettingsProps {\n  showTokens: boolean;\n  onToggle: (show: boolean) => void;\n  conversationId: string;\n  conversationName: string;\n  isStarred: boolean;\n  onConversationUpdate?: () => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ChatSettings.tsx",
        "filename": "ChatSettings.tsx",
        "location": {
          "file": "src/components/ui/ChatSettings.tsx",
          "line": 13,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "cfca204c56c0",
        "name": "CitationLozengeProps",
        "kind": "interface",
        "definition": "interface CitationLozengeProps {\n  fullTitle: string;\n  truncatedTitle: string;\n  citationUrl: string;\n  faviconUrl: string;\n  siteName: string;\n  citationIndex: number;\n  className?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge.tsx",
        "filename": "CitationLozenge.tsx",
        "location": {
          "file": "src/components/ui/CitationLozenge.tsx",
          "line": 6,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "14d4500902da",
        "name": "ContentRendererProps",
        "kind": "interface",
        "definition": "interface ContentRendererProps {\n  content: string;\n  className?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "filename": "ContentRenderer.tsx",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 12,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "fd6e14afccf6",
        "name": "WebSearchData",
        "kind": "interface",
        "definition": "interface WebSearchData {\n  searchId: string;\n  query: string;\n  results: Array<{\n    title: string;\n    url: string;\n    domain: string;\n    faviconUrl?: string;\n  }>;\n  resultCount: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "filename": "ContentRenderer.tsx",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 17,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "0d355c9b539b",
        "name": "WebSearchDisplay",
        "kind": "import",
        "definition": "import WebSearchDisplay from './WebSearchDisplay'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay",
        "filename": "WebSearchDisplay",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 9,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "bdf153859ed9",
        "name": "CitationLozenge",
        "kind": "import",
        "definition": "import CitationLozenge from './CitationLozenge'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/CitationLozenge",
        "filename": "CitationLozenge",
        "location": {
          "file": "src/components/ui/ContentRenderer.tsx",
          "line": 10,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ContentRenderer.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "145b7682390d",
        "name": "ConversationTooltipProps",
        "kind": "interface",
        "definition": "interface ConversationTooltipProps {\n  conversationId: string;\n  children: React.ReactNode;\n  className?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ConversationTooltip.tsx",
        "filename": "ConversationTooltip.tsx",
        "location": {
          "file": "src/components/ui/ConversationTooltip.tsx",
          "line": 6,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "449cf1edbad0",
        "name": "DeleteChatModalProps",
        "kind": "interface",
        "definition": "interface DeleteChatModalProps {\n  isOpen: boolean;\n  chatName: string;\n  onDelete: () => void;\n  onCancel: () => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteChatModal.tsx",
        "filename": "DeleteChatModal.tsx",
        "location": {
          "file": "src/components/ui/DeleteChatModal.tsx",
          "line": 6,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "fb0dcf0c16e2",
        "name": "DeleteMultipleChatsModalProps",
        "kind": "interface",
        "definition": "interface DeleteMultipleChatsModalProps {\n  isOpen: boolean;\n  chatCount: number;\n  onDelete: () => void;\n  onCancel: () => void;\n  isDeleting?: boolean;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/DeleteMultipleChatsModal.tsx",
        "filename": "DeleteMultipleChatsModal.tsx",
        "location": {
          "file": "src/components/ui/DeleteMultipleChatsModal.tsx",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "8189158d71a6",
        "name": "FileLozengeProps",
        "kind": "interface",
        "definition": "interface FileLozengeProps {\n  fileName: string;\n  lineCount?: number;\n  filePath: string;\n  onRemove?: () => void;\n  isImage?: boolean;\n  isPDF?: boolean;\n  pageCount?: number;\n  fileSize?: number;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/FileLozenge.tsx",
        "filename": "FileLozenge.tsx",
        "location": {
          "file": "src/components/ui/FileLozenge.tsx",
          "line": 8,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "50e55edb97f6",
        "name": "ImportWebChatModalProps",
        "kind": "interface",
        "definition": "interface ImportWebChatModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onImportSuccess?: (conversationId: string) => void;\n  onBatchImportComplete?: () => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ImportWebChatModal.tsx",
        "filename": "ImportWebChatModal.tsx",
        "location": {
          "file": "src/components/ui/ImportWebChatModal.tsx",
          "line": 8,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "37c565387c16",
        "name": "AlertCircle",
        "kind": "import",
        "definition": "import { AlertCircle } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/Toast.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "a9852b8b6b45",
        "name": "RenameChatModalProps",
        "kind": "interface",
        "definition": "interface RenameChatModalProps {\n  isOpen: boolean;\n  currentName: string;\n  onSave: (newName: string) => void;\n  onCancel: () => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/RenameChatModal.tsx",
        "filename": "RenameChatModal.tsx",
        "location": {
          "file": "src/components/ui/RenameChatModal.tsx",
          "line": 6,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "86c99b45f41c",
        "name": "ToastData",
        "kind": "interface",
        "definition": "interface ToastData {\n  id: string;\n  type: 'success' | 'error' | 'info';\n  title: string;\n  message?: string;\n  details?: string[];\n  duration?: number;\n  persistent?: boolean;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
        "filename": "Toast.tsx",
        "location": {
          "file": "src/components/ui/Toast.tsx",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "852cb96a",
            "typeId": "86c99b45f41c",
            "location": {
              "file": "src/components/ui/Toast.tsx",
              "line": 18,
              "column": 10
            },
            "context": "property",
            "contextDetails": "ToastProps.toast",
            "usageType": "local",
            "sourceText": "ToastData"
          },
          {
            "id": "17c911a4",
            "typeId": "86c99b45f41c",
            "location": {
              "file": "src/components/ui/ToastContainer.tsx",
              "line": 8,
              "column": 11
            },
            "context": "property",
            "contextDetails": "ToastContainerProps.toasts",
            "usageType": "local",
            "sourceText": "ToastData[]"
          },
          {
            "id": "d048a0ed",
            "typeId": "86c99b45f41c",
            "location": {
              "file": "src/contexts/ToastContext.tsx",
              "line": 8,
              "column": 11
            },
            "context": "property",
            "contextDetails": "ToastContextType.toasts",
            "usageType": "local",
            "sourceText": "ToastData[]"
          }
        ]
      },
      {
        "id": "f4d37334a6e0",
        "name": "ToastProps",
        "kind": "interface",
        "definition": "interface ToastProps {\n  toast: ToastData;\n  onDismiss: (id: string) => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
        "filename": "Toast.tsx",
        "location": {
          "file": "src/components/ui/Toast.tsx",
          "line": 17,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "9664967fa778",
        "name": "CheckCircle",
        "kind": "import",
        "definition": "import { CheckCircle } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/Toast.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "be2046d587c4",
        "name": "Info",
        "kind": "import",
        "definition": "import { Info } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/Toast.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "fc17790dffff",
        "name": "ToastContainerProps",
        "kind": "interface",
        "definition": "interface ToastContainerProps {\n  toasts: ToastData[];\n  onDismiss: (id: string) => void;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer.tsx",
        "filename": "ToastContainer.tsx",
        "location": {
          "file": "src/components/ui/ToastContainer.tsx",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "9acbc548cd7b",
        "name": "Toast",
        "kind": "import",
        "definition": "import { Toast } from './Toast'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/Toast",
        "filename": "Toast",
        "location": {
          "file": "src/components/ui/ToastContainer.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/ToastContainer.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "520f40fcb8f5",
        "name": "TokenDisplayProps",
        "kind": "interface",
        "definition": "interface TokenDisplayProps {\n  inputTokens: number;\n  outputTokens: number;\n  totalTokens: number;\n  maxTokens?: number;\n  className?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/TokenDisplay.tsx",
        "filename": "TokenDisplay.tsx",
        "location": {
          "file": "src/components/ui/TokenDisplay.tsx",
          "line": 6,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "46b9a571805b",
        "name": "WebSearchResult",
        "kind": "interface",
        "definition": "interface WebSearchResult {\n  title: string;\n  url: string;\n  domain: string;\n  faviconUrl?: string;\n  originalUrl?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
        "filename": "WebSearchDisplay.tsx",
        "location": {
          "file": "src/components/ui/WebSearchDisplay.tsx",
          "line": 7,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": [
          {
            "id": "2fd47d80",
            "typeId": "46b9a571805b",
            "location": {
              "file": "src/components/ui/WebSearchDisplay.tsx",
              "line": 17,
              "column": 12
            },
            "context": "property",
            "contextDetails": "WebSearchDisplayProps.results",
            "usageType": "local",
            "sourceText": "WebSearchResult[]"
          },
          {
            "id": "567bd43b",
            "typeId": "46b9a571805b",
            "location": {
              "file": "src/services/UrlEnrichmentService.ts",
              "line": 211,
              "column": 69
            },
            "context": "return",
            "contextDetails": "UrlEnrichmentService.createFallbackResult",
            "usageType": "local",
            "sourceText": "WebSearchResult"
          },
          {
            "id": "8b035ec3",
            "typeId": "46b9a571805b",
            "location": {
              "file": "src/utils/GeminiContentProcessor.ts",
              "line": 150,
              "column": 23
            },
            "context": "parameter",
            "contextDetails": "GeminiContentProcessor.addInlineCitations(enrichedResults)",
            "usageType": "local",
            "sourceText": "WebSearchResult[]"
          },
          {
            "id": "cce2065b",
            "typeId": "46b9a571805b",
            "location": {
              "file": "src/utils/GeminiContentProcessor.ts",
              "line": 284,
              "column": 14
            },
            "context": "parameter",
            "contextDetails": "GeminiContentProcessor.generateWebSearchHTML(results)",
            "usageType": "local",
            "sourceText": "WebSearchResult[]"
          },
          {
            "id": "3a366e94",
            "typeId": "46b9a571805b",
            "location": {
              "file": "src/utils/OpenAIContentProcessor.ts",
              "line": 362,
              "column": 79
            },
            "context": "return",
            "contextDetails": "OpenAIContentProcessor.transformWebSearchSources",
            "usageType": "local",
            "sourceText": "WebSearchResult[]"
          }
        ]
      },
      {
        "id": "2befc5d49c55",
        "name": "WebSearchDisplayProps",
        "kind": "interface",
        "definition": "interface WebSearchDisplayProps {\n  query: string;\n  results: WebSearchResult[];\n  resultCount: number;\n  className?: string;\n}",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
        "filename": "WebSearchDisplay.tsx",
        "location": {
          "file": "src/components/ui/WebSearchDisplay.tsx",
          "line": 15,
          "column": 1
        },
        "isLocal": true,
        "genericParameters": [],
        "references": []
      },
      {
        "id": "f0c6171ce778",
        "name": "ChevronRight",
        "kind": "import",
        "definition": "import { ChevronRight } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/WebSearchDisplay.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "c2ca85aee487",
        "name": "Globe",
        "kind": "import",
        "definition": "import { Globe } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/WebSearchDisplay.tsx",
          "line": 5,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/WebSearchDisplay.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "78d4b6994e84",
        "name": "Slot",
        "kind": "import",
        "definition": "import { Slot } from '@radix-ui/react-slot'",
        "fullPath": "node_modules/@radix-ui/react-slot",
        "filename": "react-slot",
        "location": {
          "file": "src/components/ui/button.tsx",
          "line": 2,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/button.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "32b78c368405",
        "name": "cva",
        "kind": "import",
        "definition": "import { cva } from 'class-variance-authority'",
        "fullPath": "node_modules/class-variance-authority",
        "filename": "class-variance-authority",
        "location": {
          "file": "src/components/ui/button.tsx",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/button.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "b67135fab6a2",
        "name": "VariantProps",
        "kind": "import",
        "definition": "import { VariantProps } from 'class-variance-authority'",
        "fullPath": "node_modules/class-variance-authority",
        "filename": "class-variance-authority",
        "location": {
          "file": "src/components/ui/button.tsx",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/button.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "d2e492487438",
        "name": "cn",
        "kind": "import",
        "definition": "import { cn } from '../../lib/utils'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/src/lib/utils",
        "filename": "utils",
        "location": {
          "file": "src/components/ui/tabs.tsx",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/tabs.tsx",
        "isLocal": true,
        "references": []
      },
      {
        "id": "74e302415169",
        "name": "XIcon",
        "kind": "import",
        "definition": "import { XIcon } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/dialog.tsx",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/dialog.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "769ec4de6207",
        "name": "CheckIcon",
        "kind": "import",
        "definition": "import { CheckIcon } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/select.tsx",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "52c8e336f803",
        "name": "ChevronDownIcon",
        "kind": "import",
        "definition": "import { ChevronDownIcon } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/select.tsx",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "6896da67362a",
        "name": "ChevronUpIcon",
        "kind": "import",
        "definition": "import { ChevronUpIcon } from 'lucide-react'",
        "fullPath": "node_modules/lucide-react",
        "filename": "lucide-react",
        "location": {
          "file": "src/components/ui/select.tsx",
          "line": 3,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/src/components/ui/select.tsx",
        "isLocal": false,
        "references": []
      },
      {
        "id": "63916365ec71",
        "name": "config",
        "kind": "import",
        "definition": "import { config } from 'dotenv'",
        "fullPath": "node_modules/dotenv",
        "filename": "dotenv",
        "location": {
          "file": "test-gemini-citations.js",
          "line": 6,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/test-gemini-citations.js",
        "isLocal": false,
        "references": []
      },
      {
        "id": "705e32b6d2b0",
        "name": "GeminiConversationManager",
        "kind": "import",
        "definition": "import { GeminiConversationManager } from './dist/managers/GeminiConversationManager.js'",
        "fullPath": "/Users/slane/Documents/Code/electron/ai-client/dist/managers/GeminiConversationManager.js",
        "filename": "GeminiConversationManager.js",
        "location": {
          "file": "test-gemini-citations.js",
          "line": 7,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/test-gemini-citations.js",
        "isLocal": true,
        "references": []
      },
      {
        "id": "1a097f8f45c6",
        "name": "dirname",
        "kind": "import",
        "definition": "import { dirname } from 'path'",
        "fullPath": "node_modules/path",
        "filename": "path",
        "location": {
          "file": "data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
        "isLocal": false,
        "references": []
      },
      {
        "id": "837de4b66532",
        "name": "join",
        "kind": "import",
        "definition": "import { join } from 'path'",
        "fullPath": "node_modules/path",
        "filename": "path",
        "location": {
          "file": "data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
          "line": 4,
          "column": 1
        },
        "sourceFile": "/Users/slane/Documents/Code/electron/ai-client/data/attachments/2025/10/07/df495f34-5cbf-4f80-9fb4-bb8960fcbc04/test-citations.js",
        "isLocal": false,
        "references": []
      }
    ],
    "entryMap": {}
  }
}
